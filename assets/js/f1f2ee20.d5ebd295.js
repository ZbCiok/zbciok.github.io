"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1084],{8662:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var t=a(4848),r=a(8453),i=a(3514),s=a(5068);const l={sidebar_position:40},c="S3 Trigger Lambda",o={id:"aws/aws-lambda/examples/s3-trigger-lambda",title:"S3 Trigger Lambda",description:"Description",source:"@site/docs/aws/aws-lambda/examples/s3-trigger-lambda.mdx",sourceDirName:"aws/aws-lambda/examples",slug:"/aws/aws-lambda/examples/s3-trigger-lambda",permalink:"/docs/aws/aws-lambda/examples/s3-trigger-lambda",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"SNS Trigger Lambda",permalink:"/docs/aws/aws-lambda/examples/sns-trigger-lambda"},next:{title:"References",permalink:"/docs/aws/aws-lambda/references"}},d={},m=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Starting LocalStack via Docker Compose",id:"starting-localstack-via-docker-compose",level:2},{value:"Preparing Lambda Code",id:"preparing-lambda-code",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"pom.xml",id:"pomxml",level:3},{value:"BucketHandler.java",id:"buckethandlerjava",level:3},{value:"Deploy Lambda Function",id:"deploy-lambda-function",level:3},{value:"<em><strong>mvn clean package</strong></em>",id:"mvn-clean-package",level:4},{value:"Create Function",id:"create-function",level:4},{value:"zip-file fileb://localstack-example-1.0-SNAPSHOT.jar - <em><strong>generated by mvn clean package</strong></em>",id:"zip-file-fileblocalstack-example-10-snapshotjar---generated-by-mvn-clean-package",level:4},{value:"Creating an S3 Bucket",id:"creating-an-s3-bucket",level:2},{value:"Lambda registering events",id:"lambda-registering-events",level:2},{value:"s3-notify-config.json",id:"s3-notify-configjson",level:4},{value:"Triggering Lambda",id:"triggering-lambda",level:2},{value:"Output: Docker Log",id:"output-docker-log",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"s3-trigger-lambda",children:"S3 Trigger Lambda"})}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)("img",{src:"/img/aws/lambda/s3-trigger-lambda-01.png",alt:"s3-trigger-lambda-01.png"}),"\n",(0,t.jsx)(n.p,{children:"In this example, you\u2019ll see how to set up an S3 trigger that will invoke a Lambda function in response to a file uploaded into an S3 bucket."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"JDK 17+"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://maven.apache.org/install.html",children:"Maven 3.8.5+"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://localstack.cloud/",children:"LocalStack"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," - for running LocalStack"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/cli/",children:"AWS CLI"})," and ",(0,t.jsx)(n.a,{href:"https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal",children:"awslocal"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"starting-localstack-via-docker-compose",children:"Starting LocalStack via Docker Compose"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'version: \'3.8\'\n\nservices:\n  localstack:\n    image: localstack/localstack\n    container_name: localstack_main\n    ports:\n      - "4566-4599:4566-4599"\n    environment:\n      - SERVICES=sns,s3,sqs,dynamodb,ses,lambda,logs,stepfunctions\n      - DYNAMODB_SHARE_DB=1\n      - DEBUG=1\n      - DATA_DIR=/tmp/localstack/data\n      - DOCKER_HOST=unix:///var/run/docker.sock\n    volumes:\n      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"preparing-lambda-code",children:"Preparing Lambda Code"}),"\n",(0,t.jsxs)(n.p,{children:["Source Code: ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/lambda/s3-trigger-lambda",children:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/lambda/s3-trigger-lambda"})})})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 cmds.txt\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 s3-notify-config.json\n\u251c\u2500\u2500 sample-file-01.txt\n\u251c\u2500\u2500 sample-file-02.txt\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 example\n                \u2514\u2500\u2500 BucketHandler.java\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.codetinkering</groupId>\n    <artifactId>localstack-example</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <properties>\n        <java.version>8</java.version>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.amazonaws</groupId>\n                <artifactId>aws-java-sdk-bom</artifactId>\n                <version>1.11.939</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.amazonaws</groupId>\n            <artifactId>aws-lambda-java-core</artifactId>\n            <version>1.2.1</version>\n        </dependency>\n        <dependency>\n            <groupId>com.amazonaws</groupId>\n            <artifactId>aws-lambda-java-events</artifactId>\n            <version>2.2.9</version>\n        </dependency>\n        <dependency>\n            <groupId>com.amazonaws</groupId>\n            <artifactId>aws-java-sdk-s3</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.amazonaws</groupId>\n            <artifactId>aws-java-sdk-dynamodb</artifactId>\n        </dependency>\n\n        \x3c!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --\x3e\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>1.18.34</version>\n            <scope>provided</scope>\n        </dependency>\n\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.2.2</version>\n                <configuration>\n                    <createDependencyReducedPom>false</createDependencyReducedPom>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h3,{id:"buckethandlerjava",children:"BucketHandler.java"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package example;\n\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.client.builder.AwsClientBuilder;\nimport com.amazonaws.services.lambda.runtime.Context;\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\nimport com.amazonaws.services.lambda.runtime.events.S3Event;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.S3Object;\nimport lombok.extern.java.Log;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\n@Log\npublic class BucketHandler implements RequestHandler<S3Event, String> {\n\n    public final String AWS_REGION = "us-east-1";\n    public final String S3_ENDPOINT = "http://localhost:4566";\n\n    public String handleRequest(S3Event s3Event, Context context) {\n        // Pull the event records and get the object content type\n        String bucket = s3Event.getRecords().get(0).getS3().getBucket().getName();\n        String key = s3Event.getRecords().get(0).getS3().getObject().getKey();\n        log.info( ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Bucket  :  " + bucket);\n        log.info( ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Key:  " + key);\n\n        S3Object obj = prepareS3().getObject(new GetObjectRequest(bucket, key));\n        try (InputStream stream = obj.getObjectContent()) {\n            // TODO: Do something with the file contents here\n            stream.transferTo(System.out);\n            System.out.println();\n        } catch (IOException ioe) {\n            //throw ioe;\n            ioe.printStackTrace();\n        }\n\n        return obj.getObjectMetadata().getContentType();\n    }\n\n    private AmazonS3 prepareS3() {\n        BasicAWSCredentials credentials = new BasicAWSCredentials("foo", "bar");\n\n        AwsClientBuilder.EndpointConfiguration config =\n                new AwsClientBuilder.EndpointConfiguration(S3_ENDPOINT, AWS_REGION);\n\n        AmazonS3ClientBuilder builder = AmazonS3ClientBuilder.standard();\n        builder.withEndpointConfiguration(config);\n        builder.withPathStyleAccessEnabled(true);\n        builder.withCredentials(new AWSStaticCredentialsProvider(credentials));\n        return builder.build();\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h3,{id:"deploy-lambda-function",children:"Deploy Lambda Function"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h4,{id:"mvn-clean-package",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"mvn clean package"})})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.h4,{id:"create-function",children:"Create Function"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"awslocal lambda create-function \\\n    --function-name example-lambda \\\n    --runtime java8 \\\n    --handler example.BucketHandler \\\n    --zip-file fileb://localstack-example-1.0-SNAPSHOT.jar \\\n    --role arn:aws:iam::000000000000:role/lambda-role\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.h4,{id:"zip-file-fileblocalstack-example-10-snapshotjar---generated-by-mvn-clean-package",children:["zip-file fileb://localstack-example-1.0-SNAPSHOT.jar - ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"generated by mvn clean package"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"creating-an-s3-bucket",children:"Creating an S3 Bucket"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"awslocal s3 mb s3://mybucket --endpoint-url http://localhost:4566\n"})}),"\n",(0,t.jsx)(n.h2,{id:"lambda-registering-events",children:"Lambda registering events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nawslocal s3api put-bucket-notification-configuration --bucket mybucket --notification-configuration file://s3-notify-config.json --endpoint-url http://localhost:4566\n"})}),"\n",(0,t.jsx)(n.h4,{id:"s3-notify-configjson",children:"s3-notify-config.json"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n\t"LambdaFunctionConfigurations": [\n\t\t{\n\t\t\t"Id": "1234567890123",\n\t\t\t"LambdaFunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:example-lambda",\n\t\t\t"Events": [\n\t\t\t\t"s3:ObjectCreated:*"\n\t\t\t]\n\t\t}\n\t]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"triggering-lambda",children:"Triggering Lambda"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nawslocal s3 cp sample-file-01.txt s3://mybucket/sample-file-01.txt --endpoint-url http://localhost:4566\n"})}),"\n",(0,t.jsx)(n.h2,{id:"output-docker-log",children:"Output: Docker Log"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\n...\nlocalstack_main  | 2024-09-25T14:45:56.053 DEBUG --- [da:$LATEST_0] l.s.l.i.version_manager    : [example-lambda-aeb1b298-15d8-4970-8682-b9b43a811053] START RequestId: aeb1b298-15d8-4970-8682-b9b43a811053 Version: $LATEST\nlocalstack_main  | 2024-09-25T14:45:56.053 DEBUG --- [da:$LATEST_0] l.s.l.i.version_manager    : [example-lambda-aeb1b298-15d8-4970-8682-b9b43a811053] Sep 25, 2024 2:45:55 PM example.BucketHandler handleRequest\nlocalstack_main  | 2024-09-25T14:45:56.054 DEBUG --- [da:$LATEST_0] l.s.l.i.version_manager    : [example-lambda-aeb1b298-15d8-4970-8682-b9b43a811053] INFO: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Bucket  :  mybucket\nlocalstack_main  | 2024-09-25T14:45:56.054 DEBUG --- [da:$LATEST_0] l.s.l.i.version_manager    : [example-lambda-aeb1b298-15d8-4970-8682-b9b43a811053] Sep 25, 2024 2:45:55 PM example.BucketHandler handleRequest\nlocalstack_main  | 2024-09-25T14:45:56.054 DEBUG --- [da:$LATEST_0] l.s.l.i.version_manager    : [example-lambda-aeb1b298-15d8-4970-8682-b9b43a811053] INFO: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Key:  sample-file-01.txt\n...\n"})}),"\n",(0,t.jsx)(n.p,{children:"See:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"INFO: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Bucket  :  mybucket\nINFO: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Key:  sample-file-01.txt\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n","\n",(0,t.jsx)(i.A,{items:(0,s.$S)().items})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},3514:(e,n,a)=>{a.d(n,{A:()=>j});a(6540);var t=a(4164),r=a(6972),i=a(8774),s=a(5846),l=a(6654),c=a(1312),o=a(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var m=a(4848);function p(e){let{href:n,children:a}=e;return(0,m.jsx)(i.A,{href:n,className:(0,t.A)("card padding--lg",d.cardContainer),children:a})}function u(e){let{href:n,icon:a,title:r,description:i}=e;return(0,m.jsxs)(p,{href:n,children:[(0,m.jsxs)(o.A,{as:"h2",className:(0,t.A)("text--truncate",d.cardTitle),title:r,children:[a," ",r]}),i&&(0,m.jsx)("p",{className:(0,t.A)("text--truncate",d.cardDescription),title:i,children:i})]})}function g(e){let{item:n}=e;const a=(0,r.Nr)(n),t=function(){const{selectMessage:e}=(0,s.W)();return n=>e(n,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return a?(0,m.jsx)(u,{href:a,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??t(n.items.length)}):null}function h(e){let{item:n}=e;const a=(0,l.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,r.cC)(n.docId??void 0);return(0,m.jsx)(u,{href:n.href,icon:a,title:n.label,description:n.description??t?.description})}function x(e){let{item:n}=e;switch(n.type){case"link":return(0,m.jsx)(h,{item:n});case"category":return(0,m.jsx)(g,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function b(e){let{className:n}=e;const a=(0,r.$S)();return(0,m.jsx)(j,{items:a.items,className:n})}function j(e){const{items:n,className:a}=e;if(!n)return(0,m.jsx)(b,{...e});const i=(0,r.d1)(n);return(0,m.jsx)("section",{className:(0,t.A)("row",a),children:i.map(((e,n)=>(0,m.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,m.jsx)(x,{item:e})},n)))})}},5846:(e,n,a)=>{a.d(n,{W:()=>o});var t=a(6540),r=a(4586);const i=["zero","one","two","few","many","other"];function s(e){return i.filter((n=>e.includes(n)))}const l={locale:"en",pluralForms:s(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,t.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:s(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),l}}),[e])}function o(){const e=c();return{selectMessage:(n,a)=>function(e,n,a){const t=e.split("|");if(1===t.length)return t[0];t.length>a.pluralForms.length&&console.error(`For locale=${a.locale}, a maximum of ${a.pluralForms.length} plural forms are expected (${a.pluralForms.join(",")}), but the message contains ${t.length}: ${e}`);const r=a.select(n),i=a.pluralForms.indexOf(r);return t[Math.min(i,t.length-1)]}(a,n,e)}}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>l});var t=a(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);