"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[509],{5222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=t(4848),r=t(8453);const a={sidebar_position:32},s="Read-Write Dynamic Table",l={id:"streams/apache-flink/Examples/read-write-dynamic-table",title:"Read-Write Dynamic Table",description:"Description",source:"@site/docs/streams/apache-flink/Examples/read-write-dynamic-table.mdx",sourceDirName:"streams/apache-flink/Examples",slug:"/streams/apache-flink/Examples/read-write-dynamic-table",permalink:"/docs/streams/apache-flink/Examples/read-write-dynamic-table",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:32,frontMatter:{sidebar_position:32},sidebar:"tutorialSidebar",previous:{title:"Fraud Detector",permalink:"/docs/streams/apache-flink/Examples/fraud-detector"},next:{title:"Session Window",permalink:"/docs/streams/apache-flink/Examples/session-window"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"flink_source.txt",id:"flink_sourcetxt",level:3},{value:"ReadWriteDynamicTable.java",id:"readwritedynamictablejava",level:3},{value:"Run &amp; Output",id:"run--output",level:2},{value:"Run in IDE <em><strong>(in our case IntelliJ IDEA)</strong></em>",id:"run-in-ide-in-our-case-intellij-idea",level:3},{value:"Run in flink-1.20.0",id:"run-in-flink-1200",level:3},{value:"Output",id:"output",level:4},{value:"Source Code: <br></br> <em><strong>https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/sliding-window</strong></em>",id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinksliding-window",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"read-write-dynamic-table",children:"Read-Write Dynamic Table"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"In Flink SQL, a table is a structured representation of data that can be queried using SQL syntax. Tables can be created from various sources such as streams, files, or other tables. To create a table, you register metadata to connect to the system you want to use. Dynamic tables process streaming data and continuously update their results to reflect changes on input tables."}),"\n",(0,i.jsx)(n.p,{children:"In the Example we are querying a dynamic table and sending the result of the continuous query to another dynamic table."}),"\n",(0,i.jsx)("img",{src:"/img/streams/apache-flink/querying-dynamic-table-to-another-dynamic-table.png",alt:"querying-dynamic-table-to-another-dynamic-table.png"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JDK 11"}),"\n",(0,i.jsx)(n.li,{children:"Maven"}),"\n",(0,i.jsx)(n.li,{children:"IDE (IntelliJ IDEA, Eclipse)"}),"\n",(0,i.jsx)(n.li,{children:"Flink 1.20.0"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:".\n\u2514\u2500\u2500 read-write-dynamic-table\n    \u251c\u2500\u2500 dependency-reduced-pom.xml\n    \u251c\u2500\u2500 flink_source.txt // source data for creating dynamic table\n    \u251c\u2500\u2500 pom.xml\n    \u251c\u2500\u2500 README.md\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 main\n            \u251c\u2500\u2500 java\n            \u2502\xa0\xa0 \u2514\u2500\u2500 com\n            \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n            \u2502\xa0\xa0         \u2514\u2500\u2500 flink\n            \u2502\xa0\xa0             \u2514\u2500\u2500 ReadWriteDynamicTable.java\n            \u2514\u2500\u2500 resources\n                \u251c\u2500\u2500 log4j\n                \u2514\u2500\u2500 log4j.properties.txt\n"})}),"\n",(0,i.jsx)(n.h3,{id:"flink_sourcetxt",children:"flink_source.txt"}),"\n",(0,i.jsx)(n.p,{children:"The source data for creating dynamic table:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Alice; 23\nBob; 657.9\nAlice; 55.1\n"})}),"\n",(0,i.jsx)(n.h3,{id:"readwritedynamictablejava",children:"ReadWriteDynamicTable.java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public class ReadWriteDynamicTable {\n\n    public static void main(String[] args) throws Exception {\n\n        // We define all the parameters that initialize the table environment.\n        EnvironmentSettings settings = EnvironmentSettings\n                .newInstance()\n                //.inStreamingMode()\n                .inBatchMode()\n                .build();\n\n        final TableEnvironment tEnv = TableEnvironment.create(settings);\n\n        // Create a table and load data into it from a file.\n        tEnv.executeSql(\"CREATE TABLE transactions (name STRING, amount DOUBLE) WITH ('connector' = 'filesystem', 'path' = 'flink_source.txt', 'format' = 'csv', 'csv.field-delimiter' = ';')\");\n\n        // Test select\n        tEnv.sqlQuery(\"SELECT COUNT(*) AS transactions_count FROM transactions\")\n                .execute()\n                .print();\n\n        // Save the data to a file.\n        tEnv.executeSql(\"CREATE TABLE revenue (\"\n                + \"  name STRING, \"\n                + \"  total DOUBLE \"\n                + \"  ) WITH ( \\n\"\n                + \"  'connector'='filesystem', \"\n                + \"  'path'='flink_output', \"\n                + \"  'format'='csv', \"\n                + \"  'sink.partition-commit.delay'='1 s', \"\n                + \"  'sink.partition-commit.policy.kind'='success-file'\"\n                + \"   )\");\n\n        tEnv.executeSql(\"INSERT INTO revenue SELECT name, SUM(amount) AS total from transactions GROUP BY name\");\n\n        // Test select\n        tEnv.sqlQuery(\"SELECT name, total FROM revenue\")\n                .execute()\n                .print();\n\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"run--output",children:"Run & Output"}),"\n",(0,i.jsxs)(n.h3,{id:"run-in-ide-in-our-case-intellij-idea",children:["Run in IDE ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"(in our case IntelliJ IDEA)"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"+----------------------+\n|   transactions_count |\n+----------------------+\n|                    3 |\n+----------------------+\n1 row in set\n\n+--------------------------------+--------------------------------+\n|                           name |                          total |\n+--------------------------------+--------------------------------+\n|                          Alice |                           78.1 |\n|                            Bob |                          657.9 |\n+--------------------------------+--------------------------------+\n2 rows in set\n"})}),"\n",(0,i.jsx)(n.h3,{id:"run-in-flink-1200",children:"Run in flink-1.20.0"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"mvn clean package"})}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["Copy ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"target/read-write-dynamic-table-0.1.jar"})})," to ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"flink-1.20.0/examples/jreact"})}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["Start local cluster:",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"./bin/start-cluster.sh"})}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["Copy ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"flink_source.txt"})})," to ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"flink-1.20.0"})}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["Open a new terminal and run:",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"./bin/flink run examples/jreact/read-write-dynamic-table-0.1.jar"})}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Job has been submitted with JobID 430edc57fcb45f876a9173804b84ca1d\n+----------------------+\n|   transactions_count |\n+----------------------+\n|                    3 |\n+----------------------+\n1 row in set\nJob has been submitted with JobID 7a97e2f88bbc86fa1fc609a015aafa3e\nJob has been submitted with JobID 667bb8689c1b4f9899b2625e06a4e5b0\n+--------------------------------+--------------------------------+\n|                           name |                          total |\n+--------------------------------+--------------------------------+\n|                          Alice |                           78.1 |\n|                            Bob |                          657.9 |\n+--------------------------------+--------------------------------+\n2 rows in set\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"localhost:8081"})}),"\n",(0,i.jsx)("img",{src:"/img/streams/apache-flink/read-write-dynamic-table-browse-01.png",alt:"read-write-dynamic-table-browse-01.png"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(n.h4,{id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinksliding-window",children:["Source Code: ",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/sliding-window",children:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/sliding-window"})})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);