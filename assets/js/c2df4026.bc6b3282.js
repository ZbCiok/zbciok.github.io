"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[7630],{2797:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"streams/apache-flink/Table-API-and-SQL/sql","title":"SQL","description":"SQL","source":"@site/docs/streams/apache-flink/Table-API-and-SQL/sql.mdx","sourceDirName":"streams/apache-flink/Table-API-and-SQL","slug":"/streams/apache-flink/Table-API-and-SQL/sql","permalink":"/docs/streams/apache-flink/Table-API-and-SQL/sql","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":120,"frontMatter":{"sidebar_position":120},"sidebar":"tutorialSidebar","previous":{"title":"Table API","permalink":"/docs/streams/apache-flink/Table-API-and-SQL/table-api"},"next":{"title":"SQL Client","permalink":"/docs/streams/apache-flink/Table-API-and-SQL/sql-client"}}');var a=s(4848),t=s(8453);const l={sidebar_position:120},r="SQL",c={},d=[];function o(e){const n={a:"a",em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"sql",children:"SQL"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/dev/table/sql/overview/",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"SQL"})})})}),"\n",(0,a.jsx)(n.p,{children:"Flink SQL is an ANSI standard compliant SQL engine that can process both real-time and historical data."}),"\n",(0,a.jsxs)(n.p,{children:["This page describes the SQL language supported in Flink, including Data Definition Language (DDL), Data Manipulation Language (DML) and Query Language. Flink\u2019s SQL support is based on ",(0,a.jsx)(n.a,{href:"https://calcite.apache.org/",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Apache Calcite"})})})," which implements the SQL standard."]}),"\n",(0,a.jsx)(n.p,{children:"This page lists all the supported statements supported in Flink SQL for now:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"SELECT (Queries)"}),"\n",(0,a.jsx)(n.li,{children:"CREATE TABLE, CATALOG, DATABASE, VIEW, FUNCTION"}),"\n",(0,a.jsx)(n.li,{children:"DROP TABLE, DATABASE, VIEW, FUNCTION"}),"\n",(0,a.jsx)(n.li,{children:"ALTER TABLE, DATABASE, FUNCTION"}),"\n",(0,a.jsx)(n.li,{children:"ANALYZE TABLE"}),"\n",(0,a.jsx)(n.li,{children:"INSERT"}),"\n",(0,a.jsx)(n.li,{children:"UPDATE"}),"\n",(0,a.jsx)(n.li,{children:"DELETE"}),"\n",(0,a.jsx)(n.li,{children:"DESCRIBE"}),"\n",(0,a.jsx)(n.li,{children:"EXPLAIN"}),"\n",(0,a.jsx)(n.li,{children:"USE"}),"\n",(0,a.jsx)(n.li,{children:"SHOW"}),"\n",(0,a.jsx)(n.li,{children:"LOAD"}),"\n",(0,a.jsx)(n.li,{children:"UNLOAD"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(6540);const a={},t=i.createContext(a);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);