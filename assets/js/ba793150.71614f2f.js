"use strict";(self.webpackChunkjreact_com_docsaurus=self.webpackChunkjreact_com_docsaurus||[]).push([[3687],{5583:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var t=r(4848),i=r(8453);const s={sidebar_position:2},o="Flow: Subscriber",a={id:"streams/reactive-streams/java-util-concurrent-Flow/examples/FlowSubscriber",title:"Flow: Subscriber",description:"Description",source:"@site/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowSubscriber.mdx",sourceDirName:"streams/reactive-streams/java-util-concurrent-Flow/examples",slug:"/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowSubscriber",permalink:"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowSubscriber",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Flow: Publisher Multi Subscriber",permalink:"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherMultiSubscriber"},next:{title:"Getting Started with the Flow",permalink:"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/Getting-Started-with-Flow"}},c={},u=[{value:"Description",id:"description",level:4},{value:"Requirements",id:"requirements",level:4},{value:"Code",id:"code",level:4},{value:"Output",id:"output",level:4},{value:"Running Example Code",id:"running-example-code",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"flow-subscriber",children:"Flow: Subscriber"}),"\n",(0,t.jsx)("img",{src:"/img/streams/reactive-streams/flow-api/java-9-flow-api-subscriber-02.png",alt:"flow-publisher"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"A receiver of messages. The methods in this interface are invoked in strict sequential order for each Flow.Subscription."}),"\n",(0,t.jsx)(n.h4,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsx)(n.p,{children:"JDK 21"}),"\n",(0,t.jsx)(n.h4,{id:"code",children:"Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.jreact;\n\nimport java.util.concurrent.Flow;\nimport java.util.concurrent.SubmissionPublisher;\nimport java.util.concurrent.TimeUnit;\n\npublic class MySubscriber implements java.util.concurrent.Flow.Subscriber<String> {\n\n    private Flow.Subscription subscription;\n\n    public void flowSubscriber() {\n        System.out.printf("main (tid=%d)%n", Thread.currentThread().threadId());\n\n\n        try (final var publisher = new SubmissionPublisher<String>()) {\n\n            System.out.println("-- subscribe --");\n\n            publisher.subscribe(new MySubscriber());\n\n            TimeUnit.SECONDS.sleep(1);\n            System.out.println("-- submit --");\n\n            publisher.submit("abc");\n            publisher.submit("123");\n            publisher.submit("XYZ");\n\n            TimeUnit.SECONDS.sleep(1);\n            System.out.println("-- close --");\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    @Override\n    public void onSubscribe(Flow.Subscription subscription) {\n        System.out.printf("  onSubscribe (tid=%d)%n",\n                Thread.currentThread().threadId());\n\n        this.subscription = subscription;\n        subscription.request(1);\n    }\n\n    @Override\n    public void onNext(String item) {\n        System.out.printf("  onNext (tid=%d) : %s%n",\n                Thread.currentThread().threadId(), item);\n\n        subscription.request(1);\n    }\n\n    @Override\n    public void onError(Throwable throwable) {\n        System.out.printf("  onError (tid=%d) : %s%n",\n                Thread.currentThread().threadId(), throwable);\n    }\n\n    @Override\n    public void onComplete() {\n        System.out.printf("  onComplete (tid=%d)%n",\n                Thread.currentThread().threadId());\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"main (tid=1)\n-- subscribe --\n  onSubscribe (tid=29)\n-- submit --\n  onNext (tid=29) : abc\n  onNext (tid=29) : 123\n  onNext (tid=29) : XYZ\n-- close --\n  onComplete (tid=29)\n\nProcess finished with exit code 0\n"})}),"\n",(0,t.jsx)(n.h4,{id:"running-example-code",children:(0,t.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/reactive-streams/java-flow-api/java-flow-api-subscriber",children:"Running Example Code"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);