"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[5837],{919:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const r={sidebar_position:10},a="SDK for Java 2.x Kinesis",o={id:"aws/streaming/kinesis/examples/kinesis-sdk-java-2.1-examples",title:"SDK for Java 2.x Kinesis",description:"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/java_kinesis_code_examples.html",source:"@site/docs/aws/streaming/kinesis/examples/kinesis-sdk-java-2.1-examples.mdx",sourceDirName:"aws/streaming/kinesis/examples",slug:"/aws/streaming/kinesis/examples/kinesis-sdk-java-2.1-examples",permalink:"/docs/aws/streaming/kinesis/examples/kinesis-sdk-java-2.1-examples",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/docs/aws/amazon-kinesis-data-streams/examples"},next:{title:"Spring Kinesis Producer",permalink:"/docs/aws/streaming/kinesis/examples/spring-with-aws-kinesis"}},m={},d=[{value:"Example <em><strong><em><strong>CreateStream</strong></em></strong></em>",id:"example-createstream",level:3},{value:"Example <em><strong><em><strong>PutRecord</strong></em></strong></em>",id:"example-putrecord",level:3},{value:"Example <em><strong><em><strong>GetRecords</strong></em></strong></em>",id:"example-getrecords",level:3},{value:"Example <em><strong><em><strong>DeleteStream</strong></em></strong></em>",id:"example-deletestream",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sdk-for-java-2x-kinesis",children:"SDK for Java 2.x Kinesis"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/java_kinesis_code_examples.html",children:"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/java_kinesis_code_examples.html"})})})}),"\n",(0,t.jsxs)(n.h3,{id:"example-createstream",children:["Example ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"CreateStream"})})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\npackage com.example.kinesis;\n\n// snippet-start:[kinesis.java2.create.main]\n// snippet-start:[kinesis.java2.create.import]\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.kinesis.KinesisClient;\nimport software.amazon.awssdk.services.kinesis.model.CreateStreamRequest;\nimport software.amazon.awssdk.services.kinesis.model.KinesisException;\n// snippet-end:[kinesis.java2.create.import]\n\n/**\n * Before running this Java V2 code example, set up your development\n * environment, including your credentials.\n *\n * For more information, see the following documentation topic:\n *\n * https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n */\npublic class CreateDataStream {\n    public static void main(String[] args) {\n\n        final String usage = """\n\n                Usage:\n                    <streamName>\n\n                Where:\n                    streamName - The Amazon Kinesis data stream (for example, StockTradeStream).\n                """;\n\n        if (args.length != 1) {\n            System.out.println(usage);\n            System.exit(1);\n        }\n\n        String streamName = args[0];\n        Region region = Region.US_EAST_1;\n        KinesisClient kinesisClient = KinesisClient.builder()\n                .region(region)\n                .build();\n        createStream(kinesisClient, streamName);\n        System.out.println("Done");\n        kinesisClient.close();\n    }\n\n    public static void createStream(KinesisClient kinesisClient, String streamName) {\n        try {\n            CreateStreamRequest streamReq = CreateStreamRequest.builder()\n                    .streamName(streamName)\n                    .shardCount(1)\n                    .build();\n\n            kinesisClient.createStream(streamReq);\n\n        } catch (KinesisException e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        }\n    }\n}\n// snippet-end:[kinesis.java2.create.main]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"example-putrecord",children:["Example ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"PutRecord"})})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\npackage com.example.kinesis;\n\n// snippet-start:[kinesis.java2.putrecord.main]\n// snippet-start:[kinesis.java2.putrecord.import]\nimport software.amazon.awssdk.core.SdkBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.kinesis.KinesisClient;\nimport software.amazon.awssdk.services.kinesis.model.PutRecordRequest;\nimport software.amazon.awssdk.services.kinesis.model.KinesisException;\nimport software.amazon.awssdk.services.kinesis.model.DescribeStreamRequest;\nimport software.amazon.awssdk.services.kinesis.model.DescribeStreamResponse;\n// snippet-end:[kinesis.java2.putrecord.import]\n\n/**\n * Before running this Java V2 code example, set up your development\n * environment, including your credentials.\n *\n * For more information, see the following documentation topic:\n *\n * https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n */\npublic class StockTradesWriter {\n    public static void main(String[] args) {\n        final String usage = """\n\n                Usage:\n                    <streamName>\n\n                Where:\n                    streamName - The Amazon Kinesis data stream to which records are written (for example, StockTradeStream)\n                """;\n\n        if (args.length != 1) {\n            System.out.println(usage);\n            System.exit(1);\n        }\n\n        String streamName = args[0];\n        Region region = Region.US_EAST_1;\n        KinesisClient kinesisClient = KinesisClient.builder()\n                .region(region)\n                .build();\n\n        // Ensure that the Kinesis Stream is valid.\n        validateStream(kinesisClient, streamName);\n        setStockData(kinesisClient, streamName);\n        kinesisClient.close();\n    }\n\n    public static void setStockData(KinesisClient kinesisClient, String streamName) {\n        try {\n            // Repeatedly send stock trades with a 100 milliseconds wait in between.\n            StockTradeGenerator stockTradeGenerator = new StockTradeGenerator();\n\n            // Put in 50 Records for this example.\n            int index = 50;\n            for (int x = 0; x < index; x++) {\n                StockTrade trade = stockTradeGenerator.getRandomTrade();\n                sendStockTrade(trade, kinesisClient, streamName);\n                Thread.sleep(100);\n            }\n\n        } catch (KinesisException | InterruptedException e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        }\n        System.out.println("Done");\n    }\n\n    private static void sendStockTrade(StockTrade trade, KinesisClient kinesisClient,\n            String streamName) {\n        byte[] bytes = trade.toJsonAsBytes();\n\n        // The bytes could be null if there is an issue with the JSON serialization by\n        // the Jackson JSON library.\n        if (bytes == null) {\n            System.out.println("Could not get JSON bytes for stock trade");\n            return;\n        }\n\n        System.out.println("Putting trade: " + trade);\n        PutRecordRequest request = PutRecordRequest.builder()\n                .partitionKey(trade.getTickerSymbol()) // We use the ticker symbol as the partition key, explained in\n                                                       // the Supplemental Information section below.\n                .streamName(streamName)\n                .data(SdkBytes.fromByteArray(bytes))\n                .build();\n\n        try {\n            kinesisClient.putRecord(request);\n        } catch (KinesisException e) {\n            System.err.println(e.getMessage());\n        }\n    }\n\n    private static void validateStream(KinesisClient kinesisClient, String streamName) {\n        try {\n            DescribeStreamRequest describeStreamRequest = DescribeStreamRequest.builder()\n                    .streamName(streamName)\n                    .build();\n\n            DescribeStreamResponse describeStreamResponse = kinesisClient.describeStream(describeStreamRequest);\n\n            if (!describeStreamResponse.streamDescription().streamStatus().toString().equals("ACTIVE")) {\n                System.err.println("Stream " + streamName + " is not active. Please wait a few moments and try again.");\n                System.exit(1);\n            }\n\n        } catch (KinesisException e) {\n            System.err.println("Error found while describing the stream " + streamName);\n            System.err.println(e);\n            System.exit(1);\n        }\n    }\n}\n// snippet-end:[kinesis.java2.putrecord.main]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"example-getrecords",children:["Example ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"GetRecords"})})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\npackage com.example.kinesis;\n\n// snippet-start:[kinesis.java2.getrecord.main]\n// snippet-start:[kinesis.java2.getrecord.import]\nimport software.amazon.awssdk.core.SdkBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.kinesis.KinesisClient;\nimport software.amazon.awssdk.services.kinesis.model.DescribeStreamResponse;\nimport software.amazon.awssdk.services.kinesis.model.DescribeStreamRequest;\nimport software.amazon.awssdk.services.kinesis.model.Shard;\nimport software.amazon.awssdk.services.kinesis.model.GetShardIteratorRequest;\nimport software.amazon.awssdk.services.kinesis.model.GetShardIteratorResponse;\nimport software.amazon.awssdk.services.kinesis.model.Record;\nimport software.amazon.awssdk.services.kinesis.model.GetRecordsRequest;\nimport software.amazon.awssdk.services.kinesis.model.GetRecordsResponse;\nimport java.util.ArrayList;\nimport java.util.List;\n// snippet-end:[kinesis.java2.getrecord.import]\n\n/**\n * Before running this Java V2 code example, set up your development\n * environment, including your credentials.\n *\n * For more information, see the following documentation topic:\n *\n * https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n */\npublic class GetRecords {\n    public static void main(String[] args) {\n        final String usage = """\n\n                Usage:\n                    <streamName>\n\n                Where:\n                    streamName - The Amazon Kinesis data stream to read from (for example, StockTradeStream).\n                """;\n\n        if (args.length != 1) {\n            System.out.println(usage);\n            System.exit(1);\n        }\n\n        String streamName = args[0];\n        Region region = Region.US_EAST_1;\n        KinesisClient kinesisClient = KinesisClient.builder()\n                .region(region)\n                .build();\n\n        getStockTrades(kinesisClient, streamName);\n        kinesisClient.close();\n    }\n\n    public static void getStockTrades(KinesisClient kinesisClient, String streamName) {\n        String shardIterator;\n        String lastShardId = null;\n        DescribeStreamRequest describeStreamRequest = DescribeStreamRequest.builder()\n                .streamName(streamName)\n                .build();\n\n        List<Shard> shards = new ArrayList<>();\n        DescribeStreamResponse streamRes;\n        do {\n            streamRes = kinesisClient.describeStream(describeStreamRequest);\n            shards.addAll(streamRes.streamDescription().shards());\n\n            if (shards.size() > 0) {\n                lastShardId = shards.get(shards.size() - 1).shardId();\n            }\n        } while (streamRes.streamDescription().hasMoreShards());\n\n        GetShardIteratorRequest itReq = GetShardIteratorRequest.builder()\n                .streamName(streamName)\n                .shardIteratorType("TRIM_HORIZON")\n                .shardId(lastShardId)\n                .build();\n\n        GetShardIteratorResponse shardIteratorResult = kinesisClient.getShardIterator(itReq);\n        shardIterator = shardIteratorResult.shardIterator();\n\n        // Continuously read data records from shard.\n        List<Record> records;\n\n        // Create new GetRecordsRequest with existing shardIterator.\n        // Set maximum records to return to 1000.\n        GetRecordsRequest recordsRequest = GetRecordsRequest.builder()\n                .shardIterator(shardIterator)\n                .limit(1000)\n                .build();\n\n        GetRecordsResponse result = kinesisClient.getRecords(recordsRequest);\n\n        // Put result into record list. Result may be empty.\n        records = result.records();\n\n        // Print records\n        for (Record record : records) {\n            SdkBytes byteBuffer = record.data();\n            System.out.printf("Seq No: %s - %s%n", record.sequenceNumber(), new String(byteBuffer.asByteArray()));\n        }\n    }\n}\n// snippet-end:[kinesis.java2.getrecord.main]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"example-deletestream",children:["Example ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"DeleteStream"})})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\npackage com.example.kinesis;\n\n// snippet-start:[kinesis.java2.delete.main]\n// snippet-start:[kinesis.java2.delete.import]\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.kinesis.KinesisClient;\nimport software.amazon.awssdk.services.kinesis.model.DeleteStreamRequest;\nimport software.amazon.awssdk.services.kinesis.model.KinesisException;\n// snippet-end:[kinesis.java2.delete.import]\n\n/**\n * Before running this Java V2 code example, set up your development\n * environment, including your credentials.\n *\n * For more information, see the following documentation topic:\n *\n * https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n */\npublic class DeleteDataStream {\n\n    public static void main(String[] args) {\n        final String usage = """\n\n                Usage:\n                    <streamName>\n\n                Where:\n                    streamName - The Amazon Kinesis data stream (for example, StockTradeStream)\n                """;\n\n        if (args.length != 1) {\n            System.out.println(usage);\n            System.exit(1);\n        }\n\n        String streamName = args[0];\n        Region region = Region.US_EAST_1;\n        KinesisClient kinesisClient = KinesisClient.builder()\n                .region(region)\n                .build();\n\n        deleteStream(kinesisClient, streamName);\n        kinesisClient.close();\n        System.out.println("Done");\n    }\n\n    public static void deleteStream(KinesisClient kinesisClient, String streamName) {\n        try {\n            DeleteStreamRequest delStream = DeleteStreamRequest.builder()\n                    .streamName(streamName)\n                    .build();\n\n            kinesisClient.deleteStream(delStream);\n\n        } catch (KinesisException e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        }\n    }\n}\n// snippet-end:[kinesis.java2.delete.main]\n'})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);