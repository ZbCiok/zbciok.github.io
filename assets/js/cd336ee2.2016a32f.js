"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[7346],{2258:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"messaging/rabbitmq/docker-rabbitmq","title":"Docker RabbitMQ","description":"Defaults :","source":"@site/docs/messaging/rabbitmq/docker-rabbitmq.mdx","sourceDirName":"messaging/rabbitmq","slug":"/messaging/rabbitmq/docker-rabbitmq","permalink":"/docs/messaging/rabbitmq/docker-rabbitmq","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"RabbitMQ","permalink":"/docs/messaging/rabbitmq"},"next":{"title":"Examples","permalink":"/docs/messaging/rabbitmq/examples"}}');var s=r(4848),a=r(8453);const o={sidebar_position:20},i="Docker RabbitMQ",c={},m=[{value:"Defaults :",id:"defaults-",level:3},{value:"RabbitMQ 4.0.x",id:"rabbitmq-40x",level:2},{value:"docker-compose.yml",id:"docker-composeyml",level:2}];function b(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"docker-rabbitmq",children:"Docker RabbitMQ"})}),"\n",(0,s.jsx)(t.h3,{id:"defaults-",children:"Defaults :"}),"\n",(0,s.jsxs)(t.p,{children:["Username: guest ",(0,s.jsx)("br",{}),"\nPassword: guest"]}),"\n",(0,s.jsx)(t.h2,{id:"rabbitmq-40x",children:"RabbitMQ 4.0.x"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:4.0-management\n"})}),"\n",(0,s.jsx)(t.h2,{id:"docker-composeyml",children:"docker-compose.yml"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'version: "3.6"\n# https://docs.docker.com/compose/compose-file/\n\nservices:\n  rabbitmq:\n    image: \'rabbitmq:3.6-management-alpine\'\n    ports:\n      # The standard AMQP protocol port\n      - \'5672:5672\'\n      # HTTP management UI\n      - \'15672:15672\'\n    environment:\n      # The location of the RabbitMQ server.  "amqp" is the protocol;\n      # "rabbitmq" is the hostname.  Note that there is not a guarantee\n      # that the server will start first!  Telling the pika client library\n      # to try multiple times gets around this ordering issue.\n      AMQP_URL: \'amqp://rabbitmq?connection_attempts=5&retry_delay=5\'\n      RABBITMQ_DEFAULT_USER: "guest"\n      RABBITMQ_DEFAULT_PASS: "guest"\n    networks:\n      - network\n#    volumes:\n#      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/\n#      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/\n#      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/\n\nnetworks:\n  # Declare our private network.  We must declare one for the magic\n  # Docker DNS to work, but otherwise its default settings are fine.\n  network: {}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(6540);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);