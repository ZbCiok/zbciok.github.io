"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[8879],{1922:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var s=a(4848),r=a(8453),t=a(3514),o=a(5068);const i={sidebar_position:60},c="Spring Boot SNS Lambda DynamoDB",l={id:"aws/dynamodb/examples/spring-boot-SNS-lambda-dynamodb",title:"Spring Boot SNS Lambda DynamoDB",description:"Description",source:"@site/docs/aws/dynamodb/examples/spring-boot-SNS-lambda-dynamodb.mdx",sourceDirName:"aws/dynamodb/examples",slug:"/aws/dynamodb/examples/spring-boot-SNS-lambda-dynamodb",permalink:"/docs/aws/dynamodb/examples/spring-boot-SNS-lambda-dynamodb",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"ddb-spring-data-1",permalink:"/docs/aws/dynamodb/examples/ddb-spring-data-1"},next:{title:"References",permalink:"/docs/aws/dynamodb/references"}},d={},m=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Run LocalStack",id:"run-localstack",level:2},{value:"Create Topic",id:"create-topic",level:3},{value:"Create a Subscription",id:"create-a-subscription",level:3},{value:"Create DynamoDB Table",id:"create-dynamodb-table",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"Source Code: <em><strong>https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/spring-boot-sns-lambda-dynamodb</strong></em>",id:"source-code-httpsgithubcomzbciokzjc-examplestreemainawsawsdynamodbspring-boot-sns-lambda-dynamodb",level:4},{value:"Lambda",id:"lambda",level:3},{value:"Source Code: <em><strong>sns-lambda-dynamodb</strong></em>",id:"source-code-sns-lambda-dynamodb",level:3},{value:"SnsRequestHandler.java",id:"snsrequesthandlerjava",level:3},{value:"Create Lambda Function",id:"create-lambda-function",level:3},{value:"Spring-Boot to SNS Lambda",id:"spring-boot-to-sns-lambda",level:3},{value:"Source Code: <em><strong>spring-boot-sns-lambda</strong></em>",id:"source-code-spring-boot-sns-lambda",level:4},{value:"Running",id:"running",level:4},{value:"Output",id:"output",level:3},{value:"Docker Log",id:"docker-log",level:4},{value:"DynamoDB table:",id:"dynamodb-table",level:4}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spring-boot-sns-lambda-dynamodb",children:"Spring Boot SNS Lambda DynamoDB"})}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"In this example we will publish messages to DynamoDB via SNS and Lambda from a Spring Boot application."}),"\n",(0,s.jsx)("img",{src:"/img/aws/dynamodb/spring-boot-sns-lambda-dynamodb-01.png",alt:"spring-boot-sns-lambda-dynamodb-01.png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.p,{children:["The example is based on ",(0,s.jsx)(n.a,{href:"/docs/aws/sns/examples/spring-boot-sns-lambda",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Spring Boot SNS Lambda"})})})," and ",(0,s.jsx)(n.a,{href:"/docs/aws/aws-lambda/examples/lambda-person-request-dynamodb",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Lambda Person Request DynamoDB"})})}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JDK 21"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://maven.apache.org/install.html",children:"Maven 3.8.5+"})}),"\n",(0,s.jsx)(n.li,{children:"Spring Boot, version 3+"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://localstack.cloud/",children:"LocalStack"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," - for running LocalStack"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://aws.amazon.com/cli/",children:"AWS CLI"})," and ",(0,s.jsx)(n.a,{href:"https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal",children:"awslocal"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"run-localstack",children:"Run LocalStack"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'version: \'3.8\'\n\nservices:\n  localstack:\n    image: localstack/localstack\n    container_name: localstack_main\n    ports:\n      - "4566-4599:4566-4599"\n    environment:\n      - SERVICES=sns,s3,sqs,dynamodb,ses,lambda,logs,stepfunctions\n      - DYNAMODB_SHARE_DB=1\n      - DEBUG=1\n      - DATA_DIR=/tmp/localstack/data\n      - DOCKER_HOST=unix:///var/run/docker.sock\n    volumes:\n      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"create-topic",children:"Create Topic"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"awslocal sns create-topic --name localstack-topic --region us-east-1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-a-subscription",children:"Create a Subscription"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"awslocal sns subscribe \\\n--region us-east-1 \\\n--protocol lambda \\\n--topic-arn arn:aws:sns:us-east-1:000000000000:localstack-topic \\\n--notification-endpoint arn:aws:lambda:us-east-1:000000000000:function:localstack-lambda-sns\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-dynamodb-table",children:"Create DynamoDB Table"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"awslocal dynamodb create-table \\\n    --table-name person \\\n    --key-schema AttributeName=id,KeyType=HASH \\\n    --attribute-definitions AttributeName=id,AttributeType=N \\\n    --billing-mode PAY_PER_REQUEST\n"})}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.h4,{id:"source-code-httpsgithubcomzbciokzjc-examplestreemainawsawsdynamodbspring-boot-sns-lambda-dynamodb",children:["Source Code: ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/spring-boot-sns-lambda-dynamodb",children:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/spring-boot-sns-lambda-dynamodb"})})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:".\n\u251c\u2500\u2500 sns-lambda-dynamodb\n\u2502\xa0\xa0 \u251c\u2500\u2500 localstack.cmd\n\u2502\xa0\xa0 \u251c\u2500\u2500 pom.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 README.md\n\u2502\xa0\xa0 \u2514\u2500\u2500 src\n\u2502\xa0\xa0     \u251c\u2500\u2500 main\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u251c\u2500\u2500 java\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 com\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 example\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0         \u251c\u2500\u2500 Person.java\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 SnsRequestHandler.java\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 resources\n\u2502\xa0\xa0     \u2514\u2500\u2500 test\n\u2502\xa0\xa0         \u2514\u2500\u2500 java\n\u2514\u2500\u2500 spring-boot-sns-lambda\n    \u251c\u2500\u2500 mvnw\n    \u251c\u2500\u2500 mvnw.cmd\n    \u251c\u2500\u2500 pom.xml\n    \u251c\u2500\u2500 README.md\n    \u2514\u2500\u2500 src\n        \u251c\u2500\u2500 main\n        \u2502\xa0\xa0 \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 com\n        \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n        \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 sns\n        \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 PersonRequest.java\n        \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 SNSAppConfig.java\n        \u2502\xa0\xa0 \u2502\xa0\xa0             \u2514\u2500\u2500 SNSApp.java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 resources\n        \u2502\xa0\xa0     \u2514\u2500\u2500 application.properties\n        \u2514\u2500\u2500 test\n            \u2514\u2500\u2500 java\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"lambda",children:"Lambda"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.h3,{id:"source-code-sns-lambda-dynamodb",children:["Source Code: ",(0,s.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/spring-boot-sns-lambda-dynamodb/sns-lambda-dynamodb",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"sns-lambda-dynamodb"})})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"snsrequesthandlerjava",children:"SnsRequestHandler.java"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'package com.example;\n\nimport com.amazonaws.services.lambda.runtime.Context;\nimport com.amazonaws.services.lambda.runtime.LambdaLogger;\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\nimport com.amazonaws.services.lambda.runtime.events.SNSEvent;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport software.amazon.awssdk.auth.credentials.AwsBasicCredentials;\nimport software.amazon.awssdk.auth.credentials.AwsCredentialsProvider;\nimport software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbTable;\nimport software.amazon.awssdk.enhanced.dynamodb.TableSchema;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n\nimport java.net.URI;\nimport java.text.ParseException;\nimport java.util.List;\nimport com.amazonaws.services.lambda.runtime.events.SNSEvent.SNSRecord;\nimport lombok.extern.java.Log;\nimport software.amazon.awssdk.services.dynamodb.model.DynamoDbException;\n\nimport java.util.Iterator;\n\n@Log\npublic class SnsRequestHandler implements RequestHandler<SNSEvent, Boolean> {\n\n    LambdaLogger logger;\n    private SNSEvent event;\n\n    //----- DynamoDB\n\n    private static final String ACCESS_KEY = "test";\n    private static final String SECRET_KEY = "test";\n    private static String TABLE_NAME = "person";\n    private static AwsCredentialsProvider credentials = StaticCredentialsProvider.create(\n            AwsBasicCredentials.create(ACCESS_KEY, SECRET_KEY));\n\n    private static Region region = Region.US_EAST_1;\n\n    private static DynamoDbClient dynamoDbClient = DynamoDbClient.builder()\n            .region(region)\n            .credentialsProvider(credentials)\n            .endpointOverride(URI.create("https://localhost.localstack.cloud:4566"))\n            .build();\n\n    // -----\n\n    @Override\n    public Boolean handleRequest(SNSEvent event, Context context) {\n        log.info(">>> start handleRequest...");\n        logger = context.getLogger();\n        List<SNSRecord> records = event.getRecords();\n\n        if (!records.isEmpty()) {\n            Iterator<SNSRecord> recordsIter = records.iterator();\n            while (recordsIter.hasNext()) {\n                processRecord(recordsIter.next());\n            }\n        }\n        return Boolean.TRUE;\n    }\n\n    public void processRecord(SNSRecord record) {\n        try {\n            String message = record.getSNS().getMessage();\n            logger.log(">>> message: " + message);\n\n            //--- message to DynamoDB\n            ObjectMapper objectMapper = new ObjectMapper();\n            Person person = objectMapper.readValue(message, Person.class);\n            log.info("JSON to POJO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> " + person.getFirstName());\n            String personId = "000000001";\n            person.setId(Integer.parseInt(personId));\n            addEntryToDynamoDB(person);\n            //---\n\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private static void addEntryToDynamoDB(Person person) throws ParseException {\n        try {\n            DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n                    .dynamoDbClient(dynamoDbClient)\n                    .build();\n\n            // use the enhanced client to interact with the table\n            DynamoDbTable<Person> table = enhancedClient.table(TABLE_NAME,\n                    TableSchema.fromBean(Person.class));\n            table.putItem(person);\n\n            log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Add Entry successfully");\n        } catch (DynamoDbException exception) {\n            log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Add Entry an error occurred: " + exception.getMessage());\n        }\n    }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"create-lambda-function",children:"Create Lambda Function"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"awslocal lambda create-function \\\n    --region us-east-1 \\\n    --function-name localstack-lambda-sns \\\n    --runtime java21 \\\n    --zip-file fileb://sns-trigger-lambda-0.0.1.jar \\\n    --handler com.example.SnsRequestHandler \\\n    --role arn:aws:iam::000000000000:role/example-lambda-noop-role \\\n    --timeout 120\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"spring-boot-to-sns-lambda",children:"Spring-Boot to SNS Lambda"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.h4,{id:"source-code-spring-boot-sns-lambda",children:["Source Code: ",(0,s.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/spring-boot-sns-lambda-dynamodb/spring-boot-sns-lambda",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"spring-boot-sns-lambda"})})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h4,{id:"running",children:"Running"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mvn clean package\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mvn spring-boot:run\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'//...\n2024-10-10T19:12:44.688+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : Started SNSApp in 0.553 seconds (process running for 0.674)\n2024-10-10T19:12:44.692+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : snsTopicARN: arn:aws:sns:us-east-1:000000000000:localstack-topic\n2024-10-10T19:12:44.692+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : Publishing SNS message: {"id":0,"firstName":"John","lastName":"Doe","age":26,"address":"Address01"}\n2024-10-10T19:12:44.793+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : SNS Message ID: 1ffa52b9-3f36-4b84-a296-137e6ad4f244\n2024-10-10T19:12:44.794+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : snsTopicARN: arn:aws:sns:us-east-1:000000000000:localstack-topic\n2024-10-10T19:12:44.794+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : Publishing SNS message: {"id":0,"firstName":"Jack","lastName":"Smith","age":30,"address":"Address02"}\n2024-10-10T19:12:44.799+02:00  INFO 236375 --- [           main] com.jreact.sns.SNSApp                    : SNS Message ID: 951c11fb-af8b-4191-91ce-2927491ceece\n//...\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h4,{id:"docker-log",children:"Docker Log"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'\nlocalstack_main  | 2024-10-10T14:02:12.500 DEBUG --- [ns:$LATEST_0] l.s.l.i.version_manager    : [localstack-lambda-sns-6a0ec8a6-756a-4de7-8b66-b11b5bd4a7c4] INFO: >>> start handleRequest...\nlocalstack_main  | 2024-10-10T14:02:12.500 DEBUG --- [ns:$LATEST_0] l.s.l.i.version_manager    : [localstack-lambda-sns-6a0ec8a6-756a-4de7-8b66-b11b5bd4a7c4] >>> message: {"id":0,"firstName":"John","lastName":"Doe","age":26,"address":"Address01"}Oct 10, 2024 2:02:12 PM com.example.SnsRequestHandler processRecord\nlocalstack_main  | 2024-10-10T14:02:12.500 DEBUG --- [ns:$LATEST_0] l.s.l.i.version_manager    : [localstack-lambda-sns-6a0ec8a6-756a-4de7-8b66-b11b5bd4a7c4] INFO: JSON to POJO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> John\nlocalstack_main  | 2024-10-10T14:02:12.500 DEBUG --- [ns:$LATEST_0] l.s.l.i.version_manager    : [localstack-lambda-sns-6a0ec8a6-756a-4de7-8b66-b11b5bd4a7c4] Oct 10, 2024 2:02:12 PM com.example.SnsRequestHandler addEntryToDynamoDB\nlocalstack_main  | 2024-10-10T14:02:12.500 DEBUG --- [ns:$LATEST_0] l.s.l.i.version_manager    : [localstack-lambda-sns-6a0ec8a6-756a-4de7-8b66-b11b5bd4a7c4] INFO: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Add Entry successfully\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h4,{id:"dynamodb-table",children:"DynamoDB table:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:' awslocal dynamodb query \\\n     --table-name person \\\n     --key-condition-expression "id = :id" \\\n     --expression-attribute-values  \'{":id":{"N":"000000001"}}\'\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    "Items": [\n        {\n            "firstName": {\n                "S": "John"\n            },\n            "lastName": {\n                "S": "Doe"\n            },\n            "address": {\n                "S": "Address01"\n            },\n            "id": {\n                "N": "1"\n            },\n            "age": {\n                "N": "26"\n            }\n        }\n    ],\n    "Count": 1,\n    "ScannedCount": 1,\n    "ConsumedCapacity": null\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n","\n",(0,s.jsx)(t.A,{items:(0,o.$S)().items})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},3514:(e,n,a)=>{a.d(n,{A:()=>j});a(6540);var s=a(4164),r=a(6972),t=a(8774),o=a(5846),i=a(6654),c=a(1312),l=a(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var m=a(4848);function p(e){let{href:n,children:a}=e;return(0,m.jsx)(t.A,{href:n,className:(0,s.A)("card padding--lg",d.cardContainer),children:a})}function u(e){let{href:n,icon:a,title:r,description:t}=e;return(0,m.jsxs)(p,{href:n,children:[(0,m.jsxs)(l.A,{as:"h2",className:(0,s.A)("text--truncate",d.cardTitle),title:r,children:[a," ",r]}),t&&(0,m.jsx)("p",{className:(0,s.A)("text--truncate",d.cardDescription),title:t,children:t})]})}function b(e){let{item:n}=e;const a=(0,r.Nr)(n),s=function(){const{selectMessage:e}=(0,o.W)();return n=>e(n,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return a?(0,m.jsx)(u,{href:a,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??s(n.items.length)}):null}function h(e){let{item:n}=e;const a=(0,i.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",s=(0,r.cC)(n.docId??void 0);return(0,m.jsx)(u,{href:n.href,icon:a,title:n.label,description:n.description??s?.description})}function g(e){let{item:n}=e;switch(n.type){case"link":return(0,m.jsx)(h,{item:n});case"category":return(0,m.jsx)(b,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function x(e){let{className:n}=e;const a=(0,r.$S)();return(0,m.jsx)(j,{items:a.items,className:n})}function j(e){const{items:n,className:a}=e;if(!n)return(0,m.jsx)(x,{...e});const t=(0,r.d1)(n);return(0,m.jsx)("section",{className:(0,s.A)("row",a),children:t.map(((e,n)=>(0,m.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,m.jsx)(g,{item:e})},n)))})}},5846:(e,n,a)=>{a.d(n,{W:()=>l});var s=a(6540),r=a(4586);const t=["zero","one","two","few","many","other"];function o(e){return t.filter((n=>e.includes(n)))}const i={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,s.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:o(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),i}}),[e])}function l(){const e=c();return{selectMessage:(n,a)=>function(e,n,a){const s=e.split("|");if(1===s.length)return s[0];s.length>a.pluralForms.length&&console.error(`For locale=${a.locale}, a maximum of ${a.pluralForms.length} plural forms are expected (${a.pluralForms.join(",")}), but the message contains ${s.length}: ${e}`);const r=a.select(n),t=a.pluralForms.indexOf(r);return s[Math.min(t,s.length-1)]}(a,n,e)}}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>i});var s=a(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);