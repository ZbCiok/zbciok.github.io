"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[7999],{9272:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>h,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=s(4848),n=s(8453),i=s(3514),c=s(5068);const o={slug:"/project-reactor"},a="Project Reactor",l={id:"project-reactor/index",title:"Project Reactor",description:"Create Efficient Reactive Systems",source:"@site/docs/project-reactor/index.mdx",sourceDirName:"project-reactor",slug:"/project-reactor",permalink:"/docs/project-reactor",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/project-reactor"},sidebar:"tutorialSidebar",previous:{title:"Getting Started with the Flow",permalink:"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/Getting-Started-with-Flow"},next:{title:"Mono and Flux",permalink:"/docs/project-reactor/mono-and-flux"}},h={},d=[{value:"Create Efficient Reactive Systems",id:"create-efficient-reactive-systems",level:3},{value:"Efficient Message Passing",id:"efficient-message-passing",level:3},{value:"A Micro Reactive Toolkit for All",id:"a-micro-reactive-toolkit-for-all",level:3}];function u(e){const r={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"project-reactor",children:"Project Reactor"})}),"\n",(0,t.jsx)(r.h3,{id:"create-efficient-reactive-systems",children:"Create Efficient Reactive Systems"}),"\n",(0,t.jsx)(r.p,{children:"Relationship between Publisher, Subscriber, and Subscription:"}),"\n",(0,t.jsx)("img",{src:"/img/project-reactor/reactor/interfaces-relationships-diagram-01.png",alt:"interfaces-relationships-diagram-01.png"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(r.p,{children:["Reactor is a fourth-generation reactive library, based on the ",(0,t.jsx)(r.a,{href:"/docs/reactive-streams",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Reactive Streams"})})})})," specification, for building non-blocking applications on the JVM.\nThis specification defines a set of interfaces, methods, and protocols to process streams ",(0,t.jsx)(r.a,{href:"/docs/streams/reactive-streams/asynchronicity",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"asynchronously"})})})})," and with ",(0,t.jsx)(r.a,{href:"/docs/streams/reactive-streams/backpressure",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"backpressure"})})})})," capabilities.\nLibraries implementing this specification can add more features, but they must pass the test suites provided by a Technology Compatibility Kit (TCK) and provide an ",(0,t.jsx)(r.a,{href:"https://github.com/reactive-streams/reactive-streams-jvm/blob/v1.0.3/README.md#api-components",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"API"})})})})," that consists of the following components:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.4-javadoc/org/reactivestreams/Publisher.html",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Publisher"})})})})}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["A provider of a potentially unbounded number of sequenced elements, publishing them according to the demand received from its Subscriber(s).\nReactive streams have ",(0,t.jsx)(r.a,{href:"/docs/streams/reactive-streams/backpressure",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"backpressure"})})})})," capabilities to control the number of elements received by the subscribers.\nThe ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"subscribe"})})})," method requests publishers to start streaming (pushing) data to the Subscriber (of type T or a superclass of T) instance passed as an argument. It can be called multiple times passing different Subscriber instances.\n",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Project Reactor"})})})," provides two implementations of the ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Publisher"})})})," interface:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Mono -  represents a ",(0,t.jsx)(r.strong,{children:"publisher"})," of zero or one object of type T."]}),"\n",(0,t.jsxs)(r.li,{children:["Flux - represents a ",(0,t.jsx)(r.strong,{children:"publisher"})," of zero or N objects of type T."]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public interface Publisher<T> {\n    public void subscribe(Subscriber<? super T> s);\n}\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.4-javadoc/org/reactivestreams/Subscriber.html",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscriber"})})})})}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Publisher"})})})," must create a ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscription"})})})," object to pass it to the ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"onSubscribe"})})})," method on the ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscriber"})})}),", so that this object can execute initialization logic.\nWhen an element of the sequence is available (an object of type T), the Publisher sends it to the Subscriber using the onNext(T t) method. It keeps doing this until:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"All the requested elements have been sent. After that, the Publisher calls the onComplete() method."}),"\n",(0,t.jsx)(r.li,{children:"An error occurs. In this case, the Publisher calls the onError(Throwable t) method, passing the exception that represents that error."}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public interface Subscriber<T> {\n    public void onSubscribe(Subscription s);\n    public void onNext(T t);\n    public void onError(Throwable t);\n    public void onComplete();\n}\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.4-javadoc/org/reactivestreams/Subscription.html#request(long)",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscription"})})})})}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["With a ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscription"})})})," object, the ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscriber"})})})," can control the number of requested elements or cancel the subscription.\nA ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscription"})})})," object is tied to one ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Publisher"})})})," and one ",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Subscriber"})})}),", and this object is not shared outside of the Subscriber."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public interface Subscription {\n    public void request(long n);\n    public void cancel();\n}\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.4-javadoc/org/reactivestreams/Processor.html",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"Processor"})})})})}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"As you can see, it combines the functionality of a Subscriber and a Publisher."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public interface Processor<T, R> extends Subscriber<T>, Publisher<R> {\n}\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(r.p,{children:"The core of reactive programming is building applications in a non-blocking, asynchronous way for scalability purposes."}),"\n",(0,t.jsxs)(r.p,{children:["The whole ",(0,t.jsx)(r.a,{href:"https://mvnrepository.com/search?q=io.projectreactor&d=io.projectreactor",children:(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.strong,{children:"functionality of Reactor"})})})})," is divided into many artifacts:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"reactor-core is the artifact with the main classes of the library."}),"\n",(0,t.jsx)(r.li,{children:"reactor-test contains the classes for testing reactive streams."}),"\n",(0,t.jsx)(r.li,{children:"reactor-netty is for building TCP, UDP, and HTTP servers and clients based on the Netty network application framework, among others."}),"\n",(0,t.jsx)(r.li,{children:"..."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"efficient-message-passing",children:"Efficient Message Passing"}),"\n",(0,t.jsxs)(r.p,{children:["Reactor operators and schedulers can sustain high throughput rates, on the order of 10\u2019s of millions of messages per second.\nIts low memory footprint goes under most radars.\n",(0,t.jsx)(r.strong,{children:"Reactor Core"})," is the first reactive library based on the joint reactive research effort also implemented by RxJava 2."]}),"\n",(0,t.jsx)(r.h3,{id:"a-micro-reactive-toolkit-for-all",children:"A Micro Reactive Toolkit for All"}),"\n",(0,t.jsx)(r.p,{children:"Don\u2019t write Reactive Streams yourself! Reactor\u2019s modules are embeddable and interoperable. They focus on providing rich and functional Reactive Streams APIs. You can use Reactor at any level of granularity:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"in frameworks such as Spring Boot and WebFlux"}),"\n",(0,t.jsx)(r.li,{children:"in drivers and clients such as the CloudFoundry Java Client"}),"\n",(0,t.jsx)(r.li,{children:"in contracts or protocols such as RSocket and R2DBC"}),"\n"]}),"\n","\n",(0,t.jsx)(i.A,{items:(0,c.$S)().items})]})}function m(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},3514:(e,r,s)=>{s.d(r,{A:()=>g});s(6540);var t=s(4164),n=s(6972),i=s(8774),c=s(5846),o=s(6654),a=s(1312),l=s(1107);const h={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=s(4848);function u(e){let{href:r,children:s}=e;return(0,d.jsx)(i.A,{href:r,className:(0,t.A)("card padding--lg",h.cardContainer),children:s})}function m(e){let{href:r,icon:s,title:n,description:i}=e;return(0,d.jsxs)(u,{href:r,children:[(0,d.jsxs)(l.A,{as:"h2",className:(0,t.A)("text--truncate",h.cardTitle),title:n,children:[s," ",n]}),i&&(0,d.jsx)("p",{className:(0,t.A)("text--truncate",h.cardDescription),title:i,children:i})]})}function j(e){let{item:r}=e;const s=(0,n.Nr)(r),t=function(){const{selectMessage:e}=(0,c.W)();return r=>e(r,(0,a.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:r}))}();return s?(0,d.jsx)(m,{href:s,icon:"\ud83d\uddc3\ufe0f",title:r.label,description:r.description??t(r.items.length)}):null}function p(e){let{item:r}=e;const s=(0,o.A)(r.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,n.cC)(r.docId??void 0);return(0,d.jsx)(m,{href:r.href,icon:s,title:r.label,description:r.description??t?.description})}function x(e){let{item:r}=e;switch(r.type){case"link":return(0,d.jsx)(p,{item:r});case"category":return(0,d.jsx)(j,{item:r});default:throw new Error(`unknown item type ${JSON.stringify(r)}`)}}function f(e){let{className:r}=e;const s=(0,n.$S)();return(0,d.jsx)(g,{items:s.items,className:r})}function g(e){const{items:r,className:s}=e;if(!r)return(0,d.jsx)(f,{...e});const i=(0,n.d1)(r);return(0,d.jsx)("section",{className:(0,t.A)("row",s),children:i.map(((e,r)=>(0,d.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,d.jsx)(x,{item:e})},r)))})}},5846:(e,r,s)=>{s.d(r,{W:()=>l});var t=s(6540),n=s(4586);const i=["zero","one","two","few","many","other"];function c(e){return i.filter((r=>e.includes(r)))}const o={locale:"en",pluralForms:c(["one","other"]),select:e=>1===e?"one":"other"};function a(){const{i18n:{currentLocale:e}}=(0,n.A)();return(0,t.useMemo)((()=>{try{return function(e){const r=new Intl.PluralRules(e);return{locale:e,pluralForms:c(r.resolvedOptions().pluralCategories),select:e=>r.select(e)}}(e)}catch(r){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${r.message}\n`),o}}),[e])}function l(){const e=a();return{selectMessage:(r,s)=>function(e,r,s){const t=e.split("|");if(1===t.length)return t[0];t.length>s.pluralForms.length&&console.error(`For locale=${s.locale}, a maximum of ${s.pluralForms.length} plural forms are expected (${s.pluralForms.join(",")}), but the message contains ${t.length}: ${e}`);const n=s.select(r),i=s.pluralForms.indexOf(n);return t[Math.min(i,t.length-1)]}(s,r,e)}}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var t=s(6540);const n={},i=t.createContext(n);function c(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);