"use strict";(self.webpackChunkjreact_com_docsaurus=self.webpackChunkjreact_com_docsaurus||[]).push([[9769],{8880:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=r(4848),t=r(8453);const s={sidebar_position:2},a="groupingBy classifier collector",i={id:"streams/java-8-streams/collectors/grouping-by/grouping-by-classifier-collector",title:"groupingBy classifier collector",description:"Data",source:"@site/docs/streams/java-8-streams/collectors/grouping-by/grouping-by-classifier-collector.mdx",sourceDirName:"streams/java-8-streams/collectors/grouping-by",slug:"/streams/java-8-streams/collectors/grouping-by/grouping-by-classifier-collector",permalink:"/docs/streams/java-8-streams/collectors/grouping-by/grouping-by-classifier-collector",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"groupingBy classifier",permalink:"/docs/streams/java-8-streams/collectors/grouping-by/grouping-by-classifier"},next:{title:"groupingBy classifier supplier collector",permalink:"/docs/streams/java-8-streams/collectors/grouping-by/grouping-by-classifier-supplier-collector"}},c={},l=[{value:"Data",id:"data",level:2},{value:"Examples",id:"examples",level:2},{value:"groupingByCounting()",id:"groupingbycounting",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"groupingby-classifier-collector",children:"groupingBy classifier collector"}),"\n",(0,o.jsx)(n.h2,{id:"data",children:"Data"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'    List<Employee> employees = List.of(\n            new Employee(1, "Alex", 30, new Department(1, "HR")),\n            new Employee(2, "Alex", 36, new Department(1, "HR")),\n            new Employee(3, "David", 30, new Department(1, "HR")),\n            new Employee(4, "Andrew", 30, new Department(2, "Finance")),\n            new Employee(5, "Edward", 31, new Department(2, "Finance")),\n            new Employee(6, "Nathan",42, new Department(3, "ADMIN")),\n            new Employee(7, "Frank",23 , new Department(3, "ADMIN")),\n            new Employee(8, "David", 30, new Department(1, "HR")));\n'})}),"\n",(0,o.jsx)(n.p,{children:"Syntax:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"\n groupingBy(Function<? super T,? extends K> classifier, Collector<? super T,A,D> downstream)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"groupingbycounting",children:"groupingByCounting()"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'    // counting\n    public void groupingByCounting() {\n        Map<Employee, Long> nameCount = employees.stream().collect(Collectors\n                .groupingBy(string -> string, Collectors.counting()));\n\n        nameCount.forEach((name, count) -> { System.out.println(name + ":" + count); });\n    }\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var o=r(6540);const t={},s=o.createContext(t);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);