"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[9655],{4436:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"apache-spark/examples/python-spark-quickstart","title":"Python Spark Quickstart","description":"Description","source":"@site/docs/apache-spark/examples/python-spark-quickstart.mdx","sourceDirName":"apache-spark/examples","slug":"/apache-spark/examples/python-spark-quickstart","permalink":"/docs/apache-spark/examples/python-spark-quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Examples","permalink":"/docs/streams/apache-string/examples"},"next":{"title":"Python Spark DataFrame","permalink":"/docs/apache-spark/examples/python-spark-DataFrame"}}');var r=s(4848),a=s(8453);const i={sidebar_position:100},o="Python Spark Quickstart",p={},c=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"python-spark-quickstart.py",id:"python-spark-quickstartpy",level:2},{value:"Run",id:"run",level:2},{value:"<em>local[4]</em> represents the number of cores that will be assigned to the <em>spark-submit</em> process.",id:"local4-represents-the-number-of-cores-that-will-be-assigned-to-the-spark-submit-process",level:4},{value:"Output",id:"output",level:4}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"python-spark-quickstart",children:"Python Spark Quickstart"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)("img",{src:"/img/streams/spark/05-spark-logo.png",alt:"05-spark-logo.png"}),"\n",(0,r.jsx)(n.p,{children:"This program just counts the number of lines containing \u2018a\u2019 and the number containing \u2018b\u2019 in a text file."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python"}),"\n",(0,r.jsx)(n.li,{children:"Spark"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"spark"})})," make"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"spark/my-examples\n"})}),"\n",(0,r.jsx)(n.p,{children:"i.e.:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 conf\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 examples\n\u251c\u2500\u2500 jars\n\u251c\u2500\u2500 kubernetes\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 licenses\n\u251c\u2500\u2500 logs\n\u251c\u2500\u2500 my-examples\n\u251c\u2500\u2500 NOTICE\n\u251c\u2500\u2500 python\n\u251c\u2500\u2500 R\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 RELEASE\n\u251c\u2500\u2500 sbin\n\u2514\u2500\u2500 yarn\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"spark/my-examples"})})," and create:"]}),"\n",(0,r.jsx)(n.h2,{id:"python-spark-quickstartpy",children:"python-spark-quickstart.py"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"""python-spark-quickstart"""\nfrom pyspark.sql import SparkSession\n\n# Should be some file on your system\n# logFile = "YOUR_SPARK_HOME/README.md"\n\n# Our case\nlogFile = "/opt/spark/README.md"\n\nspark = SparkSession.builder.appName("python-spark-quickstart").getOrCreate()\nlogData = spark.read.text(logFile).cache()\n\nnumAs = logData.filter(logData.value.contains(\'a\')).count()\nnumBs = logData.filter(logData.value.contains(\'b\')).count()\n\nprint("Lines with a: %i, lines with b: %i" % (numAs, numBs))\n\nspark.stop()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# go to spark and do:\n./bin/spark-submit --master local[4] ./my-examples/python-spark-quickstart.py\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"local4-represents-the-number-of-cores-that-will-be-assigned-to-the-spark-submit-process",children:[(0,r.jsx)(n.em,{children:"local[4]"})," represents the number of cores that will be assigned to the ",(0,r.jsx)(n.em,{children:"spark-submit"})," process."]}),"\n",(0,r.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"25/02/21 16:56:26 INFO SparkContext: Running Spark version 3.5.4\n25/02/21 16:56:26 INFO SparkContext: OS info Linux, 6.8.0-52-generic, amd64\n25/02/21 16:56:26 INFO SparkContext: Java version 11.0.26\n\n...\n...\n\n25/02/21 16:56:29 INFO DAGScheduler: Job 4 finished: count at NativeMethodAccessorImpl.java:0, took 0.011863 s\nLines with a: 72, lines with b: 39\n\n...\n...\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);