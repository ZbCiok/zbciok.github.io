"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1466],{165:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"quarkus/REST","title":"REST","description":"REST","source":"@site/docs/quarkus/REST.mdx","sourceDirName":"quarkus","slug":"/quarkus/REST","permalink":"/docs/quarkus/REST","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Quarkus","permalink":"/docs/quarkus"},"next":{"title":"Hibernate Panache","permalink":"/docs/quarkus/hibernate-panache"}}');var t=r(4848),s=r(8453);const i={sidebar_position:10},o="REST",u={},c=[{value:"Extensions &gt; REST",id:"extensions--rest",level:2},{value:"Quarkus CLI",id:"quarkus-cli",level:3},{value:"Maven",id:"maven",level:3},{value:"Gradle",id:"gradle",level:3},{value:"REST Example",id:"rest-example",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"pom.xml",id:"pomxml",level:4},{value:"GreetingResource.java",id:"greetingresourcejava",level:4},{value:"GreetingResourceTest.java",id:"greetingresourcetestjava",level:4},{value:"The above from code.quarkus.io:",id:"the-above-from-codequarkusio",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rest",children:"REST"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://quarkus.io/extensions/io.quarkus/quarkus-rest/?tab=docs",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"REST"})})})}),"\n",(0,t.jsxs)(n.p,{children:["A Jakarta REST implementation utilizing build time processing and Vert.x.\nThis extension is not compatible with the ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"quarkus-resteasy"})})," extension, or any of the extensions that depend on it."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Quarkus REST is a new ",(0,t.jsx)(n.a,{href:"https://jakarta.ee/specifications/restful-ws/3.1/jakarta-restful-ws-spec-3.1.html",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Jakarta REST"})})})," (formerly known as JAX-RS) implementation written from the ground up to work on our common Vert.x layer and is thus fully reactive, while also being very tightly integrated with Quarkus and consequently moving a lot of work to build time."]})}),"\n",(0,t.jsx)(n.p,{children:"You should be able to use it in place of any Jakarta REST implementation, but on top of that it has great performance for both blocking and non-blocking endpoints, and a lot of new features on top of what Jakarta REST provides."}),"\n",(0,t.jsx)(n.h2,{id:"extensions--rest",children:"Extensions > REST"}),"\n",(0,t.jsx)(n.p,{children:"To add this extension to your project, use the relevant command in your Quarkus project directory:"}),"\n",(0,t.jsx)(n.h3,{id:"quarkus-cli",children:"Quarkus CLI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"quarkus ext add io.quarkus:quarkus-rest\n"})}),"\n",(0,t.jsx)(n.h3,{id:"maven",children:"Maven"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'./mvnw quarkus:add-extension -Dextensions="io.quarkus:quarkus-rest"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"gradle",children:"Gradle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'./gradlew addExtension --extensions="io.quarkus:quarkus-rest"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"rest-example",children:"REST Example"}),"\n",(0,t.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)("img",{src:"/img/quarkus/rest/rest-extension-project-struct-01.png",alt:"rest-extension-project-struct-01.png"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.h4,{id:"pomxml",children:"pom.xml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.acme</groupId>\n    <artifactId>code-with-quarkus</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n\n    <properties>\n        <compiler-plugin.version>3.13.0</compiler-plugin.version>\n        <maven.compiler.release>21</maven.compiler.release>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n        <quarkus.platform.version>3.12.1</quarkus.platform.version>\n        <skipITs>true</skipITs>\n        <surefire-plugin.version>3.2.5</surefire-plugin.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>${quarkus.platform.group-id}</groupId>\n                <artifactId>${quarkus.platform.artifact-id}</artifactId>\n                <version>${quarkus.platform.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.quarkus</groupId>\n            <artifactId>quarkus-rest</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.quarkus</groupId>\n            <artifactId>quarkus-arc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.quarkus</groupId>\n            <artifactId>quarkus-junit5</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.rest-assured</groupId>\n            <artifactId>rest-assured</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>${quarkus.platform.group-id}</groupId>\n                <artifactId>quarkus-maven-plugin</artifactId>\n                <version>${quarkus.platform.version}</version>\n                <extensions>true</extensions>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>build</goal>\n                            <goal>generate-code</goal>\n                            <goal>generate-code-tests</goal>\n                            <goal>native-image-agent</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${compiler-plugin.version}</version>\n                <configuration>\n                    <compilerArgs>\n                        <arg>-parameters</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${surefire-plugin.version}</version>\n                <configuration>\n                    <systemPropertyVariables>\n                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n                        <maven.home>${maven.home}</maven.home>\n                    </systemPropertyVariables>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-failsafe-plugin</artifactId>\n                <version>${surefire-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>integration-test</goal>\n                            <goal>verify</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <systemPropertyVariables>\n                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n                        <maven.home>${maven.home}</maven.home>\n                    </systemPropertyVariables>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>native</id>\n            <activation>\n                <property>\n                    <name>native</name>\n                </property>\n            </activation>\n            <properties>\n                <skipITs>false</skipITs>\n                <quarkus.native.enabled>true</quarkus.native.enabled>\n            </properties>\n        </profile>\n    </profiles>\n</project>\n'})}),"\n",(0,t.jsx)(n.h4,{id:"greetingresourcejava",children:"GreetingResource.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package org.acme;\n\nimport jakarta.ws.rs.GET;\nimport jakarta.ws.rs.Path;\nimport jakarta.ws.rs.Produces;\nimport jakarta.ws.rs.core.MediaType;\n\n@Path("/hello")\npublic class GreetingResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String hello() {\n        return "Hello from Quarkus REST";\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"greetingresourcetestjava",children:"GreetingResourceTest.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package org.acme;\n\nimport io.quarkus.test.junit.QuarkusTest;\nimport org.junit.jupiter.api.Test;\n\nimport static io.restassured.RestAssured.given;\nimport static org.hamcrest.CoreMatchers.is;\n\n@QuarkusTest\nclass GreetingResourceTest {\n    @Test\n    void testHelloEndpoint() {\n        given()\n          .when().get("/hello")\n          .then()\n             .statusCode(200)\n             .body(is("Hello from Quarkus REST"));\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"the-above-from-codequarkusio",children:"The above from code.quarkus.io:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://code.quarkus.io/?e=rest&S=io.quarkus.platform%3A3.12",children:"https://code.quarkus.io/?e=rest&S=io.quarkus.platform%3A3.12"})})})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var a=r(6540);const t={},s=a.createContext(t);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);