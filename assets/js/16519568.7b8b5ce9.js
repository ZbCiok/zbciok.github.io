"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1676],{1470:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>h});var a=r(4848),n=r(8453);const i={sidebar_position:40},t="Schema Registry",o={id:"messaging/kafka/schema-registry",title:"Schema Registry",description:"Definition and Purpose",source:"@site/docs/messaging/kafka/schema-registry.mdx",sourceDirName:"messaging/kafka",slug:"/messaging/kafka/schema-registry",permalink:"/docs/messaging/kafka/schema-registry",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Confluent CLI",permalink:"/docs/messaging/kafka/confluent-cli"},next:{title:"Examples",permalink:"/docs/messaging/kafka/examples"}},c={},h=[{value:"Definition and Purpose",id:"definition-and-purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Schema Types",id:"schema-types",level:2},{value:"<em><strong>Avro</strong></em> <br></br>",id:"avro-",level:3},{value:"<em><strong>JSON Schema</strong></em> <br></br>",id:"json-schema-",level:3},{value:"<em><strong>Protobuf</strong></em><br></br>",id:"protobuf",level:3}];function l(e){const s={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"schema-registry",children:"Schema Registry"})}),"\n",(0,a.jsx)("img",{src:"/img/messaging/kafka/schema-registry-diag-01.png",width:"800 px",alt:"schema-registry-diag-01.png"}),"\n",(0,a.jsx)(s.h2,{id:"definition-and-purpose",children:"Definition and Purpose"}),"\n",(0,a.jsx)(s.p,{children:"Schema Registry provides a centralized repository for managing and validating schemas for topic message data, and for serialization and deserialization of the data over the network. Producers and consumers to Kafka topics can use schemas to ensure data consistency and compatibility as schemas evolve. Schema Registry is a key component for data governance, helping to ensure data quality, adherence to standards, visibility into data lineage, audit capabilities, collaboration across teams, efficient application development protocols, and system performance."}),"\n",(0,a.jsx)(s.p,{children:"The Kafka schema registry serves as an external application that manages data schemas. This registry resides outside the Kafka cluster. It stores, distributes, and approves schemas between producers and consumers. The primary purpose involves ensuring data reliability and consistency. By maintaining a central repository for schemas, the registry facilitates seamless data serialization and deserialization."}),"\n",(0,a.jsx)(s.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Centralized Schema Storage: Maintains a single source of truth for all schemas."}),"\n",(0,a.jsx)(s.li,{children:"Schema Versioning: Tracks changes by creating new versions for each schema update."}),"\n",(0,a.jsx)(s.li,{children:"Compatibility Checks: Ensures new schemas remain compatible with existing ones."}),"\n",(0,a.jsx)(s.li,{children:"RESTful Interface: Provides a user-friendly API for schema management."}),"\n",(0,a.jsx)(s.li,{children:"Support for Multiple Formats: Handles Avro, JSON Schema, and Protobuf formats."}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"schema-types",children:"Schema Types"}),"\n",(0,a.jsxs)(s.h3,{id:"avro-",children:[(0,a.jsx)(s.a,{href:"https://avro.apache.org/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Avro"})})})," ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(s.h3,{id:"json-schema-",children:[(0,a.jsx)(s.a,{href:"https://json-schema.org/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"JSON Schema"})})})," ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(s.h3,{id:"protobuf",children:[(0,a.jsx)(s.a,{href:"https://protobuf.dev/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Protobuf"})})}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://risingwave.com/blog/comprehensive-guide-to-kafka-schema-registry/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Comprehensive Guide to Kafka Schema Registry"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://docs.confluent.io/platform/current/control-center/topics/schema.html",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Manage Schemas in Confluent Platform"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://docs.confluent.io/platform/current/schema-registry/schema_registry_onprem_tutorial.html#schema-registry-onprem-tutorial",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Review the step-by-step tutorial for using Schema Registry"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://docs.confluent.io/platform/7.8/schema-registry/index.html",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Schema Registry Documentation"})})})," ",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://docs.confluent.io/platform/current/schema-registry/schema_registry_onprem_tutorial.html#schema-registry-onprem-tutorial",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Tutorial: Use Schema Registry on Confluent Platform to Implement Schemas for a Client Application"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://medium.com/@bulbulmishrajnv/sending-protobuf-message-using-custom-schema-in-kafka-stream-a75017506907",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Sending Protobuf message using custom schema in Kafka stream"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://dzone.com/articles/how-to-use-protobuf-with-apache-kafka-and-schema-r",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"How to Use Protobuf With Apache Kafka and Schema Registry"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://codingharbour.com/apache-kafka/guide-to-apache-avro-and-kafka/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Guide to Apache Avro and Kafka"})})})," ",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://softwareskill.pl/apache-kafka-avro-schema-registry",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Apache Kafka + Avro + Schema Registry"})})}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://developer.confluent.io/confluent-tutorials/console-consumer-producer-avro/",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"https://developer.confluent.io/confluent-tutorials/console-consumer-producer-avro/"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://docs.timeplus.com/tutorial-sql-read-avro",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Encode/Decode Avro Messages"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://medium.com/@rramiz.rraza/kafka-programming-in-java-with-avro-serialization-f0121db5a5a1",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Kafka programming in Java with Avro serialization"})})}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://medium.com/ing-tech-romania/implementing-a-basic-kafka-producer-and-consumer-using-spring-boot-spring-kafka-and-avro-schema-2b6d06e6c4cf",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Implementing a basic Kafka Producer and Consumer using Spring Boot, Spring Kafka and Avro schema"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(s.a,{href:"https://github.com/dianafagateanu/kafka-demo",children:(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"Implementing a basic Kafka Producer and Consumer using Spring Boot, Spring Kafka and Avro schema (github)"})})}),(0,a.jsx)("br",{})]})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>o});var a=r(6540);const n={},i=a.createContext(n);function t(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);