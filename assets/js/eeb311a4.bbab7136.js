"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[9589],{9776:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var a=n(4848),i=n(8453);const o={sidebar_position:22},s="Kafka Avro 1",c={id:"messaging/kafka/examples/kafka-avro-1",title:"Kafka Avro 1",description:"Description",source:"@site/docs/messaging/kafka/examples/kafka-avro-1.mdx",sourceDirName:"messaging/kafka/examples",slug:"/messaging/kafka/examples/kafka-avro-1",permalink:"/docs/messaging/kafka/examples/kafka-avro-1",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"Schema Registry Spring Boot",permalink:"/docs/messaging/kafka/examples/schema-registry-spring-boot"},next:{title:"Kafka Protobuf 1",permalink:"/docs/messaging/kafka/examples/kafka-protobuf-1"}},t={},p=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Running Docker",id:"running-docker",level:3},{value:"Defining the Avro Schema",id:"defining-the-avro-schema",level:3},{value:"Running <em><strong>avro-maven-plugin</strong></em>",id:"running-avro-maven-plugin",level:3},{value:"SpecificRecordProducer.java",id:"specificrecordproducerjava",level:3},{value:"SpecificRecordConsumer.java",id:"specificrecordconsumerjava",level:3}];function l(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"kafka-avro-1",children:"Kafka Avro 1"})}),"\n",(0,a.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)("img",{src:"/img/messaging/kafka/example-kafka-avro-1.png",width:"300 px",alt:"example-kafka-avro-1.png"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Running a Kafka cluster locally (Docker)"}),"\n",(0,a.jsx)(r.li,{children:"Defining the Avro Schema"}),"\n",(0,a.jsx)(r.li,{children:"Producing Avro messages"}),"\n",(0,a.jsx)(r.li,{children:"Consuming Avro messages"}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Linux"}),"\n",(0,a.jsx)(r.li,{children:"JDK 21"}),"\n",(0,a.jsx)(r.li,{children:"Maven"}),"\n",(0,a.jsx)(r.li,{children:"Docker"}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:".\n\u251c\u2500\u2500 kafka-docker-compose\n\u2502\xa0\xa0 \u251c\u2500\u2500 kafka-ssl\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 docker-compose.yml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 README.md\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 security\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 create-certificates.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 create-jks-certificate.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 create-pem-certificate.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 remove-certs.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 start-cluster.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 stop-cluster.sh\n\u2502\xa0\xa0 \u251c\u2500\u2500 LICENSE\n\u2502\xa0\xa0 \u251c\u2500\u2500 README.md\n\u2502\xa0\xa0 \u251c\u2500\u2500 single-node-avro-kafka\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 docker-compose.yml\n\u2502\xa0\xa0 \u2514\u2500\u2500 single-node-kafka\n\u2502\xa0\xa0     \u2514\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 jreact\n        \u2502\xa0\xa0     \u2514\u2500\u2500 com\n        \u2502\xa0\xa0         \u2514\u2500\u2500 kafka\n        \u2502\xa0\xa0             \u2514\u2500\u2500 schema\n        \u2502\xa0\xa0                 \u2514\u2500\u2500 registry\n        \u2502\xa0\xa0                     \u251c\u2500\u2500 consumer\n        \u2502\xa0\xa0                     \u2502\xa0\xa0 \u251c\u2500\u2500 GenericRecordConsumer.java.bak\n        \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2514\u2500\u2500 SpecificRecordConsumer.java\n        \u2502\xa0\xa0                     \u2514\u2500\u2500 producer\n        \u2502\xa0\xa0                         \u251c\u2500\u2500 GenericRecordProducer.java.bak\n        \u2502\xa0\xa0                         \u2514\u2500\u2500 SpecificRecordProducer.java\n        \u2514\u2500\u2500 resources\n            \u251c\u2500\u2500 avro\n            \u2502\xa0\xa0 \u2514\u2500\u2500 SimpleMessage.avsc\n            \u2514\u2500\u2500 log4j.properties\n\n"})}),"\n",(0,a.jsx)(r.h3,{id:"running-docker",children:"Running Docker"}),"\n",(0,a.jsxs)(r.p,{children:["Got to folder ",(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:"single-node-avro-kafka"})})," and and start:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"docker-compose up -d\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"docker ps\n"})}),"\n",(0,a.jsx)(r.p,{children:"Output:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:' CONTAINER ID   IMAGE                                   COMMAND                  CREATED       STATUS       PORTS                                        NAMES\n 2949b466be6c   confluentinc/cp-schema-registry:7.5.2   "/etc/confluent/dock\u2026"   6 hours ago   Up 6 hours   0.0.0.0:8081->8081/tcp                       sn-schema-registry\n 981051ab7fed   confluentinc/cp-kafka:7.5.2             "/etc/confluent/dock\u2026"   6 hours ago   Up 6 hours   0.0.0.0:9092->9092/tcp                       sn-kafka\n f07a02a7f3d4   confluentinc/cp-zookeeper:7.5.2         "/etc/confluent/dock\u2026"   6 hours ago   Up 6 hours   2888/tcp, 0.0.0.0:2181->2181/tcp, 3888/tcp   sn-zookeeper\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"docker exec -it sn-kafka /bin/bash\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"cd /opt\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"kafka-topics --list --bootstrap-server localhost:9092\n"})}),"\n",(0,a.jsx)(r.p,{children:"Result:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"__consumer_offsets\n_schemas\navro-topic\n"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:"avro-topic"})})," is created by ",(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:"public class SpecificRecordProducer"})})]}),"\n",(0,a.jsx)(r.h3,{id:"defining-the-avro-schema",children:"Defining the Avro Schema"}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"SimpleMessage.avsc"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:'{\n\t"type": "record",\n\t"name": "SimpleMessage",\n\t"namespace": "com.jreact.kafka.schema.registry.avro",\n\t"fields": [\n\t\t{"name": "content", "type":"string", "doc": "Message content"},\n\t\t{"name": "date_time", "type":"string", "doc": "Datetime when the message was generated"}\n\t]\n}\n'})}),"\n",(0,a.jsxs)(r.h3,{id:"running-avro-maven-plugin",children:["Running ",(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:"avro-maven-plugin"})})]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"mvn clean package\n"})}),"\n",(0,a.jsx)(r.p,{children:"Result"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u2514\u2500\u2500 main\n\u2502\xa0\xa0     \u251c\u2500\u2500 java\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 com\n\u2502\xa0\xa0     \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n\u2502\xa0\xa0     \u2502\xa0\xa0         \u2514\u2500\u2500 kafka\n\u2502\xa0\xa0     \u2502\xa0\xa0             \u2514\u2500\u2500 schema\n\u2502\xa0\xa0     \u2502\xa0\xa0                 \u2514\u2500\u2500 registry\n\u2502\xa0\xa0     \u2502\xa0\xa0                     \u251c\u2500\u2500 avro\n\u2502\xa0\xa0     \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2514\u2500\u2500 SimpleMessage.java\n\n"})}),"\n",(0,a.jsx)(r.h3,{id:"specificrecordproducerjava",children:"SpecificRecordProducer.java"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'package com.jreact.kafka.schema.registry.producer;\n\nimport com.jreact.kafka.schema.registry.avro.SimpleMessage;\nimport io.confluent.kafka.serializers.KafkaAvroSerializer;\nimport io.confluent.kafka.serializers.KafkaAvroSerializerConfig;\nimport org.apache.avro.specific.SpecificRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.clients.producer.Producer;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.common.serialization.StringSerializer;\n\nimport java.time.Instant;\nimport java.util.Properties;\n\npublic class SpecificRecordProducer {\n\n    public static void main(String[] args) {\n        SpecificRecordProducer specificRecordProducer = new SpecificRecordProducer();\n        specificRecordProducer.writeMessage();\n    }\n\n    public void writeMessage() {\n        Properties properties = new Properties();\n        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");\n        properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n        properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaAvroSerializer.class);\n        properties.put(KafkaAvroSerializerConfig.SCHEMA_REGISTRY_URL_CONFIG, "http://localhost:8081");\n\n        Producer<String, SpecificRecord> producer = new KafkaProducer<>(properties);\n\n        //create the specific record\n        SimpleMessage simpleMessage = new SimpleMessage();\n        simpleMessage.setContent("Hello world");\n        simpleMessage.setDateTime(Instant.now().toString());\n\n        // creates avro-topic if it doesn\'t exist\n        // public ProducerRecord(String topic, Integer partition, Long timestamp, K key, V value, Iterable<Header> headers) {\n        //    ...\n        // }\n        ProducerRecord<String, SpecificRecord> record = new ProducerRecord<>("avro-topic", null, simpleMessage);\n\n        producer.send(record);\n        //ensures record is sent before closing the producer\n        producer.flush();\n\n        producer.close();\n    }\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"specificrecordconsumerjava",children:"SpecificRecordConsumer.java"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'package com.jreact.kafka.schema.registry.consumer;\n\nimport com.jreact.kafka.schema.registry.avro.SimpleMessage;\nimport io.confluent.kafka.serializers.KafkaAvroDeserializer;\nimport io.confluent.kafka.serializers.KafkaAvroDeserializerConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\n\nimport java.time.Duration;\nimport java.util.Collections;\nimport java.util.Properties;\n\npublic class SpecificRecordConsumer {\n\n    public static void main(String[] args) {\n        SpecificRecordConsumer genericRecordConsumer = new SpecificRecordConsumer();\n        genericRecordConsumer.readMessages();\n    }\n\n    public void readMessages() {\n        //create kafka producer\n        Properties properties = new Properties();\n        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");\n        properties.put(ConsumerConfig.GROUP_ID_CONFIG, "specific-record-consumer-group");\n        properties.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");\n        properties.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);\n\n        properties.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        properties.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, KafkaAvroDeserializer.class);\n\n        properties.put(KafkaAvroDeserializerConfig.SCHEMA_REGISTRY_URL_CONFIG, "http://localhost:8081");\n        properties.put(KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n\n        KafkaConsumer<String, SimpleMessage> consumer = new KafkaConsumer<>(properties);\n\n        consumer.subscribe(Collections.singleton("avro-topic"));\n\n        //poll the record from the topic\n        while (true) {\n            ConsumerRecords<String, SimpleMessage> records = consumer.poll(Duration.ofMillis(100));\n\n            for (ConsumerRecord<String, SimpleMessage> record : records) {\n                System.out.println("Message content: " + record.value().getContent());\n                System.out.println("Message time: " + record.value().getDateTime());\n            }\n            consumer.commitAsync();\n        }\n\n    }\n}\n'})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsxs)(r.p,{children:["Source Code: ",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:(0,a.jsx)(r.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/kafka/kafka-avro-1",children:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/kafka/kafka-avro-1"})})})]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(r.p,{children:["Based on: ",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.em,{children:(0,a.jsx)(r.strong,{children:(0,a.jsx)(r.a,{href:"https://codingharbour.com/apache-kafka/guide-to-apache-avro-and-kafka/",children:"https://codingharbour.com/apache-kafka/guide-to-apache-avro-and-kafka/"})})})]})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var a=n(6540);const i={},o=a.createContext(i);function s(e){const r=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:r},e.children)}}}]);