"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[4882],{72:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(4848),s=r(8453);const i={slug:"/quarkus"},a="Quarkus",o={id:"quarkus/index",title:"Quarkus",description:"https://quarkus.io/",source:"@site/docs/quarkus/index.mdx",sourceDirName:"quarkus",slug:"/quarkus",permalink:"/docs/quarkus",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/quarkus"},sidebar:"tutorialSidebar",previous:{title:"VERT.X",permalink:"/docs/vertx"},next:{title:"REST",permalink:"/docs/quarkus/REST"}},u={},l=[{value:"How does Quarkus enable Reactive?",id:"how-does-quarkus-enable-reactive",level:2},{value:"Vert.x",id:"vertx",level:2},{value:"Example",id:"example",level:2},{value:"Mutiny Integration in Quarkus",id:"mutiny-integration-in-quarkus",level:2}];function c(e){const n={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"quarkus",children:"Quarkus"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://quarkus.io/",children:"https://quarkus.io/"})})})}),"\n",(0,t.jsx)(n.h2,{id:"how-does-quarkus-enable-reactive",children:"How does Quarkus enable Reactive?"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Quarkus is reactive. It\u2019s even more than this: ",(0,t.jsx)(n.strong,{children:"Quarkus unifies reactive and imperative programming"}),".\nYou don\u2019t even have to choose: ",(0,t.jsx)(n.strong,{children:"you can implement reactive components and imperative components then combine them inside the very same application."}),"\nNo need to use different stacks, tooling or APIs; Quarkus bridges both worlds."]})}),"\n",(0,t.jsx)(n.p,{children:"Quarkus has a reactive engine. This engine, powered by Eclipse Vert.x and Netty, handles the non-blocking I/O interactions.\nQuarkus uses Mutiny as its central reactive programming model."}),"\n",(0,t.jsx)(n.h2,{id:"vertx",children:"Vert.x"}),"\n",(0,t.jsx)(n.p,{children:"Quarkus uses Vert.x underneath. Quarkus applications can access and use the Vert.x APIs. This presents how you can build a Quarkus application using:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the managed instance of Vert.x"}),"\n",(0,t.jsx)(n.li,{children:"the Vert.x event bus"}),"\n",(0,t.jsx)(n.li,{children:"the Vert.x Web Client"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://quarkus.io/guides/vertx-reference",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Vert.x reference guide"})})})," covers more advanced features such as verticles, and native transports."]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"We are going to build a simple application exposing four HTTP endpoints:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"/vertx/lorem"})})," returns the content from a small file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"/vertx/book"})})," returns the content from a large file (a book)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"/vertx/hello"})})," uses the Vert.x event bus to produce the response"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"/vertx/web"})})," uses the Vert.x Web Client to retrieve data from Wikipedia"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The solution is located in the ",(0,t.jsx)(n.a,{href:"https://github.com/quarkusio/quarkus-quickstarts/tree/main/vertx-quickstart",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"vertx-quickstart"})})})," directory."]}),"\n",(0,t.jsx)(n.h2,{id:"mutiny-integration-in-quarkus",children:"Mutiny Integration in Quarkus"}),"\n",(0,t.jsx)(n.p,{children:"The integration of Mutiny in Quarkus goes beyond just the library. Mutiny exposes hooks that allow Quarkus and Mutiny to be closely integrated:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Calling await or toIterable would fail if you are running on an I/O thread, preventing blocking the I/O thread;"}),"\n",(0,t.jsx)(n.li,{children:"The log() operator use the Quarkus logger;"}),"\n",(0,t.jsx)(n.li,{children:"The default Mutiny thread pool is the Quarkus worker thread pool;"}),"\n",(0,t.jsx)(n.li,{children:"Context Propagation is enabled by default when using Mutiny Uni and Multi"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/smallrye-mutiny/guides",children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Mutiny Vert.x bindings"})})})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);