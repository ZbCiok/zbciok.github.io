"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1689],{4365:(e,n,t)=>{t.d(n,{W:()=>c});var a=t(6540),r=t(502);const i=["zero","one","two","few","many","other"];function o(e){return i.filter((n=>e.includes(n)))}const s={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function d(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,a.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:o(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),s}}),[e])}function c(){const e=d();return{selectMessage:(n,t)=>function(e,n,t){const a=e.split("|");if(1===a.length)return a[0];a.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${a.length}: ${e}`);const r=t.select(n),i=t.pluralForms.indexOf(r);return a[Math.min(i,a.length-1)]}(t,n,e)}}},7170:(e,n,t)=>{t.d(n,{A:()=>v});t(6540);var a=t(4164),r=t(7936),i=t(7634),o=t(4365),s=t(5242),d=t(9979),c=t(4861);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var m=t(4848);function p(e){let{href:n,children:t}=e;return(0,m.jsx)(i.A,{href:n,className:(0,a.A)("card padding--lg",l.cardContainer),children:t})}function h(e){let{href:n,icon:t,title:r,description:i}=e;return(0,m.jsxs)(p,{href:n,children:[(0,m.jsxs)(c.A,{as:"h2",className:(0,a.A)("text--truncate",l.cardTitle),title:r,children:[t," ",r]}),i&&(0,m.jsx)("p",{className:(0,a.A)("text--truncate",l.cardDescription),title:i,children:i})]})}function u(e){let{item:n}=e;const t=(0,r.Nr)(n),a=function(){const{selectMessage:e}=(0,o.W)();return n=>e(n,(0,d.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,m.jsx)(h,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??a(n.items.length)}):null}function b(e){let{item:n}=e;const t=(0,s.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,r.cC)(n.docId??void 0);return(0,m.jsx)(h,{href:n.href,icon:t,title:n.label,description:n.description??a?.description})}function x(e){let{item:n}=e;switch(n.type){case"link":return(0,m.jsx)(b,{item:n});case"category":return(0,m.jsx)(u,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function y(e){let{className:n}=e;const t=(0,r.$S)();return(0,m.jsx)(v,{items:t.items,className:n})}function v(e){const{items:n,className:t}=e;if(!n)return(0,m.jsx)(y,{...e});const i=(0,r.d1)(n);return(0,m.jsx)("section",{className:(0,a.A)("row",t),children:i.map(((e,n)=>(0,m.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,m.jsx)(x,{item:e})},n)))})}},7397:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"aws/dynamodb/examples/ddb-write-read-example-01","title":"ddb-write-read-example-01","description":"Description","source":"@site/docs/aws/dynamodb/examples/ddb-write-read-example-01.mdx","sourceDirName":"aws/dynamodb/examples","slug":"/aws/dynamodb/examples/ddb-write-read-example-01","permalink":"/docs/aws/dynamodb/examples/ddb-write-read-example-01","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"ddb-create-table-example-01","permalink":"/docs/aws/dynamodb/examples/ddb-create-table-example-01"},"next":{"title":"ddb-delete-table-example-01","permalink":"/docs/aws/dynamodb/examples/ddb-delete-table-example-01"}}');var r=t(4848),i=t(8453),o=t(7170),s=t(3304);const d={sidebar_position:10},c="ddb-write-read-example-01",l={},m=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Run LocalStack",id:"run-localstack",level:2},{value:"Create table",id:"create-table",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"pom.xml",id:"pomxml",level:3},{value:"Person.java",id:"personjava",level:3},{value:"DynamoDBService.java",id:"dynamodbservicejava",level:3},{value:"Running and Testing",id:"running-and-testing",level:2},{value:"Output:",id:"output",level:4},{value:"Output:",id:"output-1",level:4},{value:"Output:",id:"output-2",level:4},{value:"Source Code",id:"source-code",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ddb-write-read-example-01",children:"ddb-write-read-example-01"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"This example's purpose is to support the LocalStack on using the platform with Java AWS applications."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://maven.apache.org/install.html",children:"Maven 3.8.5+"})," & ",(0,r.jsx)(n.a,{href:"https://www.java.com/en/download/help/download_options.html",children:"Java 17"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://localstack.cloud/",children:"LocalStack"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," - for running LocalStack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://aws.amazon.com/cli/",children:"AWS CLI"})," and ",(0,r.jsx)(n.a,{href:"https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal",children:"awslocal"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"run-localstack",children:"Run LocalStack"}),"\n",(0,r.jsx)(n.h2,{id:"create-table",children:"Create table"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"awslocal dynamodb create-table \\\n    --table-name person \\\n    --attribute-definitions AttributeName=id,AttributeType=S \\\n    --key-schema AttributeName=id,KeyType=HASH \\\n    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 v2\n        \u2502\xa0\xa0     \u2514\u2500\u2500 dynamodb\n        \u2502\xa0\xa0         \u251c\u2500\u2500 DynamoDBService.java\n        \u2502\xa0\xa0         \u251c\u2500\u2500 PersonBirthdateConverter.java\n        \u2502\xa0\xa0         \u2514\u2500\u2500 Person.java\n        \u2514\u2500\u2500 resources\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>cloud.localstack</groupId>\n  <artifactId>ddb-write-read-example-01</artifactId>\n  <version>1.0-SNAPSHOT</version>\n\n  <properties>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n    <exec.cleanupDaemonThreads>false</exec.cleanupDaemonThreads>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>software.amazon.awssdk</groupId>\n      <artifactId>dynamodb-enhanced</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>software.amazon.awssdk</groupId>\n      <artifactId>dynamodb</artifactId>\n    </dependency>\n  </dependencies>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>software.amazon.awssdk</groupId>\n        <artifactId>bom</artifactId>\n        <version>2.20.47</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n</project>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"personjava",children:"Person.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package v2.dynamodb;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;\nimport software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbConvertedBy;\nimport software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;\n\n@DynamoDbBean\npublic class Person {\n\n  private String id;\n  private String name;\n  private Date birthdate;\n\n  @DynamoDbPartitionKey\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  @DynamoDbConvertedBy(PersonBirthdateConverter.class)\n  public Date getBirthdate() {\n    return birthdate;\n  }\n\n  public void setBirthdate(Date birthdate) {\n    this.birthdate = birthdate;\n  }\n\n  public String getBirthdateAsString() {\n    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");\n    return sdf.format(birthdate);\n  }\n\n  public void setBirthdateFromString(String birthdateStr) throws ParseException {\n    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");\n    this.birthdate = sdf.parse(birthdateStr);\n  }\n\n  @Override\n  public String toString() {\n    return "Person{" +\n        "id=\'" + id + \'\\\'\' +\n        ", name=\'" + name + \'\\\'\' +\n        ", birthdate=" + birthdate +\n        \'}\';\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dynamodbservicejava",children:"DynamoDBService.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'package v2.dynamodb;\n\nimport java.net.URI;\nimport java.text.ParseException;\nimport software.amazon.awssdk.auth.credentials.AwsBasicCredentials;\nimport software.amazon.awssdk.auth.credentials.AwsCredentialsProvider;\nimport software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbTable;\nimport software.amazon.awssdk.enhanced.dynamodb.Key;\nimport software.amazon.awssdk.enhanced.dynamodb.TableSchema;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.dynamodb.DynamoDbClient;\nimport software.amazon.awssdk.services.dynamodb.model.DynamoDbException;\n\npublic class DynamoDBService {\n\n  // credentials that can be replaced with real AWS values\n  private static final String ACCESS_KEY = "test";\n  private static final String SECRET_KEY = "test";\n  private static String TABLE_NAME = "person";\n  private static AwsCredentialsProvider credentials = StaticCredentialsProvider.create(\n      AwsBasicCredentials.create(ACCESS_KEY, SECRET_KEY));\n\n  // create the dynamoDB client using the credentials and specific region\n  private static Region region = Region.US_EAST_1;\n\n  // create a dynamoDB client\n  private static DynamoDbClient dynamoDbClient = DynamoDbClient.builder()\n      .region(region)\n      .credentialsProvider(\n          credentials)\n      .endpointOverride(URI.create("https://localhost.localstack.cloud:4566"))\n      .build();\n\n  public static void main(String[] args) throws ParseException {\n    String personId1 = "100012356";\n\n    addEntryToDynamoDB(personId1);\n\n    readEntryFromDynamoDB(personId1);\n  }\n\n  private static void readEntryFromDynamoDB(String personId) {\n    try {\n\n      DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n          .dynamoDbClient(dynamoDbClient)\n          .build();\n      DynamoDbTable<Person> table = enhancedClient.table(TABLE_NAME,\n          TableSchema.fromBean(Person.class));\n\n      Person person = table.getItem(Key.builder().partitionValue(personId).build());\n\n      // do something with the person object\n      if (person != null) {\n        System.out.println("Retrieved Person: " + person);\n      } else {\n        System.out.println("Person with ID " + personId + " not found.");\n      }\n    } catch (DynamoDbException exception) {\n      System.out.println("Something happened: " + exception.getMessage());\n    }\n  }\n\n  private static void addEntryToDynamoDB(String personID) throws ParseException {\n    try {\n      DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n          .dynamoDbClient(dynamoDbClient)\n          .build();\n\n      // create the Person object\n      Person person = new Person();\n      person.setId(personID);\n      person.setName("John Doe");\n      person.setBirthdateFromString("1979-01-01");\n\n      // use the enhanced client to interact with the table\n      DynamoDbTable<Person> table = enhancedClient.table(TABLE_NAME,\n          TableSchema.fromBean(Person.class));\n      table.putItem(person);\n\n      System.out.println("Entry added successfully!");\n    } catch (DynamoDbException exception) {\n      System.out.println("An error occurred: " + exception.getMessage());\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"running-and-testing",children:"Running and Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mvn clean package\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'mvn exec:java -Dexec.mainClass="v2.dynamodb.DynamoDBService"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"output",children:"Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Entry added successfully!\nRetrieved Person: Person{id='100012356', name='John Doe', birthdate=Mon Jan 01 00:00:00 CET 1979}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'awslocal dynamodb get-item --consistent-read \\\n    --table-name person \\\n    --key \'{ "id": {"S": "100012356"}}\'\n'})}),"\n",(0,r.jsx)(n.h4,{id:"output-1",children:"Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n    "Item": {\n        "name": {\n            "S": "John Doe"\n        },\n        "birthdate": {\n            "S": "1979-01-01"\n        },\n        "id": {\n            "S": "100012356"\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'awslocal dynamodb execute-statement --statement "SELECT * FROM person"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"output-2",children:"Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n    "Items": [\n        {\n            "name": {\n                "S": "John Doe"\n            },\n            "birthdate": {\n                "S": "1979-01-01"\n            },\n            "id": {\n                "S": "100012356"\n            }\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"source-code",children:"Source Code"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/ddb-write-read-example-01",children:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/ddb-write-read-example-01"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n","\n",(0,r.jsx)(o.A,{items:(0,s.$S)().items})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);