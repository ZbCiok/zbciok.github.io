"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[2346],{3934:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var r=t(4848),s=t(8453),a=t(3514),i=t(5068);const c={slug:"/apache-spark"},l="Apache Spark",o={id:"streams/apache-spark/index",title:"Apache Spark",description:"Unified engine for large-scale data analytics.",source:"@site/docs/streams/apache-spark/index.mdx",sourceDirName:"streams/apache-spark",slug:"/apache-spark",permalink:"/docs/apache-spark",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/apache-spark"},sidebar:"tutorialSidebar",previous:{title:"References",permalink:"/docs/streams/apache-flink/references"},next:{title:"References",permalink:"/docs/streams/apache-spark/references"}},d={},h=[{value:"Key features",id:"key-features",level:2},{value:"Flink vs. Spark",id:"flink-vs-spark",level:2},{value:"Summary of differences: Flink vs. Spark",id:"summary-of-differences-flink-vs-spark",level:2}];function u(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"apache-spark",children:"Apache Spark"})}),"\n",(0,r.jsx)(n.p,{children:"Unified engine for large-scale data analytics."}),"\n",(0,r.jsx)(n.p,{children:"Apache Spark\u2122 is a multi-language engine for executing data engineering, data science, and machine learning on single-node machines or clusters."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Batch/streaming data\nUnify the processing of your data in batches and real-time streaming, using your preferred language: Python, SQL, Scala, Java or R."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"SQL analytics\nExecute fast, distributed ANSI SQL queries for dashboarding and ad-hoc reporting. Runs faster than most data warehouses."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Data science at scale\nPerform Exploratory Data Analysis (EDA) on petabyte-scale data without having to resort to downsampling"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Machine learning\nTrain machine learning algorithms on a laptop and use the same code to scale to fault-tolerant clusters of thousands of machines."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"flink-vs-spark",children:"Flink vs. Spark"}),"\n",(0,r.jsx)(n.p,{children:"Stream processing is a continuous method of ingesting, analyzing, and processing data as it is generated. The input data is unbounded and has no predetermined beginning or end. It is a series of events that arrive at the stream processing system (e.g., credit card transactions, clicks on a website, or sensor readings from Internet of Things [IoT] devices)."}),"\n",(0,r.jsx)(n.p,{children:"Two prominent technologies, Apache Spark\u2122, and Apache Flink\xae, are leading frameworks in stream processing. Where Spark initially gained popularity for batch processing, it has since evolved to incorporate structured streaming for real-time data analysis. In contrast, Flink was built from the ground up for real-time processing and can do batch processing too. Despite their distinct origins, both excel as low-latency and scalable technologies."}),"\n",(0,r.jsx)(n.p,{children:"This article explores the two frameworks, their features, and why they are often compared in the context of real-time data analysis."}),"\n",(0,r.jsx)(n.h2,{id:"summary-of-differences-flink-vs-spark",children:"Summary of differences: Flink vs. Spark"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Spark"}),(0,r.jsx)(n.th,{children:"Flink"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Data ingestion tool"}),(0,r.jsx)(n.td,{children:"Spark Streaming Sources"}),(0,r.jsx)(n.td,{children:"Flink Data Stream API"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Data processing"}),(0,r.jsx)(n.td,{children:"Batch/Stream (Micro Batch)"}),(0,r.jsx)(n.td,{children:"Batch/Stream (Real-time)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Windowing"}),(0,r.jsx)(n.td,{children:"Tumbling/Sliding"}),(0,r.jsx)(n.td,{children:"Tumbling/Sliding/Session/Global"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Joins"}),(0,r.jsx)(n.td,{children:"Stream-stream/Stream-dataset"}),(0,r.jsx)(n.td,{children:"Window/Interval"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"State backend"}),(0,r.jsx)(n.td,{children:"HDFS"}),(0,r.jsx)(n.td,{children:"In-memory/RocksDB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Fault tolerance"}),(0,r.jsx)(n.td,{children:"Yes (WAL)"}),(0,r.jsx)(n.td,{children:"Yes (Chandy-Lamport)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"User-defined functions"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Languages"}),(0,r.jsx)(n.td,{children:"Scala, Java, Python, R, and SQL"}),(0,r.jsx)(n.td,{children:"Java, Python, SQL, and Scala (deprecated)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"API/Libraries"}),(0,r.jsx)(n.td,{children:"Spark Streaming, Spark SQL,"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"MLlib for machine learning,"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"GraphX for graph processing,"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"PySpark"}),(0,r.jsx)(n.td,{children:"DataStream API, Table API, Flink SQL,"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Flink ML, Gelly, PyFlink"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n","\n",(0,r.jsx)(a.A,{items:(0,i.$S)().items})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3514:(e,n,t)=>{t.d(n,{A:()=>g});t(6540);var r=t(4164),s=t(6972),a=t(8774),i=t(5846),c=t(6654),l=t(1312),o=t(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=t(4848);function u(e){let{href:n,children:t}=e;return(0,h.jsx)(a.A,{href:n,className:(0,r.A)("card padding--lg",d.cardContainer),children:t})}function p(e){let{href:n,icon:t,title:s,description:a}=e;return(0,h.jsxs)(u,{href:n,children:[(0,h.jsxs)(o.A,{as:"h2",className:(0,r.A)("text--truncate",d.cardTitle),title:s,children:[t," ",s]}),a&&(0,h.jsx)("p",{className:(0,r.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function m(e){let{item:n}=e;const t=(0,s.Nr)(n),r=function(){const{selectMessage:e}=(0,i.W)();return n=>e(n,(0,l.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,h.jsx)(p,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??r(n.items.length)}):null}function x(e){let{item:n}=e;const t=(0,c.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,s.cC)(n.docId??void 0);return(0,h.jsx)(p,{href:n.href,icon:t,title:n.label,description:n.description??r?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return(0,h.jsx)(x,{item:n});case"category":return(0,h.jsx)(m,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function j(e){let{className:n}=e;const t=(0,s.$S)();return(0,h.jsx)(g,{items:t.items,className:n})}function g(e){const{items:n,className:t}=e;if(!n)return(0,h.jsx)(j,{...e});const a=(0,s.d1)(n);return(0,h.jsx)("section",{className:(0,r.A)("row",t),children:a.map(((e,n)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(f,{item:e})},n)))})}},5846:(e,n,t)=>{t.d(n,{W:()=>o});var r=t(6540),s=t(4586);const a=["zero","one","two","few","many","other"];function i(e){return a.filter((n=>e.includes(n)))}const c={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function l(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,r.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:i(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),c}}),[e])}function o(){const e=l();return{selectMessage:(n,t)=>function(e,n,t){const r=e.split("|");if(1===r.length)return r[0];r.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);const s=t.select(n),a=t.pluralForms.indexOf(s);return r[Math.min(a,r.length-1)]}(t,n,e)}}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);