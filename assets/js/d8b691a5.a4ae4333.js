"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[5423],{1673:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=e(4848),i=e(8453);const r={sidebar_position:10},o="Flink Quick Start Java",s={id:"streams/apache-flink/Examples/flink-quickstart-java",title:"Flink Quick Start Java",description:"Description",source:"@site/docs/streams/apache-flink/Examples/flink-quickstart-java.mdx",sourceDirName:"streams/apache-flink/Examples",slug:"/streams/apache-flink/Examples/flink-quickstart-java",permalink:"/docs/streams/apache-flink/Examples/flink-quickstart-java",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Evaluation/BinaryClassificationEvaluatorExample",permalink:"/docs/streams/apache-flink/Examples/ml-examples/evaluation-binary-classification-Evaluator"},next:{title:"Average Sensor Readings",permalink:"/docs/streams/apache-flink/Examples/AverageSensorReadings"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"pom.xml",id:"pomxml",level:3},{value:"StreamingJob.java",id:"streamingjobjava",level:3},{value:"flink.txt",id:"flinktxt",level:3},{value:"Run",id:"run",level:2},{value:"main(String[] args) output:",id:"mainstring-args-output",level:3},{value:"Source Code: <br></br> <em><strong>https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/flink-quickstart-java</strong></em>",id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinkflink-quickstart-java",level:4}];function u(t){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"flink-quick-start-java",children:"Flink Quick Start Java"})}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"We\u2019ll cover installation and setup, and the basics of Flink program structure."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JDK 11"}),"\n",(0,a.jsx)(n.li,{children:"Maven"}),"\n",(0,a.jsx)(n.li,{children:"IDE"}),"\n",(0,a.jsx)(n.li,{children:"Flink 1.20.0"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:".\n\u251c\u2500\u2500 flink.txt\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 com\n        \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n        \u2502\xa0\xa0         \u2514\u2500\u2500 flink\n        \u2502\xa0\xa0             \u251c\u2500\u2500 LineSplitter.java\n        \u2502\xa0\xa0             \u2514\u2500\u2500 StreamingJob.java\n        \u2514\u2500\u2500 resources\n            \u2514\u2500\u2500 log4j2.properties\n"})}),"\n",(0,a.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t\t xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.jreact.flink</groupId>\n\t<artifactId>flink-quickstart-java</artifactId>\n\t<version>0.1</version>\n\t<packaging>jar</packaging>\n\n\t<name>Flink Walkthrough DataStream Java</name>\n\t<url>https://flink.apache.org</url>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<flink.version>1.20.0</flink.version>\n\t\t<target.java.version>1.8</target.java.version>\n\t\t<maven.compiler.source>${target.java.version}</maven.compiler.source>\n\t\t<maven.compiler.target>${target.java.version}</maven.compiler.target>\n\t\t<log4j.version>2.17.1</log4j.version>\n\t</properties>\n\n\t<repositories>\n\t\t<repository>\n\t\t\t<id>apache.snapshots</id>\n\t\t\t<name>Apache Development Snapshot Repository</name>\n\t\t\t<url>https://repository.apache.org/content/repositories/snapshots/</url>\n\t\t\t<releases>\n\t\t\t\t<enabled>false</enabled>\n\t\t\t</releases>\n\t\t\t<snapshots>\n\t\t\t\t<enabled>true</enabled>\n\t\t\t</snapshots>\n\t\t</repository>\n\t</repositories>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t<artifactId>flink-walkthrough-common</artifactId>\n\t\t\t<version>${flink.version}</version>\n\t\t</dependency>\n\n\t\t\x3c!-- This dependency is provided, because it should not be packaged into the JAR file. --\x3e\n\t\t<dependency>\n\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t<artifactId>flink-streaming-java</artifactId>\n\t\t\t<version>${flink.version}</version>\n\t\t\t<scope>compile</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t<artifactId>flink-clients</artifactId>\n\t\t\t<version>${flink.version}</version>\n\t\t\t<scope>compile</scope>\n\t\t</dependency>\n\n\t\t\x3c!-- Add connector dependencies here. They must be in the default scope (compile). --\x3e\n\n\t\t\x3c!-- Example:\n\n\t\t<dependency>\n\t\t    <groupId>org.apache.flink</groupId>\n\t\t    <artifactId>flink-connector-kafka</artifactId>\n\t\t    <version>3.0.0-1.17</version>\n\t\t</dependency>\n\t\t--\x3e\n\n\t\t\x3c!-- Add logging framework, to produce console output when running in the IDE. --\x3e\n\t\t\x3c!-- These dependencies are excluded from the application JAR by default. --\x3e\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-slf4j-impl</artifactId>\n\t\t\t<version>${log4j.version}</version>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-api</artifactId>\n\t\t\t<version>${log4j.version}</version>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-core</artifactId>\n\t\t\t<version>${log4j.version}</version>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\n\t\t\t\x3c!-- Java Compiler --\x3e\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>${target.java.version}</source>\n\t\t\t\t\t<target>${target.java.version}</target>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\n\t\t\t\x3c!-- We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. --\x3e\n\t\t\t\x3c!-- Change the value of <mainClass>...</mainClass> if your program entry point changes. --\x3e\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n\t\t\t\t<version>3.0.0</version>\n\t\t\t\t<executions>\n\t\t\t\t\t\x3c!-- Run shade goal on package phase --\x3e\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>shade</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<artifactSet>\n\t\t\t\t\t\t\t\t<excludes>\n\t\t\t\t\t\t\t\t\t<exclude>org.apache.flink:flink-shaded-force-shading</exclude>\n\t\t\t\t\t\t\t\t\t<exclude>com.google.code.findbugs:jsr305</exclude>\n\t\t\t\t\t\t\t\t\t<exclude>org.slf4j:*</exclude>\n\t\t\t\t\t\t\t\t\t<exclude>org.apache.logging.log4j:*</exclude>\n\t\t\t\t\t\t\t\t</excludes>\n\t\t\t\t\t\t\t</artifactSet>\n\t\t\t\t\t\t\t<filters>\n\t\t\t\t\t\t\t\t<filter>\n\t\t\t\t\t\t\t\t\t\x3c!-- Do not copy the signatures in the META-INF folder.\n                                    Otherwise, this might cause SecurityExceptions when using the JAR. --\x3e\n\t\t\t\t\t\t\t\t\t<artifact>*:*</artifact>\n\t\t\t\t\t\t\t\t\t<excludes>\n\t\t\t\t\t\t\t\t\t\t<exclude>META-INF/*.SF</exclude>\n\t\t\t\t\t\t\t\t\t\t<exclude>META-INF/*.DSA</exclude>\n\t\t\t\t\t\t\t\t\t\t<exclude>META-INF/*.RSA</exclude>\n\t\t\t\t\t\t\t\t\t</excludes>\n\t\t\t\t\t\t\t\t</filter>\n\t\t\t\t\t\t\t</filters>\n\t\t\t\t\t\t\t<transformers>\n\t\t\t\t\t\t\t\t<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">\n\t\t\t\t\t\t\t\t\t<mainClass>spendreport.FraudDetectionJob</mainClass>\n\t\t\t\t\t\t\t\t</transformer>\n\t\t\t\t\t\t\t</transformers>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\n\t\t\t\t\x3c!-- This improves the out-of-the-box experience in Eclipse by resolving some warnings. --\x3e\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.eclipse.m2e</groupId>\n\t\t\t\t\t<artifactId>lifecycle-mapping</artifactId>\n\t\t\t\t\t<version>1.0.0</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<lifecycleMappingMetadata>\n\t\t\t\t\t\t\t<pluginExecutions>\n\t\t\t\t\t\t\t\t<pluginExecution>\n\t\t\t\t\t\t\t\t\t<pluginExecutionFilter>\n\t\t\t\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n\t\t\t\t\t\t\t\t\t\t<versionRange>[3.0.0,)</versionRange>\n\t\t\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t\t\t<goal>shade</goal>\n\t\t\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t\t</pluginExecutionFilter>\n\t\t\t\t\t\t\t\t\t<action>\n\t\t\t\t\t\t\t\t\t\t<ignore/>\n\t\t\t\t\t\t\t\t\t</action>\n\t\t\t\t\t\t\t\t</pluginExecution>\n\t\t\t\t\t\t\t\t<pluginExecution>\n\t\t\t\t\t\t\t\t\t<pluginExecutionFilter>\n\t\t\t\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t\t\t\t\t<versionRange>[3.1,)</versionRange>\n\t\t\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t\t\t<goal>testCompile</goal>\n\t\t\t\t\t\t\t\t\t\t\t<goal>compile</goal>\n\t\t\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t\t</pluginExecutionFilter>\n\t\t\t\t\t\t\t\t\t<action>\n\t\t\t\t\t\t\t\t\t\t<ignore/>\n\t\t\t\t\t\t\t\t\t</action>\n\t\t\t\t\t\t\t\t</pluginExecution>\n\t\t\t\t\t\t\t</pluginExecutions>\n\t\t\t\t\t\t</lifecycleMappingMetadata>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t</build>\n</project>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"streamingjobjava",children:"StreamingJob.java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'package com.jreact.flink;\n\nimport org.apache.flink.api.java.DataSet;\nimport org.apache.flink.api.java.ExecutionEnvironment;\nimport org.apache.flink.api.java.aggregation.Aggregations;\nimport org.apache.flink.api.java.tuple.Tuple2;\n\n\npublic class StreamingJob {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tfinal ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\n\n\t    DataSet<String> text = env.readTextFile("flink.txt");\n\n\t    DataSet<Tuple2<String, Integer>> counts =\n\t        text.flatMap(new LineSplitter())\n\t        .groupBy(0)\n\t        .aggregate(Aggregations.SUM, 1);\n\n\t    counts.print();\n\n\n\t    // execute program\n\t    //env.execute("WordCount Example");\n\t}\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"flinktxt",children:"flink.txt"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer hendrerit ornare ante et scelerisque. Phasellus consequat dui vel finibus sollicitudin. Phasellus eget ornare diam, a vulputate dolor. Duis fringilla id ipsum nec dignissim. Mauris lectus orci, viverra in nulla vel, finibus varius ante. Cras ullamcorper dui nunc, et auctor odio vestibulum in. Vestibulum lacinia lobortis lectus auctor feugiat. Integer ipsum elit, tristique quis ultrices sed, sollicitudin quis dolor. Suspendisse ornare dolor lorem, et maximus est ornare eget. Etiam ac odio eu tellus aliquam aliquam. Etiam ornare dolor nisl.\n"})}),"\n",(0,a.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,a.jsx)(n.h3,{id:"mainstring-args-output",children:"main(String[] args) output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"(phasellus,2)\n(vel,2)\n(adipiscing,1)\n(amet,1)\n(diam,1)\n(feugiat,1)\n(viverra,1)\n(hendrerit,1)\n(finibus,2)\n(ultrices,1)\n(et,3)\n(eu,1)\n(lorem,2)\n(fringilla,1)\n(lacinia,1)\n(sollicitudin,2)\n(ullamcorper,1)\n(odio,2)\n(tristique,1)\n(vestibulum,2)\n(a,1)\n(dui,2)\n// ...\n// ...\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinkflink-quickstart-java",children:["Source Code: ",(0,a.jsx)("br",{})," ",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/flink-quickstart-java",children:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/flink-quickstart-java"})})})]})]})}function p(t={}){const{wrapper:n}={...(0,i.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>o,x:()=>s});var a=e(6540);const i={},r=a.createContext(i);function o(t){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),a.createElement(r.Provider,{value:n},t.children)}}}]);