"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[9265],{6710:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var r=t(4848),a=t(8453);const n={slug:"/reactive-streams"},i="Reactive Streams",o={id:"streams/reactive-streams/index",title:"Reactive Streams",description:"Reactive Streams is a specification for asynchronous stream processing.",source:"@site/docs/streams/reactive-streams/index.mdx",sourceDirName:"streams/reactive-streams",slug:"/reactive-streams",permalink:"/docs/reactive-streams",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/reactive-streams"},sidebar:"tutorialSidebar",previous:{title:"Running Examples",permalink:"/docs/streams/java-8-streams/RunningExamples"},next:{title:"java.util.concurrent.Flow",permalink:"/docs/streams/reactive-streams/java-util-concurrent-Flow"}},c={},l=[{value:"Reactive Streams API",id:"reactive-streams-api",level:2},{value:"API Components",id:"api-components",level:2},{value:"Package org.reactivestreams:",id:"package-orgreactivestreams",level:3},{value:"JDK9 java.util.concurrent.Flow",id:"jdk9-javautilconcurrentflow",level:2},{value:"Implementations",id:"implementations",level:2},{value:"reactive-streams-jvm",id:"reactive-streams-jvm",level:3},{value:"Project Reactor",id:"project-reactor",level:3},{value:"RxJava",id:"rxjava",level:3},{value:"Akka-Streams",id:"akka-streams",level:3}];function h(e){const s={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"reactive-streams",children:"Reactive Streams"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:(0,r.jsx)(s.strong,{children:"Reactive Streams is a specification for asynchronous stream processing."})})}),"\n",(0,r.jsx)("img",{src:"/img/streams/reactive-streams/reactive-streams-01.png",alt:"reactive-streams-01.png"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.h2,{id:"reactive-streams-api",children:(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/",children:"Reactive Streams API"})}),"\n",(0,r.jsx)(s.p,{children:"The purpose of Reactive Streams is to provide a standard for asynchronous stream processing with non-blocking backpressure."}),"\n",(0,r.jsx)(s.p,{children:"Handling streams of data\u2014especially \u201clive\u201d data whose volume is not predetermined\u2014requires special care in an asynchronous system. The most prominent issue is that resource consumption needs to be carefully controlled such that a fast data source does not overwhelm the stream destination. Asynchrony is needed in order to enable the parallel use of computing resources, on collaborating network hosts or multiple CPU cores within a single machine."}),"\n",(0,r.jsx)(s.p,{children:"The main goal of Reactive Streams is to govern the exchange of stream data across an asynchronous boundary \u2013 think passing elements on to another thread or thread-pool \u2014 while ensuring that the receiving side is not forced to buffer arbitrary amounts of data. In other words, backpressure is an integral part of this model in order to allow the queues which mediate between threads to be bounded. The benefits of asynchronous processing would be negated if the backpressure signals were synchronous (see also the Reactive Manifesto), therefore care has been taken to mandate fully non-blocking and asynchronous behavior of all aspects of a Reactive Streams implementation."}),"\n",(0,r.jsx)(s.p,{children:"It is the intention of this specification to allow the creation of many conforming implementations, which by virtue of abiding by the rules will be able to interoperate smoothly, preserving the aforementioned benefits and characteristics across the whole processing graph of a stream application."}),"\n",(0,r.jsx)(s.p,{children:"It should be noted that the precise nature of stream manipulations (transformation, splitting, merging, etc.) is not covered by this specification. Reactive Streams are only concerned with mediating the stream of data between different API Components. In their development care has been taken to ensure that all basic ways of combining streams can be expressed."}),"\n",(0,r.jsx)(s.p,{children:"In summary, Reactive Streams is a standard and specification for Stream-oriented libraries for the JVM that"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"process a potentially unbounded number of elements"}),"\n",(0,r.jsx)(s.li,{children:"in sequence,"}),"\n",(0,r.jsx)(s.li,{children:"asynchronously passing elements between components,"}),"\n",(0,r.jsx)(s.li,{children:"with mandatory non-blocking backpressure."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"api-components",children:"API Components"}),"\n",(0,r.jsxs)(s.h3,{id:"package-orgreactivestreams",children:["Package ",(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/org/reactivestreams/package-summary.html",children:"org.reactivestreams"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/org/reactivestreams/Publisher.html",children:(0,r.jsx)(s.strong,{children:"Publisher"})}),": is a provider of a potentially unbounded number of sequenced elements, publishing them according to the demand received from its Subscriber(s)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/org/reactivestreams/Subscriber.html",children:(0,r.jsx)(s.strong,{children:"Subscriber"})}),": can serve multiple Subscribers subscribed subscribe(Subscriber) dynamically at various points in time."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/org/reactivestreams/Subscription.html#request(long)",children:(0,r.jsx)(s.strong,{children:"Subscription"})}),": represents a one-to-one lifecycle of a Subscriber subscribing to a Publisher.\nIt can only be used once by a single Subscriber.  It is used to both signal desire for data and cancel demand (and allow resource cleanup)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/org/reactivestreams/Processor.html",children:(0,r.jsx)(s.strong,{children:"Processor"})}),": represents a processing stage\u2014which is both a Subscriber and a Publisher and obeys the contracts of both."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"jdk9-javautilconcurrentflow",children:"JDK9 java.util.concurrent.Flow"}),"\n",(0,r.jsxs)(s.p,{children:["The interfaces available in JDK 9 >=  ",(0,r.jsx)(s.a,{href:"https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/Flow.html",children:(0,r.jsx)(s.em,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.strong,{children:"java.util.concurrent.Flow"})})})}),",\nare 1:1 semantically equivalent to their respective Reactive Streams counterparts."]}),"\n",(0,r.jsxs)(s.p,{children:["Read ",(0,r.jsx)(s.a,{href:"https://github.com/reactive-streams/reactive-streams-jvm/blob/v1.0.4/README.md",children:(0,r.jsx)(s.em,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.strong,{children:"this"})})})})," if you are interested in learning more about Reactive Streams for the JVM."]}),"\n",(0,r.jsx)(s.h2,{id:"implementations",children:"Implementations"}),"\n",(0,r.jsx)(s.h3,{id:"reactive-streams-jvm",children:(0,r.jsx)(s.a,{href:"https://github.com/reactive-streams/reactive-streams-jvm",children:"reactive-streams-jvm"})}),"\n",(0,r.jsx)(s.h3,{id:"project-reactor",children:(0,r.jsx)(s.a,{href:"https://projectreactor.io/",children:"Project Reactor"})}),"\n",(0,r.jsx)(s.h3,{id:"rxjava",children:(0,r.jsx)(s.a,{href:"https://github.com/ReactiveX/RxJava",children:"RxJava"})}),"\n",(0,r.jsx)(s.h3,{id:"akka-streams",children:"Akka-Streams"})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(6540);const a={},n=r.createContext(a);function i(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);