"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[3615],{5875:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=i(4848),t=i(8453);const s={sidebar_position:400},r="Classification/KnnExample",l={id:"streams/apache-flink/Examples/ml-examples/classification-knn",title:"Classification/KnnExample",description:"Machine Learning",source:"@site/docs/streams/apache-flink/Examples/ml-examples/classification-knn.mdx",sourceDirName:"streams/apache-flink/Examples/ml-examples",slug:"/streams/apache-flink/Examples/ml-examples/classification-knn",permalink:"/docs/streams/apache-flink/Examples/ml-examples/classification-knn",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:400,frontMatter:{sidebar_position:400},sidebar:"tutorialSidebar",previous:{title:"Evaluation/BinaryClassificationEvaluatorExample",permalink:"/docs/streams/apache-flink/Examples/ml-examples/evaluation-binary-classification-Evaluator"},next:{title:"Flink Quick Start Java",permalink:"/docs/streams/apache-flink/Examples/flink-quickstart-java"}},o={},c=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"KnnExample.java",id:"knnexamplejava",level:2},{value:"Run",id:"run",level:2},{value:"Build the Examples",id:"build-the-examples",level:4},{value:"Copy",id:"copy",level:4},{value:"Output",id:"output",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"classificationknnexample",children:"Classification/KnnExample"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/auxiliary-software/artificial-intelligence/machine-learning/",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Machine Learning"})})}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.a,{href:"/docs/auxiliary-software/artificial-intelligence/machine-learning/classification/knn",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"K-Nearest Neighbor"})})}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.strong,{children:"The Example:"}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/apache/flink-ml/blob/master/flink-ml-examples/src/main/java/org/apache/flink/ml/examples/classification/KnnExample.java",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"classification/KnnExample"})})})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://nightlies.apache.org/flink/flink-ml-docs-release-2.1/docs/operators/classification/knn/",children:(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"KNN"})})})," ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)("img",{src:"/img/ai/machine-learning/knn-diagr-01.webp",width:"300 px",alt:"knn-diagr-01.webp"}),"\n",(0,a.jsx)(n.p,{children:"K Nearest Neighbor(KNN) is a classification algorithm. The basic assumption of KNN is that if most of the nearest K neighbors of the provided sample belong to the same label, then it is highly probable that the provided sample also belongs to that label."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JDK 11"}),"\n",(0,a.jsx)(n.li,{children:"Maven 3.9.9"}),"\n",(0,a.jsx)(n.li,{children:"Flink 1.17.0"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"knnexamplejava",children:"KnnExample.java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.flink.ml.examples.classification;\n\nimport org.apache.flink.ml.classification.knn.Knn;\nimport org.apache.flink.ml.classification.knn.KnnModel;\nimport org.apache.flink.ml.linalg.DenseVector;\nimport org.apache.flink.ml.linalg.Vectors;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.table.api.Table;\nimport org.apache.flink.table.api.bridge.java.StreamTableEnvironment;\nimport org.apache.flink.types.Row;\nimport org.apache.flink.util.CloseableIterator;\n\n/** Simple program that trains a Knn model and uses it for classification. */\npublic class KnnExample {\n    public static void main(String[] args) {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        StreamTableEnvironment tEnv = StreamTableEnvironment.create(env);\n\n        // Generates input training and prediction data.\n        DataStream<Row> trainStream =\n                env.fromElements(\n                        Row.of(Vectors.dense(2.0, 3.0), 1.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0),\n                        Row.of(Vectors.dense(200.1, 300.1), 2.0),\n                        Row.of(Vectors.dense(200.2, 300.2), 2.0),\n                        Row.of(Vectors.dense(200.3, 300.3), 2.0),\n                        Row.of(Vectors.dense(200.4, 300.4), 2.0),\n                        Row.of(Vectors.dense(200.4, 300.4), 2.0),\n                        Row.of(Vectors.dense(200.6, 300.6), 2.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0),\n                        Row.of(Vectors.dense(2.3, 3.2), 1.0),\n                        Row.of(Vectors.dense(2.3, 3.2), 1.0),\n                        Row.of(Vectors.dense(2.8, 3.2), 3.0),\n                        Row.of(Vectors.dense(300., 3.2), 4.0),\n                        Row.of(Vectors.dense(2.2, 3.2), 1.0),\n                        Row.of(Vectors.dense(2.4, 3.2), 5.0),\n                        Row.of(Vectors.dense(2.5, 3.2), 5.0),\n                        Row.of(Vectors.dense(2.5, 3.2), 5.0),\n                        Row.of(Vectors.dense(2.1, 3.1), 1.0));\n        Table trainTable = tEnv.fromDataStream(trainStream).as("features", "label");\n\n        DataStream<Row> predictStream =\n                env.fromElements(\n                        Row.of(Vectors.dense(4.0, 4.1), 5.0), Row.of(Vectors.dense(300, 42), 2.0));\n        Table predictTable = tEnv.fromDataStream(predictStream).as("features", "label");\n\n        // Creates a Knn object and initializes its parameters.\n        Knn knn = new Knn().setK(4);\n\n        // Trains the Knn Model.\n        KnnModel knnModel = knn.fit(trainTable);\n\n        // Uses the Knn Model for predictions.\n        Table outputTable = knnModel.transform(predictTable)[0];\n\n        // Extracts and displays the results.\n        for (CloseableIterator<Row> it = outputTable.execute().collect(); it.hasNext(); ) {\n            Row row = it.next();\n            DenseVector features = (DenseVector) row.getField(knn.getFeaturesCol());\n            double expectedResult = (Double) row.getField(knn.getLabelCol());\n            double predictionResult = (Double) row.getField(knn.getPredictionCol());\n            System.out.printf(\n                    "Features: %-15s \\tExpected Result: %s \\tPrediction Result: %s\\n",\n                    features, expectedResult, predictionResult);\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,a.jsx)(n.h4,{id:"build-the-examples",children:"Build the Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"# https://github.com/apache/flink-ml\nmvn clean package -DskipTests\n"})}),"\n",(0,a.jsx)(n.h4,{id:"copy",children:"Copy"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"flink-ml-examples-1.17-2.4-SNAPSHOT.jar\nflink-ml-uber-1.17-2.4-SNAPSHOT.jar\nstatefun-flink-core-3.2.0.jar\n"})}),"\n",(0,a.jsxs)(n.p,{children:["to",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"flink-1.17.0/lib"})}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Start local cluster"})," (Flink 1.17.0): ",(0,a.jsx)("br",{}),"\n./bin/start-cluster.sh"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Run"}),(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"KnnExample:"})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\n./bin/flink run -c org.apache.flink.ml.examples.classification.KnnExample ./lib/flink-ml-uber-1.17-2.4-SNAPSHOT.jar ./lib/statefun-flink-core-3.2.0.jar ./lib/flink-ml-examples-1.17-2.4-SNAPSHOT.jar\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Open"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"http://localhost:8081\n"})}),"\n",(0,a.jsx)("img",{src:"/img/ai/machine-learning/flink-ml-apahce-KNNExample-example-001.png",alt:"flink-ml-apahce-KNNExample-example-001.png"}),"\n",(0,a.jsx)(n.h2,{id:"output",children:"Output"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Job has been submitted with JobID 837647554a68d6251b8eeec3911ac5a9\nFeatures: [4.0, 4.1]      \tExpected Result: 5.0 \tPrediction Result: 5.0\nFeatures: [300.0, 42.0]   \tExpected Result: 2.0 \tPrediction Result: 2.0\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var a=i(6540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);