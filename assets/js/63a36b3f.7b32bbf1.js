"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[3133],{2849:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"artificial-intelligence/machine-learning/examples/customer-churn/customer-churn-prediction","title":"Customer Churn Prediction","description":"Description","source":"@site/docs/artificial-intelligence/machine-learning/examples/customer-churn/customer-churn-prediction.mdx","sourceDirName":"artificial-intelligence/machine-learning/examples/customer-churn","slug":"/artificial-intelligence/machine-learning/examples/customer-churn/customer-churn-prediction","permalink":"/docs/artificial-intelligence/machine-learning/examples/customer-churn/customer-churn-prediction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":110,"frontMatter":{"sidebar_position":110},"sidebar":"tutorialSidebar","previous":{"title":"Customer Churn","permalink":"/docs/artificial-intelligence/machine-learning/examples/customer-churn/"},"next":{"title":"Stock Price Prediction","permalink":"/docs/artificial-intelligence/machine-learning/examples/stock-price-prediction/"}}');var i=r(4848),s=r(8453);const l={sidebar_position:110},o="Customer Churn Prediction",a={},c=[{value:"Description",id:"description",level:2},{value:"Code of the Example",id:"code-of-the-example",level:2},{value:"Jupyter Notebook",id:"jupyter-notebook",level:2},{value:"Install PySpark, Modules &amp; SparkSession",id:"install-pyspark-modules--sparksession",level:3},{value:"Load Dataset",id:"load-dataset",level:3},{value:"Print the data schema to check out the data types",id:"print-the-data-schema-to-check-out-the-data-types",level:3},{value:"Exploratory Data Analysis",id:"exploratory-data-analysis",level:3},{value:"Data Preprocessing",id:"data-preprocessing",level:3},{value:"Handling the missing values",id:"handling-the-missing-values",level:4},{value:"Removing the outliers",id:"removing-the-outliers",level:4},{value:"Feature Preparation",id:"feature-preparation",level:4},{value:"Vector Assembling",id:"vector-assembling",level:4},{value:"Numerical Scaling",id:"numerical-scaling",level:4},{value:"String Indexing",id:"string-indexing",level:4},{value:"Drop extra",id:"drop-extra",level:4},{value:"Combining features",id:"combining-features",level:4},{value:"Model Training",id:"model-training",level:3},{value:"Model Evaluation",id:"model-evaluation",level:3},{value:"Hyper parameter tuning",id:"hyper-parameter-tuning",level:3},{value:"Recommendation",id:"recommendation",level:3}];function d(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"customer-churn-prediction",children:"Customer Churn Prediction"})}),"\n",(0,i.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(e.p,{children:"In this notebook/example, we\u2019ll explore how to use PySpark to analyze and model customer churn data. The goal is to predict which customers are at risk of leaving a telecom company\u2014so we can help businesses take action before it's too late!"}),"\n",(0,i.jsx)(e.p,{children:"We're going to:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Load and understand the dataset"}),"\n",(0,i.jsx)(e.li,{children:"Prepare the data for modeling"}),"\n",(0,i.jsx)(e.li,{children:"Train a machine learning model"}),"\n",(0,i.jsx)(e.li,{children:"Evaluate its performance"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"By the end, we\u2019ll have a working churn prediction pipeline using PySpark."}),"\n",(0,i.jsx)(e.h2,{id:"code-of-the-example",children:"Code of the Example"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://www.kaggle.com/code/samanehshahpuori/customer-churn-prediction-pyspark/notebook",children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"Kaggle: Customer Churn Prediction"})})})," ",(0,i.jsx)("br",{}),"\nor"]}),"\n",(0,i.jsxs)(e.li,{children:["locally","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/ZbCiok/zjc-examples/blob/main/ai/ml/examples/customer-churn/customer-churn-prediction/WA_Fn-UseC_-Telco-Customer-Churn.csv",children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"Download dataset"})})})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/ZbCiok/zjc-examples/blob/main/ai/ml/examples/customer-churn/customer-churn-prediction/Customer-Churn-Prediction.ipynb",children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"Download the Example Notebook"})})})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://jupyter.org/install",children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"Install jupyter notebook:"})})}),(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"pip install notebook"})})})}),"\n",(0,i.jsx)(e.li,{children:"Run the notebook:"}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"jupyter notebook"})})})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"jupyter-notebook",children:"Jupyter Notebook"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"install-pyspark-modules--sparksession",children:"Install PySpark, Modules & SparkSession"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"!pip install pyspark\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"# importing spark session\nfrom pyspark.sql import SparkSession\n\n# data visualization modules\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.colors as pc\n\n# pandas module\nimport pandas as pd\n\n# pyspark SQL functions\nfrom pyspark.sql.functions import col, when, count, udf\n\n# pyspark data preprocessing modules\nfrom pyspark.ml.feature import Imputer, StringIndexer, VectorAssembler, StandardScaler, OneHotEncoder\n\n# pyspark data modeling and model evaluation modules\nfrom pyspark.ml.classification import DecisionTreeClassifier\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'spark = SparkSession.builder.appName("Customer_Churn_Prediction").getOrCreate()\nspark\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"SparkSession - in-memory\n\nSparkContext\n\nSpark UI\n\nVersion\n    v3.5.4\nMaster\n    local[*]\nAppName\n    Customer_Churn_Prediction\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"load-dataset",children:"Load Dataset"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'file_path = "[YOUR PATH]/WA_Fn-UseC_-Telco-Customer-Churn.csv"\ndata = spark.read.format(\'csv\') \\\n    .option("inferSchema", True) \\\n    .option("header", True) \\\n    .load(file_path)\ndata.show(4)\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+--------------------+--------------+------------+-----+\n|customerID|gender|SeniorCitizen|Partner|Dependents|tenure|PhoneService|   MultipleLines|InternetService|OnlineSecurity|OnlineBackup|DeviceProtection|TechSupport|StreamingTV|StreamingMovies|      Contract|PaperlessBilling|       PaymentMethod|MonthlyCharges|TotalCharges|Churn|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+--------------------+--------------+------------+-----+\n|7590-VHVEG|Female|            0|    Yes|        No|     1|          No|No phone service|            DSL|            No|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|    Electronic check|         29.85|       29.85|   No|\n|5575-GNVDE|  Male|            0|     No|        No|    34|         Yes|              No|            DSL|           Yes|          No|             Yes|         No|         No|             No|      One year|              No|        Mailed check|         56.95|      1889.5|   No|\n|3668-QPYBK|  Male|            0|     No|        No|     2|         Yes|              No|            DSL|           Yes|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|        Mailed check|         53.85|      108.15|  Yes|\n|7795-CFOCW|  Male|            0|     No|        No|    45|          No|No phone service|            DSL|           Yes|          No|             Yes|        Yes|         No|             No|      One year|              No|Bank transfer (au...|          42.3|     1840.75|   No|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+--------------------+--------------+------------+-----+\nonly showing top 4 rows\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"print-the-data-schema-to-check-out-the-data-types",children:"Print the data schema to check out the data types"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"data.printSchema()\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"root\n |-- customerID: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- SeniorCitizen: integer (nullable = true)\n |-- Partner: string (nullable = true)\n |-- Dependents: string (nullable = true)\n |-- tenure: integer (nullable = true)\n |-- PhoneService: string (nullable = true)\n |-- MultipleLines: string (nullable = true)\n |-- InternetService: string (nullable = true)\n |-- OnlineSecurity: string (nullable = true)\n |-- OnlineBackup: string (nullable = true)\n |-- DeviceProtection: string (nullable = true)\n |-- TechSupport: string (nullable = true)\n |-- StreamingTV: string (nullable = true)\n |-- StreamingMovies: string (nullable = true)\n |-- Contract: string (nullable = true)\n |-- PaperlessBilling: string (nullable = true)\n |-- PaymentMethod: string (nullable = true)\n |-- MonthlyCharges: double (nullable = true)\n |-- TotalCharges: string (nullable = true)\n |-- Churn: string (nullable = true)\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'from pyspark.sql.functions import col\ndata = data.withColumn("TotalCharges", col("TotalCharges").cast("double"))\ndata.count()\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"7043\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"len(data.columns)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"21\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"exploratory-data-analysis",children:"Exploratory Data Analysis"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Distribution Analysis"}),"\n",(0,i.jsx)(e.li,{children:"Correlation Analysis"}),"\n",(0,i.jsx)(e.li,{children:"Univariate Analysis"}),"\n",(0,i.jsx)(e.li,{children:"Finding Missing values"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Define lists to store different column names with different data types"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"data.dtypes\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"[('customerID', 'string'),\n ('gender', 'string'),\n ('SeniorCitizen', 'int'),\n ('Partner', 'string'),\n ('Dependents', 'string'),\n ('tenure', 'int'),\n ('PhoneService', 'string'),\n ('MultipleLines', 'string'),\n ('InternetService', 'string'),\n ('OnlineSecurity', 'string'),\n ('OnlineBackup', 'string'),\n ('DeviceProtection', 'string'),\n ('TechSupport', 'string'),\n ('StreamingTV', 'string'),\n ('StreamingMovies', 'string'),\n ('Contract', 'string'),\n ('PaperlessBilling', 'string'),\n ('PaymentMethod', 'string'),\n ('MonthlyCharges', 'double'),\n ('TotalCharges', 'double'),\n ('Churn', 'string')]\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Numerical features and store them into a pandas dataframe."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'numerical_col = [name for name,typ in data.dtypes if typ=="double" or typ=="int"]\ncategorical_col = [name for name,typ in data.dtypes if typ=="string"]\nnumerical_col\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"['SeniorCitizen', 'tenure', 'MonthlyCharges', 'TotalCharges']\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"df = data.select(numerical_col).toPandas()\ndf.head()\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"SeniorCitizen \ttenure \tMonthlyCharges \tTotalCharges\n0 \t0 \t1 \t29.85 \t29.85\n1 \t0 \t34 \t56.95 \t1889.50\n2 \t0 \t2 \t53.85 \t108.15\n3 \t0 \t45 \t42.30 \t1840.75\n4 \t0 \t2 \t70.70 \t151.65\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Create histograms to analyse the distribution of our numerical columns."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"fig = plt.figure(figsize=(15,10))\nax = fig.gca()\ndf.hist(ax=ax, bins = 20)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"array([[<Axes: title={'center': 'SeniorCitizen'}>,\n    <Axes: title={'center': 'tenure'}>],\n    [<Axes: title={'center': 'MonthlyCharges'}>,\n    <Axes: title={'center': 'TotalCharges'}>]], dtype=object)\n"})}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/customer-churn-prediction/01-cells-03.png",alt:"01-cells-03.png"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Generate the correlation matrix"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"df.corr()\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"SeniorCitizen \ttenure \tMonthlyCharges \tTotalCharges\nSeniorCitizen \t1.000000 \t0.016567 \t0.220173 \t0.102411\ntenure \t0.016567 \t1.000000 \t0.247900 \t0.825880\nMonthlyCharges \t0.220173 \t0.247900 \t1.000000 \t0.651065\nTotalCharges \t0.102411 \t0.825880 \t0.651065 \t1.000000\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Check the unique value count per each categorical variables"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'data.groupby("contract").count().show()\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'data.groupby("contract").count().show()\n\n+--------------+-----+\n|      contract|count|\n+--------------+-----+\n|Month-to-month| 3875|\n|      One year| 1473|\n|      Two year| 1695|\n+--------------+-----+\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"for coll in categorical_col:\n    data.groupby(coll).count().show()\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+----------+-----+\n|customerID|count|\n+----------+-----+\n|3668-QPYBK|    1|\n|6234-RAAPL|    1|\n|1894-IGFSG|    1|\n|6982-SSHFK|    1|\n|5859-HZYLF|    1|\n|6479-OAUSD|    1|\n|2592-YKDIF|    1|\n|6718-BDGHG|    1|\n|3195-TQDZX|    1|\n|4248-QPAVC|    1|\n|5668-MEISB|    1|\n|5802-ADBRC|    1|\n|2712-SYWAY|    1|\n|2011-TRQYE|    1|\n|7244-KXYZN|    1|\n|0953-LGOVU|    1|\n|3623-FQBOX|    1|\n|3692-JHONH|    1|\n|3528-HFRIQ|    1|\n|7661-CPURM|    1|\n+----------+-----+\nonly showing top 20 rows\n\n+------+-----+\n|gender|count|\n+------+-----+\n|Female| 3488|\n|  Male| 3555|\n+------+-----+\n+-------+-----+\n|Partner|count|\n+-------+-----+\n|     No| 3641|\n|    Yes| 3402|\n+-------+-----+\n\n+----------+-----+\n|Dependents|count|\n+----------+-----+\n|        No| 4933|\n|       Yes| 2110|\n+----------+-----+\n\n+------------+-----+\n|PhoneService|count|\n+------------+-----+\n|          No|  682|\n|         Yes| 6361|\n+------------+-----+\n\n+----------------+-----+\n|   MultipleLines|count|\n+----------------+-----+\n|No phone service|  682|\n|              No| 3390|\n|             Yes| 2971|\n+----------------+-----+\n\n+---------------+-----+\n|InternetService|count|\n+---------------+-----+\n|    Fiber optic| 3096|\n|             No| 1526|\n|            DSL| 2421|\n+---------------+-----+\n\n+-------------------+-----+\n|     OnlineSecurity|count|\n+-------------------+-----+\n|                 No| 3498|\n|                Yes| 2019|\n|No internet service| 1526|\n+-------------------+-----+\n\n+-------------------+-----+\n|       OnlineBackup|count|\n+-------------------+-----+\n|                 No| 3088|\n|                Yes| 2429|\n|No internet service| 1526|\n+-------------------+-----+\n\n+-------------------+-----+\n|   DeviceProtection|count|\n+-------------------+-----+\n|                 No| 3095|\n|                Yes| 2422|\n|No internet service| 1526|\n+-------------------+-----+\n\n+-------------------+-----+\n|        TechSupport|count|\n+-------------------+-----+\n|                 No| 3473|\n|                Yes| 2044|\n|No internet service| 1526|\n+-------------------+-----+\n\n+-------------------+-----+\n|        StreamingTV|count|\n+-------------------+-----+\n|                 No| 2810|\n|                Yes| 2707|\n|No internet service| 1526|\n+-------------------+-----+\n\n+-------------------+-----+\n|    StreamingMovies|count|\n+-------------------+-----+\n|                 No| 2785|\n|                Yes| 2732|\n|No internet service| 1526|\n+-------------------+-----+\n\n+--------------+-----+\n|      Contract|count|\n+--------------+-----+\n|Month-to-month| 3875|\n|      One year| 1473|\n|      Two year| 1695|\n+--------------+-----+\n\n+----------------+-----+\n|PaperlessBilling|count|\n+----------------+-----+\n|              No| 2872|\n|             Yes| 4171|\n+----------------+-----+\n\n+--------------------+-----+\n|       PaymentMethod|count|\n+--------------------+-----+\n|Credit card (auto...| 1522|\n|        Mailed check| 1612|\n|Bank transfer (au...| 1544|\n|    Electronic check| 2365|\n+--------------------+-----+\n\n+-----+-----+\n|Churn|count|\n+-----+-----+\n|   No| 5174|\n|  Yes| 1869|\n+-----+-----+\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Find number of null values in all of our dataframe columns"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"for coll in data.columns:\n    data.select(count(when(col(coll).isNull(), coll)).alias(coll)).show()\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+----------+\n|customerID|\n+----------+\n|         0|\n+----------+\n\n+------+\n|gender|\n+------+\n|     0|\n+------+\n\n+-------------+\n|SeniorCitizen|\n+-------------+\n|            0|\n+-------------+\n\n+-------+\n|Partner|\n+-------+\n|      0|\n+-------+\n\n+----------+\n|Dependents|\n+----------+\n|         0|\n+----------+\n\n+------+\n|tenure|\n+------+\n|     0|\n+------+\n\n+------------+\n|PhoneService|\n+------------+\n|           0|\n+------------+\n\n+-------------+\n|MultipleLines|\n+-------------+\n|            0|\n+-------------+\n\n+---------------+\n|InternetService|\n+---------------+\n|              0|\n+---------------+\n\n+--------------+\n|OnlineSecurity|\n+--------------+\n|             0|\n+--------------+\n\n+------------+\n|OnlineBackup|\n+------------+\n|           0|\n+------------+\n\n+----------------+\n|DeviceProtection|\n+----------------+\n|               0|\n+----------------+\n\n+-----------+\n|TechSupport|\n+-----------+\n|          0|\n+-----------+\n\n+-----------+\n|StreamingTV|\n+-----------+\n|          0|\n+-----------+\n\n+---------------+\n|StreamingMovies|\n+---------------+\n|              0|\n+---------------+\n\n+--------+\n|Contract|\n+--------+\n|       0|\n+--------+\n\n+----------------+\n|PaperlessBilling|\n+----------------+\n|               0|\n+----------------+\n\n+-------------+\n|PaymentMethod|\n+-------------+\n|            0|\n+-------------+\n\n+--------------+\n|MonthlyCharges|\n+--------------+\n|             0|\n+--------------+\n\n+------------+\n|TotalCharges|\n+------------+\n|          11|\n+------------+\n\n+-----+\n|Churn|\n+-----+\n|    0|\n+-----+\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"data-preprocessing",children:"Data Preprocessing"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Handling the missing values"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Removing the outliers if they exist."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"handling-the-missing-values",children:"Handling the missing values"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Create a list of column names with missing values"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'col_with_missing_val = ["TotalCharges"]\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Creating our Imputer"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'imputer = Imputer(inputCols=col_with_missing_val, outputCols=col_with_missing_val).setStrategy("mean")\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Use Imputer to fill the missing values"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"imputer_model = imputer.fit(data)\ndata = imputer_model.transform(data)\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"removing-the-outliers",children:"Removing the outliers"}),"\n",(0,i.jsx)(e.p,{children:"We should look at the histograms carefully to find any specific outlier out of the normal range. In this case we do not have any."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"feature-preparation",children:"Feature Preparation"}),"\n",(0,i.jsx)(e.p,{children:"1- Numerical Features:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"1-1 Vector Assembling\n1-2 Numerical Scaling\n"})}),"\n",(0,i.jsx)(e.p,{children:"2- Categorical Features:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"2-1 String Indexing\n2-2 Vector Assembling\n"})}),"\n",(0,i.jsx)(e.p,{children:"3- Combining the numerical and categorical feature vectors"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"vector-assembling",children:"Vector Assembling"}),"\n",(0,i.jsx)(e.p,{children:"To apply our machine learning model we need to combine all of our numerical and categorical features into vectors. For now let's create a feature vector for our numerical columns."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'numerical_vector_assembler = VectorAssembler(inputCols= numerical_col, outputCol= "numerical_features_vector")\ndata = numerical_vector_assembler.transform(data)\ndata.show(1)\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+\n|customerID|gender|SeniorCitizen|Partner|Dependents|tenure|PhoneService|   MultipleLines|InternetService|OnlineSecurity|OnlineBackup|DeviceProtection|TechSupport|StreamingTV|StreamingMovies|      Contract|PaperlessBilling|   PaymentMethod|MonthlyCharges|TotalCharges|Churn|numerical_features_vector|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+\n|7590-VHVEG|Female|            0|    Yes|        No|     1|          No|No phone service|            DSL|            No|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|Electronic check|         29.85|       29.85|   No|     [0.0,1.0,29.85,29...|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+\nonly showing top 1 row\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"numerical-scaling",children:"Numerical Scaling"}),"\n",(0,i.jsx)(e.p,{children:"Standardize all of our numerical features."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'scaler = StandardScaler(inputCol="numerical_features_vector",\n                        outputCol= "numerical_features_scaled", withStd = True, withMean=True)\ndata = scaler.fit(data).transform(data)\ndata.show(1)\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+-------------------------+\n|customerID|gender|SeniorCitizen|Partner|Dependents|tenure|PhoneService|   MultipleLines|InternetService|OnlineSecurity|OnlineBackup|DeviceProtection|TechSupport|StreamingTV|StreamingMovies|      Contract|PaperlessBilling|   PaymentMethod|MonthlyCharges|TotalCharges|Churn|numerical_features_vector|numerical_features_scaled|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+-------------------------+\n|7590-VHVEG|Female|            0|    Yes|        No|     1|          No|No phone service|            DSL|            No|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|Electronic check|         29.85|       29.85|   No|     [0.0,1.0,29.85,29...|     [-0.4398852612617...|\n+----------+------+-------------+-------+----------+------+------------+----------------+---------------+--------------+------------+----------------+-----------+-----------+---------------+--------------+----------------+----------------+--------------+------------+-----+-------------------------+-------------------------+\nonly showing top 1 row\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"string-indexing",children:"String Indexing"}),"\n",(0,i.jsx)(e.p,{children:"We need to convert all the string columns to numeric columns. To do so, first let's create a copy of each column."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'categorical_col_index = [name+"_idx" for name in categorical_col]\ncategorical_col_index\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"['customerID_idx',\n 'gender_idx',\n 'Partner_idx',\n 'Dependents_idx',\n 'PhoneService_idx',\n 'MultipleLines_idx',\n 'InternetService_idx',\n 'OnlineSecurity_idx',\n 'OnlineBackup_idx',\n 'DeviceProtection_idx',\n 'TechSupport_idx',\n 'StreamingTV_idx',\n 'StreamingMovies_idx',\n 'Contract_idx',\n 'PaperlessBilling_idx',\n 'PaymentMethod_idx',\n 'Churn_idx']\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"indexer = StringIndexer(inputCols=categorical_col, outputCols=categorical_col_index)\ndata = indexer.fit(data).transform(data)\ndata.show(1)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{childrenn|customerID|gender|SeniorCitizen|Partner|Dependents|tenure|PhoneService|   MultipleLines|InternetService|OnlineSecurity|OnlineBackup|DeviceProtection|TechSupport|StreamingTV|StreamingMovies|      Contract|PaperlessBilling|   PaymentMethod|MonthlyCharges|TotalCharges|Churn|numerical_features_vector|numerical_features_scaled|customerID_idx|gender_idx|Partner_idx|Dependents_idx|PhoneService_idx|MultipleLines_idx|InternetService_idx|OnlineSecurity_idx|OnlineBackup_idx|DeviceProtection_idx|TechSupport_idx|StreamingTV_idx|StreamingMovies_idx|Contract_idx|PaperlessBilling_idx|PaymentMethod_idx|Churn_idx|\nn|7590-VHVEG|Female|            0|    Yes|        No|     1|          No|No phone service|            DSL|            No|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|Electronic check|         29.85|       29.85|   No|     [0.0,1.0,29.85,29...|     [-0.4398852612617...|        5375.0|       1.0|        1.0|           0.0|             1.0|              2.0|                1.0|               0.0|             1.0|                 0.0|            0.0|            0.0|                0.0|         0.0|                 0.0|              0.0|      0.0|\nnonly showing top 1 row\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"drop-extra",children:"Drop extra"}),"\n",(0,i.jsx)(e.p,{children:"customerID_idx won't add any helpful information to us; let's drop it. Churn_idx is the goal and should not be in the training process."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'categorical_col_index.remove("customerID_idx")\ncategorical_col_index.remove("Churn_idx")\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'categorical_vector_assembler = VectorAssembler(inputCols=categorical_col_index, outputCol="categorical_features")\ndata = categorical_vector_assembler.transform(data)\ndata.show(1)\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{childrenn|customerID|gender|SeniorCitizen|Partner|Dependents|tenure|PhoneService|   MultipleLines|InternetService|OnlineSecurity|OnlineBackup|DeviceProtection|TechSupport|StreamingTV|StreamingMovies|      Contract|PaperlessBilling|   PaymentMethod|MonthlyCharges|TotalCharges|Churn|numerical_features_vector|numerical_features_scaled|customerID_idx|gender_idx|Partner_idx|Dependents_idx|PhoneService_idx|MultipleLines_idx|InternetService_idx|OnlineSecurity_idx|OnlineBackup_idx|DeviceProtection_idx|TechSupport_idx|StreamingTV_idx|StreamingMovies_idx|Contract_idx|PaperlessBilling_idx|PaymentMethod_idx|Churn_idx|categorical_features|\nn|7590-VHVEG|Female|            0|    Yes|        No|     1|          No|No phone service|            DSL|            No|         Yes|              No|         No|         No|             No|Month-to-month|             Yes|Electronic check|         29.85|       29.85|   No|     [0.0,1.0,29.85,29...|     [-0.4398852612617...|        5375.0|       1.0|        1.0|           0.0|             1.0|              2.0|                1.0|               0.0|             1.0|                 0.0|            0.0|            0.0|                0.0|         0.0|                 0.0|              0.0|      0.0|(15,[0,1,3,4,5,7]...|\nnonly showing top 1 row\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h4,{id:"combining-features",children:"Combining features"}),"\n",(0,i.jsx)(e.p,{children:"Now it is time to combine all of our categorifal features into one feature vector."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Now let's combine categorical and numerical feature vectors."}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'final_vector_assembler = VectorAssembler(inputCols=["categorical_features","numerical_features_scaled"], outputCol="final_features")\ndata = final_vector_assembler.transform(data)\n\ndata.select(["final_features","Churn_idx"]).show()\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+--------------------+---------+\n|      final_features|Churn_idx|\n+--------------------+---------+\n|(19,[0,1,3,4,5,7,...|      0.0|\n|(19,[5,6,8,12,13,...|      0.0|\n|(19,[5,6,7,14,15,...|      1.0|\n|[0.0,0.0,0.0,1.0,...|      0.0|\n|(19,[0,15,16,17,1...|      1.0|\n|(19,[0,4,8,10,11,...|      1.0|\n|(19,[2,4,7,10,14,...|      0.0|\n|(19,[0,3,4,5,6,13...|      0.0|\n|(19,[0,1,4,8,9,10...|      1.0|\n|(19,[2,5,6,7,12,1...|      0.0|\n|(19,[1,2,5,6,14,1...|      0.0|\n|[0.0,0.0,0.0,0.0,...|      0.0|\n|[0.0,1.0,0.0,0.0,...|      0.0|\n|(19,[4,7,8,10,11,...|      1.0|\n|(19,[6,8,9,10,11,...|      0.0|\n|[1.0,1.0,1.0,0.0,...|      0.0|\n|[1.0,0.0,0.0,0.0,...|      0.0|\n|[0.0,0.0,1.0,0.0,...|      0.0|\n|[1.0,1.0,1.0,0.0,...|      1.0|\n|(19,[0,7,8,11,15,...|      0.0|\n+--------------------+---------+\nonly showing top 20 rows\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"model-training",children:"Model Training"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Train and Test data splitting"}),"\n",(0,i.jsx)(e.li,{children:"Creating our model"}),"\n",(0,i.jsx)(e.li,{children:"Training our model"}),"\n",(0,i.jsx)(e.li,{children:"Make initial predictions using our model"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"In this task, we are going to start training our model"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"train, test = data.randomSplit([0.7, 0.3], seed = 100)\nprint(train.count())\nprint(test.count())\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"4931\n2112\n"})}),"\n",(0,i.jsx)(e.p,{children:"Now let's create and train our desicion tree"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'dt = DecisionTreeClassifier(featuresCol="final_features", labelCol="Churn_idx", maxDepth=3)\nmodel = dt.fit(train)\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'prediction_test = model.transform(test)\nprediction_test.select(["Churn_idx", "prediction"]).show()\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"+---------+----------+\n|Churn_idx|prediction|\n+---------+----------+\n|      1.0|       1.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      1.0|       0.0|\n|      0.0|       0.0|\n|      1.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      1.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n|      0.0|       0.0|\n+---------+----------+\nonly showing top 20 rows\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"model-evaluation",children:"Model Evaluation"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Calculating area under the ROC curve for the test set"}),"\n",(0,i.jsx)(e.li,{children:"Calculating area under the ROC curve for the training set"}),"\n",(0,i.jsx)(e.li,{children:"Hyper parameter tuning"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'evaluator = BinaryClassificationEvaluator(labelCol="Churn_idx")\nauc_test = evaluator.evaluate(prediction_test, {evaluator.metricName: "areaUnderROC"})\nauc_test\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"0.7617045633750168\n"})}),"\n",(0,i.jsx)(e.p,{children:"Let's get the AUC for our training set"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'prediction_train = model.transform(train)\nevaluator = BinaryClassificationEvaluator(labelCol="Churn_idx")\nauc_train = evaluator.evaluate(prediction_train, {evaluator.metricName: "areaUnderROC"})\nauc_train\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"0.7712918493814211\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"hyper-parameter-tuning",children:"Hyper parameter tuning"}),"\n",(0,i.jsx)(e.p,{children:"Let's find the best maxDepth parameter for our DT model."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'def evaluate_dt(mode_params):\n      test_accuracies = []\n      train_accuracies = []\n\n      for maxD in mode_params:\n        # train the model based on the maxD\n        decision_tree = DecisionTreeClassifier(featuresCol = \'final_features\', labelCol = \'Churn_idx\', maxDepth = maxD)\n        dtModel = decision_tree.fit(train)\n\n        # calculating test error\n        predictions_test = dtModel.transform(test)\n        evaluator = BinaryClassificationEvaluator(labelCol="Churn_idx")\n        auc_test = evaluator.evaluate(predictions_test, {evaluator.metricName: "areaUnderROC"})\n        # recording the accuracy\n        test_accuracies.append(auc_test)\n\n        # calculating training error\n        predictions_training = dtModel.transform(train)\n        evaluator = BinaryClassificationEvaluator(labelCol="Churn_idx")\n        auc_training = evaluator.evaluate(predictions_training, {evaluator.metricName: "areaUnderROC"})\n        train_accuracies.append(auc_training)\n\n      return(test_accuracies, train_accuracies)\n'})}),"\n",(0,i.jsx)(e.p,{children:"Let's define params list to evaluate our model iteratively with differe maxDepth parameter."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"maxDepths = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\ntest_acc, train_acc = evaluate_dt(maxDepths)\nprint(train_acc)\nprint(test_acc)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Output:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"[0.7789865142153861, 0.7712918493814211, 0.6826591069812441, 0.5698050008614369, 0.7097267756814049, 0.8007120163953875, 0.7888573028682286, 0.7956189539598643, 0.8211433720288286, 0.861543087146816, 0.8869290674809027, 0.9051710947878245, 0.9438019298702311, 0.9689805155962002, 0.9801039509144436, 0.9866789573385414, 0.9904768252507075, 0.9909386686251257, 0.991859001848212]\n[0.7788716846464305, 0.7617045633750168, 0.6707372773945599, 0.5568304606596539, 0.6941230411597387, 0.7787209933941159, 0.754992377826191, 0.7483023871129775, 0.7435083026207427, 0.7541466377744421, 0.734785732225149, 0.7140236316591807, 0.7244768151579045, 0.7129863151316211, 0.7097137450280647, 0.7071496574402345, 0.7040645752901391, 0.7030885865978237, 0.7027474870189415]\n"})}),"\n",(0,i.jsx)(e.p,{children:"Let's visualize our results"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'ddf = pd.DataFrame()\nddf["maxDepth"] = maxDepths\nddf["trainAcc"] = train_acc\nddf["testAcc"] = test_acc\nddf.head()\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"maxDepth \ttrainAcc \ttestAcc\n0 \t2 \t0.778987 \t0.778872\n1 \t3 \t0.771292 \t0.761705\n2 \t4 \t0.682659 \t0.670737\n3 \t5 \t0.569805 \t0.556830\n4 \t6 \t0.709727 \t0.694123\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'my_palette = pc.qualitative.Bold\npx.line(ddf, x = "maxDepth", y = ["trainAcc", "testAcc"], color_discrete_sequence=my_palette)\n'})}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/customer-churn-prediction/01-cells-04.png",alt:"01-cells-04.png"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'dt = DecisionTreeClassifier(featuresCol="final_features", labelCol="Churn_idx", maxDepth=7)\nmodel = dt.fit(train)\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"recommendation",children:"Recommendation"}),"\n",(0,i.jsx)(e.p,{children:"We were asked to recommend a solution to reduce the customer churn."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'feature_importance = model.featureImportances\nscores = [score for i, score in enumerate(feature_importance)]\n\nff = pd.DataFrame(scores, columns=["score"], index = categorical_col_index + numerical_col)\npx.bar(ff, y = "score", color_discrete_sequence=my_palette)\n'})}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/customer-churn-prediction/01-cells-05.png",alt:"01-cells-05.png"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\ud83d\udd0d Feature Importance Interpretation This chart shows which features had the biggest impact on our model\u2019s predictions."}),"\n",(0,i.jsx)(e.p,{children:"\ud83d\udccc Contract type is by far the most important factor in predicting churn. It contributes the most to the model\u2019s decisions."}),"\n",(0,i.jsx)(e.p,{children:"\ud83e\uddd3 Tenure (how long the customer has been with the company) is also a major influence. Longer tenure usually means more loyalty."}),"\n",(0,i.jsx)(e.p,{children:"\ud83c\udf10 Internet service type and whether the customer is a senior citizen also played notable roles."}),"\n",(0,i.jsx)(e.p,{children:"In short, how long a customer stays and the kind of contract they have are key drivers of churn in this dataset."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)("br",{}),(0,i.jsx)(e.strong,{children:"Let's go deeper and create a bar chart to visualize the customer churn per contract type."})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'df = data.groupby(["Contract", "Churn"]).count().toPandas()\n\npx.bar(df, x = "Contract", y = "count", color = "Churn", color_discrete_sequence=my_palette)\n'})}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/customer-churn-prediction/01-cells-06.png",alt:"01-cells-06.png"}),"\n",(0,i.jsx)(e.p,{children:"The chart shows how customer churn varies across different contract types. It\u2019s clear that most of the churn comes from users on month-to-month contracts, while those on one-year or two-year plans are more likely to stay. To reduce churn, the company could offer special deals or perks that motivate month-to-month users to upgrade to longer-term commitments."})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function l(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);