"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[3368],{2280:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(4848),s=n(8453);const i={sidebar_position:20},a="ksqlDB Quickstart",o={id:"streams/ksqlDB/Examples/ksqldb-quickstart",title:"ksqlDB Quickstart",description:"Description",source:"@site/docs/streams/ksqlDB/Examples/ksqldb-quickstart.mdx",sourceDirName:"streams/ksqlDB/Examples",slug:"/streams/ksqlDB/Examples/ksqldb-quickstart",permalink:"/docs/streams/ksqlDB/Examples/ksqldb-quickstart",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/docs/ksqlDB/examples"},next:{title:"Materialized View",permalink:"/docs/streams/ksqlDB/Examples/materialized-view"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Docker",id:"docker",level:2},{value:"Start Kafka/ksqldb",id:"start-kafkaksqldb",level:3},{value:"Start ksqlDB&#39;s interactive CLI",id:"start-ksqldbs-interactive-cli",level:2},{value:"Create a stream",id:"create-a-stream",level:2},{value:"CREATE STREAM parameters",id:"create-stream-parameters",level:4},{value:"Run a continuous query over the stream",id:"run-a-continuous-query-over-the-stream",level:2},{value:"Start another CLI session",id:"start-another-cli-session",level:2},{value:"Populate the stream with events",id:"populate-the-stream-with-events",level:2},{value:"Output of the first CLI:",id:"output-of-the-first-cli",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"ksqldb-quickstart",children:"ksqlDB Quickstart"})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)("img",{src:"/img/streams/ksqlDB/ksqldb-quickstart.png",alt:"ksqldb-quickstart.png"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"create a stream"}),"\n",(0,r.jsx)(t.li,{children:"run a continuous query over the stream"}),"\n",(0,r.jsx)(t.li,{children:"populate the stream with events"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"docker",children:"Docker"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"docker-compose.yml\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'---\nversion: \'2\'\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:latest\n    hostname: zookeeper\n    container_name: zookeeper\n    ports:\n      - "2181:2181"\n    environment:\n      ZOOKEEPER_CLIENT_PORT: 2181\n      ZOOKEEPER_TICK_TIME: 2000\n\n  broker:\n    image: confluentinc/cp-enterprise-kafka:latest\n    hostname: broker\n    container_name: broker\n    depends_on:\n      - zookeeper\n    ports:\n      - "29092:29092"\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: \'zookeeper:2181\'\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1\n      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1\n\n  ksqldb-server:\n    image: confluentinc/ksqldb-server:latest\n    hostname: ksqldb-server\n    container_name: ksqldb-server\n    depends_on:\n      - broker\n    ports:\n      - "8088:8088"\n    environment:\n      KSQL_LISTENERS: http://0.0.0.0:8088\n      KSQL_BOOTSTRAP_SERVERS: broker:9092\n      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"\n      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"\n\n  ksqldb-cli:\n    image: confluentinc/ksqldb-cli:latest\n    container_name: ksqldb-cli\n    depends_on:\n      - broker\n      - ksqldb-server\n    entrypoint: /bin/sh\n    tty: true\n'})}),"\n",(0,r.jsx)(t.h3,{id:"start-kafkaksqldb",children:"Start Kafka/ksqldb"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"docker-compose up\n"})}),"\n",(0,r.jsx)(t.h2,{id:"start-ksqldbs-interactive-cli",children:"Start ksqlDB's interactive CLI"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"docker exec -it ksqldb-cli ksql http://ksqldb-server:8088\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.\n\n                  ===========================================\n                  =       _              _ ____  ____       =\n                  =      | | _____  __ _| |  _ \\| __ )      =\n                  =      | |/ / __|/ _` | | | | |  _ \\      =\n                  =      |   <\\__ \\ (_| | | |_| | |_) |     =\n                  =      |_|\\_\\___/\\__, |_|____/|____/      =\n                  =                   |_|                   =\n                  =        The Database purpose-built       =\n                  =        for stream processing apps       =\n                  ===========================================\n\nCopyright 2017-2022 Confluent Inc.\n\nCLI v0.28.2, Server v0.28.2 located at http://ksqldb-server:8088\nServer Status: RUNNING\n\nHaving trouble? Type 'help' (case-insensitive) for a rundown of how things work!\n\nksql>\n"})}),"\n",(0,r.jsx)(t.h2,{id:"create-a-stream",children:"Create a stream"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\nksql> CREATE STREAM riderLocations01 (profileId VARCHAR, latitude DOUBLE, longitude DOUBLE)\n>  WITH (kafka_topic='locations', value_format='json', partitions=1);\n\n Message\n----------------\n Stream created\n----------------\nksql>\n"})}),"\n",(0,r.jsx)(t.h4,{id:"create-stream-parameters",children:"CREATE STREAM parameters"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'\nkafka_topic - Name of the Kafka topic underlying the stream. In this case it will be automatically created because it doesn\'t exist yet, but streams may also be created over topics that already exist.\nvalue_format - Encoding of the messages stored in the Kafka topic. For JSON encoding, each row will be stored as a JSON object whose keys/values are column names/values. For example: {"profileId": "c2309eec", "latitude": 37.7877, "longitude": -122.4205}\npartitions - Number of partitions to create for the locations topic. Note that this parameter is not needed for topics that already exist.\n'})}),"\n",(0,r.jsx)(t.h2,{id:"run-a-continuous-query-over-the-stream",children:"Run a continuous query over the stream"}),"\n",(0,r.jsxs)(t.p,{children:["This query will output all rows from the ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"riderLocations01"})})," stream whose coordinates are within 5 miles of Mountain View."]}),"\n",(0,r.jsxs)(t.p,{children:["This is the first thing that may feel a bit unfamiliar to you, because the query will never return until it's terminated. It will perpetually ",(0,r.jsx)(t.a,{href:"https://docs.ksqldb.io/en/latest/concepts/queries/push/?_ga=2.136193457.1262453070.1733920201-1450332152.1733920201",children:(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"push"})})})," output rows to the client as events are written to the riderLocations stream."]}),"\n",(0,r.jsxs)(t.p,{children:["Leave this query running in the CLI session for now. Next, we're going to write some data into the ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"riderLocations01"})})," stream so that the query begins producing output."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:" -- Mountain View lat, long: 37.4133, -122.1162\n>SELECT * FROM riderLocations01\n>  WHERE GEO_DISTANCE(latitude, longitude, 37.4133, -122.1162) <= 5 EMIT CHANGES;\n>\n+---------------------------------------------+---------------------------------------------+---------------------------------------------+\n|PROFILEID                                    |LATITUDE                                     |LONGITUDE                                    |\n+---------------------------------------------+---------------------------------------------+---------------------------------------------+\n\nPress CTRL-C to interrupt\n"})}),"\n",(0,r.jsx)(t.h2,{id:"start-another-cli-session",children:"Start another CLI session"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"docker exec -it ksqldb-cli ksql http://ksqldb-server:8088\n"})}),"\n",(0,r.jsx)(t.h2,{id:"populate-the-stream-with-events",children:"Populate the stream with events"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"INSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('c2309eec', 37.7877, -122.4205);\nINSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('18f4ea86', 37.3903, -122.0643);\nINSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('4ab5cbad', 37.3952, -122.0813);\nINSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('8b6eae59', 37.3944, -122.0813);\nINSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('4a7c7b41', 37.4049, -122.0822);\nINSERT INTO riderLocations01 (profileId, latitude, longitude) VALUES ('4ddad000', 37.7857, -122.4011);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"output-of-the-first-cli",children:"Output of the first CLI:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\n+---------------------------------------------+---------------------------------------------+---------------------------------------------+\n|PROFILEID                                    |LATITUDE                                     |LONGITUDE                                    |\n+---------------------------------------------+---------------------------------------------+---------------------------------------------+\n|4ab5cbad                                     |37.3952                                      |-122.0813                                    |\n|8b6eae59                                     |37.3944                                      |-122.0813                                    |\n|4a7c7b41                                     |37.4049                                      |-122.0822                                    |\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(t.p,{children:["-- ",(0,r.jsx)("br",{}),"\nOn the base: ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://ksqldb.io/quickstart-enterprise.html",children:"https://ksqldb.io/quickstart-enterprise.html"})})})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);