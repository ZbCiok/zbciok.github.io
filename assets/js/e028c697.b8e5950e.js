"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[9285],{3201:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"apache-flink/Examples/taxi-ride-generator","title":"Taxi Ride Generator","description":"Description","source":"@site/docs/apache-flink/Examples/taxi-ride-generator.mdx","sourceDirName":"apache-flink/Examples","slug":"/apache-flink/Examples/taxi-ride-generator","permalink":"/docs/apache-flink/Examples/taxi-ride-generator","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60},"sidebar":"tutorialSidebar","previous":{"title":"Tumbling Window","permalink":"/docs/apache-flink/Examples/tumbling-window"},"next":{"title":"Flink Kafka Word Count","permalink":"/docs/apache-flink/Examples/flink-kafka-word-count"}}');var r=t(4848),a=t(8453);const s={sidebar_position:60},o="Taxi Ride Generator",l={},c=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"RideCountExample.java",id:"ridecountexamplejava",level:3},{value:"Run &amp; Output",id:"run--output",level:2},{value:"<em><strong>(IntelliJ IDEA)</strong></em>",id:"intellij-idea",level:4},{value:"Source Code: <br></br> <em><strong>https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/taxi-ride-generator</strong></em>",id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinktaxi-ride-generator",level:4},{value:"Based on: <em><strong>https://github.com/apache/flink-training/tree/master</strong></em>",id:"based-on-httpsgithubcomapacheflink-trainingtreemaster",level:5}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"taxi-ride-generator",children:"Taxi Ride Generator"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["Example that counts the rides for each driver.\nNote that this is implicitly keeping state for each driver. ",(0,r.jsx)(n.strong,{children:"This sort of simple, non-windowed\naggregation on an unbounded set of keys will use an unbounded amount of state."})," When this is an\nissue, look at the SQL/Table API, or ProcessFunction, or state TTL, all of which provide\nmechanisms for expiring state for stale keys."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JDK 11"}),"\n",(0,r.jsx)(n.li,{children:"Maven"}),"\n",(0,r.jsx)(n.li,{children:"IDE (IntelliJ IDEA, Eclipse)"}),"\n",(0,r.jsx)(n.li,{children:"Flink 1.20.0"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:".\n\u251c\u2500\u2500 dependency-reduced-pom.xml\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 org\n        \u2502\xa0\xa0     \u2514\u2500\u2500 apache\n        \u2502\xa0\xa0         \u2514\u2500\u2500 flink\n        \u2502\xa0\xa0             \u2514\u2500\u2500 training\n        \u2502\xa0\xa0                 \u251c\u2500\u2500 examples\n        \u2502\xa0\xa0                 \u2502\xa0\xa0 \u2514\u2500\u2500 ridecount\n        \u2502\xa0\xa0                 \u2502\xa0\xa0     \u2514\u2500\u2500 RideCountExample.java\n        \u2502\xa0\xa0                 \u2514\u2500\u2500 exercises\n        \u2502\xa0\xa0                     \u2514\u2500\u2500 common\n        \u2502\xa0\xa0                         \u251c\u2500\u2500 datatypes\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u251c\u2500\u2500 RideAndFare.java.bak\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u251c\u2500\u2500 TaxiFare.java\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2514\u2500\u2500 TaxiRide.java\n        \u2502\xa0\xa0                         \u251c\u2500\u2500 sources\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u251c\u2500\u2500 TaxiFareGenerator.java\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2514\u2500\u2500 TaxiRideGenerator.java\n        \u2502\xa0\xa0                         \u2514\u2500\u2500 utils\n        \u2502\xa0\xa0                             \u251c\u2500\u2500 DataGenerator.java\n        \u2502\xa0\xa0                             \u251c\u2500\u2500 GeoUtils.java\n        \u2502\xa0\xa0                             \u2514\u2500\u2500 MissingSolutionException.java\n        \u2514\u2500\u2500 resources\n            \u251c\u2500\u2500 log4j\n            \u2514\u2500\u2500 log4j.properties.txt\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ridecountexamplejava",children:"RideCountExample.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class RideCountExample {\n\n    /**\n     * Main method.\n     *\n     * @throws Exception which occurs during job execution.\n     */\n    public static void main(String[] args) throws Exception {\n\n        // set up streaming execution environment\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        // start the data generator\n        DataStream<TaxiRide> rides = env.addSource(new TaxiRideGenerator());\n\n        // map each ride to a tuple of (driverId, 1)\n        DataStream<Tuple2<Long, Long>> tuples =\n                rides.map(\n                        new MapFunction<TaxiRide, Tuple2<Long, Long>>() {\n                            @Override\n                            public Tuple2<Long, Long> map(TaxiRide ride) {\n                                return Tuple2.of(ride.driverId, 1L);\n                            }\n                        });\n\n        // partition the stream by the driverId\n        KeyedStream<Tuple2<Long, Long>, Long> keyedByDriverId = tuples.keyBy(t -> t.f0);\n\n        // count the rides for each driver\n        DataStream<Tuple2<Long, Long>> rideCounts = keyedByDriverId.sum(1);\n\n        // we could, in fact, print out any or all of these streams\n        rideCounts.print();\n\n        // run the cleansing pipeline\n        env.execute("Ride Count");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"run--output",children:"Run & Output"}),"\n",(0,r.jsx)(n.h4,{id:"intellij-idea",children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"(IntelliJ IDEA)"})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"// ...\n15> (2013000123,13)\n15> (2013000089,13)\n2> (2013000102,15)\n1> (2013000042,15)\n7> (2013000027,10)\n4> (2013000180,10)\n14> (2013000052,9)\n18> (2013000005,11)\n26> (2013000129,10)\n// ...\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"source-code--httpsgithubcomzbciokzjc-examplestreemainstreamsflinktaxi-ride-generator",children:["Source Code: ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/taxi-ride-generator",children:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/flink/taxi-ride-generator"})})})]}),"\n",(0,r.jsxs)(n.h5,{id:"based-on-httpsgithubcomapacheflink-trainingtreemaster",children:["Based on: ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/apache/flink-training/tree/master",children:"https://github.com/apache/flink-training/tree/master"})})})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);