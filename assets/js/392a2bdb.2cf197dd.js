"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[2498],{7861:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=i(4848),a=i(8453);const t={sidebar_position:100},s="Binarizer",o={id:"artificial-intelligence/machine-learning/features/binarizer",title:"Binarizer",description:":",source:"@site/docs/artificial-intelligence/machine-learning/features/binarizer.mdx",sourceDirName:"artificial-intelligence/machine-learning/features",slug:"/artificial-intelligence/machine-learning/features/binarizer",permalink:"/docs/artificial-intelligence/machine-learning/features/binarizer",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/docs/artificial-intelligence/machine-learning/features/"},next:{title:"Tools for integrating ML into business application",permalink:"/docs/artificial-intelligence/machine-learning/tools-for-integrating-ml-into-business-application/"}},l={},c=[{value:"<strong>Using <code>Binarizer</code> in Scikit-learn</strong>",id:"using-binarizer-in-scikit-learn",level:3},{value:"<strong>Example Usage</strong>",id:"example-usage",level:4},{value:"<strong>Output</strong>",id:"output",level:4},{value:"<strong>Key Points</strong>",id:"key-points",level:3},{value:"Understanding Binarization in Data Preprocessing",id:"understanding-binarization-in-data-preprocessing",level:3}];function d(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"binarizer",children:"Binarizer"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)("img",{src:"/img/ai/ai-001.png",width:"24 px",alt:"ai-001.png"}),": ",(0,r.jsx)("br",{}),"\nA ",(0,r.jsx)(e.strong,{children:"Binarizer"})," in machine learning is a preprocessing technique used to convert continuous numerical data into binary values (0s and 1s) based on a threshold. This is often used in classification problems, feature engineering, or when dealing with categorical variables."]}),"\n",(0,r.jsx)(e.h3,{id:"using-binarizer-in-scikit-learn",children:(0,r.jsxs)(e.strong,{children:["Using ",(0,r.jsx)(e.code,{children:"Binarizer"})," in Scikit-learn"]})}),"\n",(0,r.jsxs)(e.p,{children:["Scikit-learn provides a ",(0,r.jsx)(e.code,{children:"Binarizer"})," class that allows you to easily transform numerical data into binary form."]}),"\n",(0,r.jsx)(e.h4,{id:"example-usage",children:(0,r.jsx)(e.strong,{children:"Example Usage"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"from sklearn.preprocessing import Binarizer\nimport numpy as np\n\n# Sample data\ndata = np.array([[1.5, -2.3, 3.2],\n                 [0.8, -0.5, 1.2],\n                 [2.4, 3.5, -1.1]])\n\n# Define the Binarizer with a threshold (e.g., 0.5)\nbinarizer = Binarizer(threshold=0.5)\n\n# Transform the data\nbinary_data = binarizer.fit_transform(data)\n\nprint(binary_data)\n"})}),"\n",(0,r.jsx)(e.h4,{id:"output",children:(0,r.jsx)(e.strong,{children:"Output"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"[[1. 0. 1.]\n [1. 0. 1.]\n [1. 1. 0.]]\n"})}),"\n",(0,r.jsx)(e.h3,{id:"key-points",children:(0,r.jsx)(e.strong,{children:"Key Points"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Values greater than the threshold are converted to ",(0,r.jsx)(e.code,{children:"1"}),", otherwise ",(0,r.jsx)(e.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(e.li,{children:["Default threshold is ",(0,r.jsx)(e.code,{children:"0.0"})," (anything above 0 becomes ",(0,r.jsx)(e.code,{children:"1"}),")."]}),"\n",(0,r.jsx)(e.li,{children:"Useful in feature selection or when dealing with binary classification tasks."}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.admonition,{title:"Citation",type:"note",children:[(0,r.jsx)(e.h3,{id:"understanding-binarization-in-data-preprocessing",children:"Understanding Binarization in Data Preprocessing"}),(0,r.jsx)(e.p,{children:"Binarization is a data preprocessing technique used to transform numerical variables into binary values (0s and 1s) based on a threshold. This method can be particularly useful for converting continuous variables into a form that machine learning algorithms can more easily process."}),(0,r.jsxs)(e.p,{children:["...",(0,r.jsx)("br",{})]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.a,{href:"https://medium.com/@noorfatimaafzalbutt/understanding-binarization-in-data-preprocessing-663219320c6e",children:"https://medium.com/@noorfatimaafzalbutt/understanding-binarization-in-data-preprocessing-663219320c6e"})})})})]})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>o});var r=i(6540);const a={},t=r.createContext(a);function s(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);