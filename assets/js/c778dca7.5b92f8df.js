"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[7707],{1541:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"messaging/rabbitmq/examples/getting-started","title":"Getting Started","description":"Description","source":"@site/docs/messaging/rabbitmq/examples/getting-started.mdx","sourceDirName":"messaging/rabbitmq/examples","slug":"/messaging/rabbitmq/examples/getting-started","permalink":"/docs/messaging/rabbitmq/examples/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Examples","permalink":"/docs/messaging/rabbitmq/examples"},"next":{"title":"Hello World","permalink":"/docs/messaging/rabbitmq/examples/hello-world"}}');var r=i(4848),s=i(8453);const a={sidebar_position:100},c="Getting Started",o={},l=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"pom.xml",id:"pomxml",level:3},{value:"CommonConfigs.java",id:"commonconfigsjava",level:3},{value:"MessagePublisher.java",id:"messagepublisherjava",level:3},{value:"MessageSubscriber.java",id:"messagesubscriberjava",level:3},{value:"Running",id:"running",level:2},{value:"Run:",id:"run",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a Sender"}),"\n",(0,r.jsx)(n.li,{children:"Create a Reciever"}),"\n",(0,r.jsx)(n.li,{children:"Run an Application"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JDK 21"}),"\n",(0,r.jsx)(n.li,{children:"Maven"}),"\n",(0,r.jsx)(n.li,{children:"Docker"}),"\n",(0,r.jsx)(n.li,{children:"IntelliJ IDEA"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".\n\u251c\u2500\u2500 pom.xml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502\xa0\xa0 \u251c\u2500\u2500 java\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 org\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 example\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u251c\u2500\u2500 CommonConfigs.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u251c\u2500\u2500 MessagePublisher.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 MessageSubscriber.java\n    \u2502\xa0\xa0 \u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>rabbitmq-getting-started</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>22</maven.compiler.source>\n        <maven.compiler.target>22</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.rabbitmq</groupId>\n            <artifactId>amqp-client</artifactId>\n            <version>5.24.0</version>\n        </dependency>\n    </dependencies>\n</project>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"commonconfigsjava",children:"CommonConfigs.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.example;\n\npublic class CommonConfigs {\n  public static final String DEFAULT_QUEUE = "Queue-Getting-Started";\n  public static final String AMQP_URL = "amqp://guest:guest@localhost:5672/";\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"messagepublisherjava",children:"MessagePublisher.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.example;\n\nimport com.rabbitmq.client.Channel;\nimport com.rabbitmq.client.Connection;\nimport com.rabbitmq.client.ConnectionFactory;\n\npublic class MessagePublisher {\n  public static void main(String[] args) throws Exception {\n    ConnectionFactory factory = new ConnectionFactory();\n    Connection connection = factory.newConnection(CommonConfigs.AMQP_URL);\n    Channel channel = connection.createChannel();\n\n    channel.queueDeclare(CommonConfigs.DEFAULT_QUEUE, true, false, false, null);\n    for (int i = 0; i < 4; i++) {\n      String message = CommonConfigs.DEFAULT_QUEUE + " with rabbitMQ - Msg" + i;\n      //publish - (exchange, routingKey, properties, message)\n      channel.basicPublish("", CommonConfigs.DEFAULT_QUEUE, null, message.getBytes());\n    }\n    channel.close();\n    connection.close();\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"messagesubscriberjava",children:"MessageSubscriber.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.example;\n\nimport com.rabbitmq.client.*;\n\nimport java.io.IOException;\nimport java.util.concurrent.TimeoutException;\n\npublic class MessageSubscriber {\n\n  public static void main(String[] args) throws IOException, TimeoutException {\n    ConnectionFactory factory = new ConnectionFactory();\n    Connection connection = factory.newConnection(CommonConfigs.AMQP_URL);\n    Channel channel = connection.createChannel();\n\n    DeliverCallback deliverCallback = (s, delivery) -> {\n      System.out.println(new String(delivery.getBody(), "UTF-8"));\n    };\n\n    CancelCallback cancelCallback = s -> {\n      System.out.println(s);\n    };\n    channel.basicConsume(CommonConfigs.DEFAULT_QUEUE, true, deliverCallback, cancelCallback);\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"running",children:"Running"}),"\n",(0,r.jsx)(n.p,{children:"Intellij IDE:"}),"\n",(0,r.jsx)(n.h4,{id:"run",children:"Run:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"MessagePublisher"})})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"MessageSubscriber"})})," ",(0,r.jsx)("br",{}),"\nOutput:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Queue-Getting-Started with rabbitMQ - Msg0\nQueue-Getting-Started with rabbitMQ - Msg1\nQueue-Getting-Started with rabbitMQ - Msg2\nQueue-Getting-Started with rabbitMQ - Msg3\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Source"})," Code: ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/rabbitmq/rabbitmq-getting-started",children:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/rabbitmq/rabbitmq-getting-started"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);