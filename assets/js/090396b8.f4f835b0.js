"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1346],{9897:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var o=n(4848),a=n(8453);const s={sidebar_position:22},t="Kafka Protobuf 1",i={id:"messaging/kafka/examples/kafka-protobuf-1",title:"Kafka Protobuf 1",description:"Description",source:"@site/docs/messaging/kafka/examples/kafka-protobuf-1.mdx",sourceDirName:"messaging/kafka/examples",slug:"/messaging/kafka/examples/kafka-protobuf-1",permalink:"/docs/messaging/kafka/examples/kafka-protobuf-1",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"Kafka Avro 1",permalink:"/docs/messaging/kafka/examples/kafka-avro-1"},next:{title:"Docker apache/kafka:3.9.0",permalink:"/docs/messaging/kafka/examples/apache-kafka-3.9.0"}},c={},u=[{value:"Description",id:"description",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Running Docker",id:"running-docker",level:3},{value:"Defining the Protobuf Schema",id:"defining-the-protobuf-schema",level:3},{value:"Running <em><strong>protoc-jar-maven-plugin</strong></em>",id:"running-protoc-jar-maven-plugin",level:3},{value:"ProtobufProducer.java",id:"protobufproducerjava",level:3},{value:"ProtobufConsumer.java",id:"protobufconsumerjava",level:3}];function p(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"kafka-protobuf-1",children:"Kafka Protobuf 1"})}),"\n",(0,o.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)("img",{src:"/img/messaging/kafka/example-kafka-avro-1.png",width:"300 px",alt:"example-kafka-avro-1.png"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Running a Kafka cluster locally (Docker)"}),"\n",(0,o.jsx)(r.li,{children:"Defining the Protobuf Schema"}),"\n",(0,o.jsx)(r.li,{children:"Producing Protobuf messages"}),"\n",(0,o.jsx)(r.li,{children:"Consuming Protobuf messages"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Linux"}),"\n",(0,o.jsx)(r.li,{children:"JDK 21"}),"\n",(0,o.jsx)(r.li,{children:"Maven"}),"\n",(0,o.jsx)(r.li,{children:"Docker"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:".\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2514\u2500\u2500 com\n        \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n        \u2502\xa0\xa0         \u2514\u2500\u2500 kafka\n        \u2502\xa0\xa0             \u2514\u2500\u2500 protobuf\n        \u2502\xa0\xa0                 \u251c\u2500\u2500 consumer\n        \u2502\xa0\xa0                 \u2502\xa0\xa0 \u251c\u2500\u2500 GenericProtobufConsumer.java.bak\n        \u2502\xa0\xa0                 \u2502\xa0\xa0 \u2514\u2500\u2500 ProtobufConsumer.java\n        \u2502\xa0\xa0                 \u2514\u2500\u2500 producer\n        \u2502\xa0\xa0                     \u2514\u2500\u2500 ProtobufProducer.java\n        \u2514\u2500\u2500 resources\n            \u2514\u2500\u2500 protobuf\n                \u2514\u2500\u2500 SimpleMessage.proto\n"})}),"\n",(0,o.jsx)(r.h3,{id:"running-docker",children:"Running Docker"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"docker-compose up -d\n"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"docker ps\n"})}),"\n",(0,o.jsx)(r.p,{children:"Output:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:'CONTAINER ID   IMAGE                                   COMMAND                  CREATED             STATUS             PORTS                                        NAMES\n6a619998c439   confluentinc/cp-schema-registry:7.5.2   "/etc/confluent/dock\u2026"   About an hour ago   Up About an hour   0.0.0.0:8081->8081/tcp                       sn-schema-registry\n2f8cf73b5f37   confluentinc/cp-kafka:7.5.2             "/etc/confluent/dock\u2026"   About an hour ago   Up About an hour   0.0.0.0:9092->9092/tcp                       sn-kafka\ne3487b27ef7a   confluentinc/cp-zookeeper:7.5.2         "/etc/confluent/dock\u2026"   About an hour ago   Up About an hour   2888/tcp, 0.0.0.0:2181->2181/tcp, 3888/tcp   sn-zookeeper\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"docker exec -it sn-kafka /bin/bash\n"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"cd /opt\n"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"kafka-topics --list --bootstrap-server localhost:9092\n"})}),"\n",(0,o.jsx)(r.p,{children:"Result:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"__consumer_offsets\n_schemas\nprotobuf-topic\n"})}),"\n",(0,o.jsx)(r.h3,{id:"defining-the-protobuf-schema",children:"Defining the Protobuf Schema"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"SimpleMessage.proto"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:'syntax = "proto3";\n\npackage com.jreact.protobuf;\noption java_outer_classname = "SimpleMessageProtos";\n\nmessage SimpleMessage {\n\tstring content = 1;\n\tstring date_time = 2;\n}\n'})}),"\n",(0,o.jsxs)(r.h3,{id:"running-protoc-jar-maven-plugin",children:["Running ",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:"protoc-jar-maven-plugin"})})]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"            <plugin>\n                <groupId>com.github.os72</groupId>\n                <artifactId>protoc-jar-maven-plugin</artifactId>\n                <version>3.11.4</version>\n                <executions>\n                    <execution>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>run</goal>\n                        </goals>\n                        <configuration>\n                            <inputDirectories>\n                                <include>${project.basedir}/src/main/resources/protobuf</include>\n                            </inputDirectories>\n                            <outputTargets>\n                                <outputTarget>\n                                    <type>java</type>\n                                    <addSources>main</addSources>\n                                    <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>\n                                </outputTarget>\n                            </outputTargets>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n"})}),"\n",(0,o.jsx)(r.p,{children:"Result"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:".\n...\n...\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u2514\u2500\u2500 main\n\u2502\xa0\xa0     \u251c\u2500\u2500 java\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 com\n\u2502\xa0\xa0     \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n\u2502\xa0\xa0     \u2502\xa0\xa0         \u251c\u2500\u2500 kafka\n\u2502\xa0\xa0     \u2502\xa0\xa0         \u2502\xa0\xa0 \u2514\u2500\u2500 protobuf\n...\n...\n\u2502\xa0\xa0     \u2502\xa0\xa0         \u2514\u2500\u2500 protobuf\n\u2502\xa0\xa0     \u2502\xa0\xa0             \u2514\u2500\u2500 SimpleMessageProtos.java\n\u2502\xa0\xa0     \u2514\u2500\u2500 resources\n\u2502\xa0\xa0         \u2514\u2500\u2500 protobuf\n\u2502\xa0\xa0             \u2514\u2500\u2500 SimpleMessage.proto\n\u2514\u2500\u2500 target\n...\n...\n"})}),"\n",(0,o.jsx)(r.h3,{id:"protobufproducerjava",children:"ProtobufProducer.java"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-java",children:'package com.jreact.kafka.protobuf.producer;\n\nimport com.jreact.protobuf.SimpleMessageProtos.SimpleMessage;\nimport io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer;\nimport io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializerConfig;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.clients.producer.Producer;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.common.serialization.StringSerializer;\n\nimport java.time.Instant;\nimport java.util.Properties;\n\npublic class ProtobufProducer {\n\n    public static void main(String[] args) {\n        ProtobufProducer protobufProducer = new ProtobufProducer();\n        protobufProducer.writeMessage();\n    }\n\n    public void writeMessage() {\n        //create kafka producer\n        Properties properties = new Properties();\n        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");\n        properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n        properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaProtobufSerializer.class);\n        properties.put(KafkaProtobufSerializerConfig.SCHEMA_REGISTRY_URL_CONFIG, "http://localhost:8081");\n\n        Producer<String, SimpleMessage> producer = new KafkaProducer<>(properties);\n\n        //prepare the message\n        SimpleMessage simpleMessage =\n                SimpleMessage.newBuilder()\n                        .setContent("Hello world")\n                        .setDateTime(Instant.now().toString())\n                        .build();\n\n        System.out.println(simpleMessage);\n\n        //prepare the kafka record\n        ProducerRecord<String, SimpleMessage> record\n                = new ProducerRecord<>("protobuf-topic", null, simpleMessage);\n\n        producer.send(record);\n        //ensures record is sent before closing the producer\n        producer.flush();\n\n        producer.close();\n    }\n\n}\n'})}),"\n",(0,o.jsx)(r.h3,{id:"protobufconsumerjava",children:"ProtobufConsumer.java"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-java",children:'package com.jreact.kafka.protobuf.consumer;\n\nimport io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer;\nimport io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializerConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\n\nimport java.time.Duration;\nimport java.util.Collections;\nimport java.util.Properties;\n\nimport static com.jreact.protobuf.SimpleMessageProtos.SimpleMessage;\n\npublic class ProtobufConsumer {\n\n    public static void main(String[] args) {\n        ProtobufConsumer protobufConsumer = new ProtobufConsumer();\n        protobufConsumer.readMessages();\n    }\n\n    public void readMessages() {\n        Properties properties = new Properties();\n        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");\n        properties.put(ConsumerConfig.GROUP_ID_CONFIG, "protobuf-consumer-group");\n        properties.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");\n        properties.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);\n\n        properties.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        properties.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, KafkaProtobufDeserializer.class);\n\n        properties.put(KafkaProtobufDeserializerConfig.SCHEMA_REGISTRY_URL_CONFIG, "http://localhost:8081");\n        properties.put(KafkaProtobufDeserializerConfig.SPECIFIC_PROTOBUF_VALUE_TYPE, SimpleMessage.class.getName());\n\n        KafkaConsumer<String, SimpleMessage> consumer = new KafkaConsumer<>(properties);\n\n        consumer.subscribe(Collections.singleton("protobuf-topic"));\n\n        //poll the record from the topic\n        while (true) {\n            ConsumerRecords<String, SimpleMessage> records = consumer.poll(Duration.ofMillis(100));\n\n            for (ConsumerRecord<String, SimpleMessage> record : records) {\n                System.out.println("Message content: " + record.value().getContent());\n                System.out.println("Message time: " + record.value().getDateTime());\n            }\n            consumer.commitAsync();\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsxs)(r.p,{children:["Source Code: ",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/kafka/kafka-protobuf-1",children:"https://github.com/ZbCiok/zjc-examples/tree/main/reactive-messaging/kafka/kafka-protobuf-1"})})})]}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsxs)(r.p,{children:["Based on: ",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.a,{href:"https://codingharbour.com/apache-kafka/how-to-use-protobuf-with-apache-kafka-and-schema-registry/",children:"https://codingharbour.com/apache-kafka/how-to-use-protobuf-with-apache-kafka-and-schema-registry/"})})})]})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>i});var o=n(6540);const a={},s=o.createContext(a);function t(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);