"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[1263],{812:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"artificial-intelligence/machine-learning/examples/health/EDA-4-global-health-data","title":"EDA 4 Global Health data","description":"The leading global health challenges in the artificial intelligence era","source":"@site/docs/artificial-intelligence/machine-learning/examples/health/EDA-4-global-health-data.mdx","sourceDirName":"artificial-intelligence/machine-learning/examples/health","slug":"/artificial-intelligence/machine-learning/examples/health/EDA-4-global-health-data","permalink":"/docs/artificial-intelligence/machine-learning/examples/health/EDA-4-global-health-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":110,"frontMatter":{"sidebar_position":110},"sidebar":"tutorialSidebar","previous":{"title":"Health","permalink":"/docs/artificial-intelligence/machine-learning/examples/health/"},"next":{"title":"Apache AI Projects","permalink":"/docs/artificial-intelligence/apache-ai-projects"}}');var i=t(4848),r=t(8453);const s={sidebar_position:110},l="EDA 4 Global Health data",o={},c=[{value:"<strong>Applications of ML in Global Health</strong>",id:"applications-of-ml-in-global-health",level:3},{value:"<strong>Challenges &amp; Ethical Considerations</strong>",id:"challenges--ethical-considerations",level:3},{value:"Beginner-Friendly Data Analysis Notebook",id:"beginner-friendly-data-analysis-notebook",level:2},{value:"Instructions:",id:"instructions",level:4},{value:"Output",id:"output",level:4},{value:"Output",id:"output-1",level:4},{value:"Output",id:"output-2",level:4},{value:"Output",id:"output-3",level:4},{value:"EDA",id:"eda",level:2},{value:"Output",id:"output-4",level:4},{value:"Output",id:"output-5",level:4},{value:"Output",id:"output-6",level:4},{value:"Output",id:"output-7",level:4},{value:"Task 1: Explore High Treatment Costs",id:"task-1-explore-high-treatment-costs",level:2},{value:"Output",id:"output-8",level:4},{value:"Task 2: Visualize Healthcare Access vs Mortality Rate",id:"task-2-visualize-healthcare-access-vs-mortality-rate",level:2},{value:"Output",id:"output-9",level:4},{value:"Task 3: Identify Top 5 Most Prevalent Diseases",id:"task-3-identify-top-5-most-prevalent-diseases",level:2},{value:"Output",id:"output-10",level:4},{value:"Step 1: Prepare the Data",id:"step-1-prepare-the-data",level:3},{value:"Output",id:"output-11",level:4},{value:"Step 2: Train a Linear Regression Model",id:"step-2-train-a-linear-regression-model",level:3},{value:"Output",id:"output-12",level:4},{value:"Step 3: Evaluate the Model",id:"step-3-evaluate-the-model",level:3},{value:"Output",id:"output-13",level:4},{value:"Step 4: Visualize Predictions vs Actual Values",id:"step-4-visualize-predictions-vs-actual-values",level:3},{value:"Output",id:"output-14",level:4},{value:"Step 5: Challenge",id:"step-5-challenge",level:3},{value:"Output",id:"output-15",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"eda-4-global-health-data",children:"EDA 4 Global Health data"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.frontiersin.org/journals/public-health/articles/10.3389/fpubh.2023.1328918/full",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"The leading global health challenges in the artificial intelligence era"})})})," ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:"/img/ai/ai-001.png",width:"24 px",alt:"ai-001.png"}),": ",(0,i.jsx)("br",{}),"\nMachine learning (ML) is transforming global health by improving disease detection, optimizing healthcare delivery, and enhancing medical research. Here are some key applications and considerations:"]}),"\n",(0,i.jsx)(n.h3,{id:"applications-of-ml-in-global-health",children:(0,i.jsx)(n.strong,{children:"Applications of ML in Global Health"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Disease Diagnosis & Prediction"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ML models analyze medical images (e.g., X-rays, MRIs) to detect diseases like tuberculosis, cancer, and pneumonia."}),"\n",(0,i.jsx)(n.li,{children:"Predictive models help identify disease outbreaks and assess patient risks for conditions like diabetes or cardiovascular disease."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Epidemiology & Pandemic Response"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ML helps track and predict the spread of infectious diseases (e.g., COVID-19, malaria, dengue)."}),"\n",(0,i.jsx)(n.li,{children:"AI-driven models analyze social media, hospital data, and environmental factors to detect early warning signs of outbreaks."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Drug Discovery & Treatment Personalization"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ML accelerates drug discovery by analyzing molecular data to identify potential new drugs."}),"\n",(0,i.jsx)(n.li,{children:"Personalized medicine tailors treatments based on genetic and clinical data."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Healthcare Access & Telemedicine"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AI chatbots and virtual assistants provide medical advice in remote areas with limited healthcare access."}),"\n",(0,i.jsx)(n.li,{children:"ML optimizes supply chain management for vaccines and medicines, reducing shortages."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Medical Imaging & Radiology"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AI-powered imaging tools assist radiologists in detecting abnormalities with high accuracy."}),"\n",(0,i.jsx)(n.li,{children:"ML enhances image segmentation and analysis in pathology, dermatology, and ophthalmology."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Mental Health & Well-being"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ML-powered apps analyze speech, text, and behavior patterns to detect signs of depression and anxiety."}),"\n",(0,i.jsx)(n.li,{children:"AI chatbots provide mental health support where human therapists are scarce."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"challenges--ethical-considerations",children:(0,i.jsx)(n.strong,{children:"Challenges & Ethical Considerations"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Privacy & Security:"})," Handling sensitive patient data responsibly to prevent misuse."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bias in AI Models:"})," ML models can inherit biases from training data, leading to disparities in healthcare outcomes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Infrastructure & Accessibility:"})," Low-income regions may lack the digital infrastructure needed for ML implementation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regulation & Trust:"})," Ensuring ML applications comply with healthcare standards and ethical guidelines."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('/kaggle/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n"})}),"\n",(0,i.jsx)(n.h2,{id:"beginner-friendly-data-analysis-notebook",children:"Beginner-Friendly Data Analysis Notebook"}),"\n",(0,i.jsx)(n.p,{children:"This notebook is designed for beginners and new learners who want to develop their data analysis and visualization skills using Python. Follow along, learn, and take small steps towards building confidence in handling datasets!"}),"\n",(0,i.jsx)(n.p,{children:"Each task has a partial solution to guide you, and you are encouraged to complete the remaining parts."}),"\n",(0,i.jsx)(n.p,{children:"\u26a0\ufe0f Important Warning:"}),"\n",(0,i.jsx)(n.p,{children:"Before seeking help from tools like ChatGPT or online resources, try using your own skills, logic, and prior learning to even your friends.\nOnly use external help if you're truly stuck after a real hard effort.\nPractice makes progress!"}),"\n",(0,i.jsx)(n.h4,{id:"instructions",children:"Instructions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Carefully read the task descriptions."}),"\n",(0,i.jsx)(n.li,{children:'Complete the "Your Code Here" sections.'}),"\n",(0,i.jsx)(n.li,{children:"Execute the cells step-by-step to debug and validate your answers."}),"\n",(0,i.jsx)(n.li,{children:"Reflect on your learning at the end."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Let's get started!"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Import warnings to ignore\nimport warnings\nwarnings.filterwarnings('ignore')\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"#Here we load the dataset\nprint(\"The datase is loading...\\n\")\ndataset_path = 'Global_Health_Statistics.csv'\ndf = pd.read_csv(dataset_path)\ndf.head()\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"The datase is loading...\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n    Country    Year     Disease Name         Disease Category   Prevalence Rate (%)    Incidence Rate (%)   Mortality Rate (%)   Age Group   Gender \tPopulation Affected    ...  Hospital Beds per 1000   Treatment Type   Average Treatment Cost (USD)   Availability of Vaccines/Treatment     Recovery Rate (%)   DALYs   Improvement in 5 Years (%)  Per Capita Income (USD)   Education Index   Urbanization Rate (%)\n0   Italy      2013     Malaria              Respiratory        0.95                   1.55                 8.42                 0-18        Male       471007                 ...  7.58                     Medication       21064                          No                                     91.82               4493    2.16                        6886                      0.79              86.02\n1   France     2002     Ebola                Parasitic          12.46                  8.63                 8.75                 61+         Male       634318                 ...  5.11                     Surgery          47851                          Yes                                    76.65               2366    4.82                        80639                     0.74              45.52\n2   Turkey     2015     COVID-19             Genetic            0.91                   2.35                 6.22                 36-60       Male       154878                 ...  3.49                     Vaccination      27834                          Yes                                    98.55               41      5.81                        12245                     0.41              40.20\n3   Indonesia  2011     Parkinson's Disease  Autoimmune         4.68                   6.29                 3.99                 0-18        Other      446224                 ...  8.44                     Surgery          144                            Yes                                    67.35               3201    2.22                        49336                     0.49              58.47\n4   Italy      2013     Tuberculosis         Genetic            0.83                   13.59                7.01                 61+         Male       472908                 ...  5.90                     Medication       8908                           Yes                                    50.06               2832    6.93                        47701                     0.50              48.14\n\n5 rows \xd7 22 columns\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\ndf.head(3)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-1",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n    Country   Year   Disease   Category     Prev Rate (%)   Inc Rate (%)   Mort Rate (%)   Age      Gender   Pop Affected   Health Access (%)   Doctors/1000   Beds/1000   Treatment      Avg Cost (USD)   Vaccines Avail   Recovery (%)   DALYs   5yr Improvement (%)   Income (USD)   Edu Index   Urban Rate (%)\n0   Italy     2013   Malaria   Respiratory  0.95            1.55           8.42            0-18     Male     471007         57.74               3.34           7.58        Medication     21064            No               91.82          4493    2.16                  16886          0.79        86.02\n1   France    2002   Ebola     Parasitic    12.46           8.63           8.75            61+      Male     634318         89.21               1.33           5.11        Surgery        47851            Yes              76.65          2366    4.82                  80639          0.74        45.52\n2   Turkey    2015   COVID-19  Genetic      0.91            2.35           6.22            36-60    Male     154878         56.41               4.07           3.49        Vaccination    27834            Yes              98.55          41      5.81                  12245          0.41        40.20\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'print("Dataset shape and size:")\nprint(df.shape, df.size)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-2",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Dataset shape and size:\n(1000000, 22) 22000000\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'print("Dataset columns:")\nprint(df.columns)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-3",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Dataset columns:\nIndex(['Country', 'Year', 'Disease', 'Category', 'Prev Rate (%)', 'Inc Rate (%)', 'Mort Rate (%)', 'Age', 'Gender', 'Pop Affected', 'Health Access (%)', 'Doctors/1000', 'Beds/1000', 'Treatment', 'Avg Cost (USD)', 'Vaccines Avail', 'Recovery (%)', 'DALYs', '5yr Improvement (%)', 'Income (USD)', 'Edu Index', 'Urban Rate (%)'], dtype='object')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"eda",children:"EDA"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"print(\"\\n### Group by the country ###\")\ngrouped_by_country = df.groupby('Country')\nprint(grouped_by_country.size())\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-4",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"### Group by the country ###\nCountry\nArgentina       49798\nAustralia       49953\nBrazil          49687\nCanada          50114\nChina           50066\nFrance          49943\nGermany         50176\nIndia           49760\nIndonesia       49756\nItaly           49839\nJapan           49764\nMexico          50080\nNigeria         50046\nRussia          50532\nSaudi Arabia    49958\nSouth Africa    50408\nSouth Korea     50181\nTurkey          49901\nUK              50125\nUSA             49913\ndtype: int64\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"print(\"\\n### Change column names and make short, meaningful ones ### \\n\")\n# your code here\n\nshort_names = [\n    'Country', 'Year', 'Disease', 'Category', 'Prev Rate (%)', 'Inc Rate (%)',\n    'Mort Rate (%)', 'Age', 'Gender', 'Pop Affected', 'Health Access (%)',\n    'Doctors/1000', 'Beds/1000', 'Treatment', 'Avg Cost (USD)', 'Vaccines Avail',\n    'Recovery (%)', 'DALYs', '5yr Improvement (%)', 'Income (USD)', 'Edu Index', 'Urban Rate (%)'\n]\n\ndf.columns = short_names #Trying to rename\n\n# Display the updated DataFrame\ndf.head(3)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-5",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n### Change column names and make short, meaningful ones ###\n\n    Country   Year   Disease   Category      Prev Rate (%)   Inc Rate (%)   Mort Rate (%)   Age     Gender   Pop Affected   Health Access (%)   Doctors/1000   Beds/1000   Treatment      Avg Cost (USD)   Vaccines Avail   Recovery (%)   DALYs    5yr Improvement (%)    Income (USD)   Edu Index   Urban Rate (%)\n0   Italy     2013   Malaria   Respiratory   0.95            1.55           8.42            0-18    Male     471007         57.74               3.34           7.58        Medication     21064            No               91.82          4493     2.16                   16886          0.79        86.02\n1   France    2002   Ebola     Parasitic     12.46           8.63           8.75            61+     Male     634318         89.21               1.33           5.11        Surgery        47851            Yes              76.65          2366     4.82                   80639          0.74        45.52\n2   Turkey    2015   COVID-19  Genetic       0.91            2.35           6.22            36-60   Male     154878         56.41               4.07           3.49        Vaccination    27834            Yes              98.55          41       5.81                   12245          0.41        40.20\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"There are some other ways as well try them too."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'print("\\n### Dataset Information ###")\ndf.info()\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-6",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"### Dataset Information ###\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1000000 entries, 0 to 999999\nData columns (total 22 columns):\n #   Column               Non-Null Count    Dtype\n---  ------               --------------    -----\n 0   Country              1000000 non-null  object\n 1   Year                 1000000 non-null  int64\n 2   Disease              1000000 non-null  object\n 3   Category             1000000 non-null  object\n 4   Prev Rate (%)        1000000 non-null  float64\n 5   Inc Rate (%)         1000000 non-null  float64\n 6   Mort Rate (%)        1000000 non-null  float64\n 7   Age                  1000000 non-null  object\n 8   Gender               1000000 non-null  object\n 9   Pop Affected         1000000 non-null  int64\n 10  Health Access (%)    1000000 non-null  float64\n 11  Doctors/1000         1000000 non-null  float64\n 12  Beds/1000            1000000 non-null  float64\n 13  Treatment            1000000 non-null  object\n 14  Avg Cost (USD)       1000000 non-null  int64\n 15  Vaccines Avail       1000000 non-null  object\n 16  Recovery (%)         1000000 non-null  float64\n 17  DALYs                1000000 non-null  int64\n 18  5yr Improvement (%)  1000000 non-null  float64\n 19  Income (USD)         1000000 non-null  int64\n 20  Edu Index            1000000 non-null  float64\n 21  Urban Rate (%)       1000000 non-null  float64\ndtypes: float64(10), int64(5), object(7)\nmemory usage: 167.8+ MB\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'print("\\n### Checking for Missing Values ###")\nprint(df.isnull().sum())\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-7",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n### Checking for Missing Values ###\nCountry                0\nYear                   0\nDisease                0\nCategory               0\nPrev Rate (%)          0\nInc Rate (%)           0\nMort Rate (%)          0\nAge                    0\nGender                 0\nPop Affected           0\nHealth Access (%)      0\nDoctors/1000           0\nBeds/1000              0\nTreatment              0\nAvg Cost (USD)         0\nVaccines Avail         0\nRecovery (%)           0\nDALYs                  0\n5yr Improvement (%)    0\nIncome (USD)           0\nEdu Index              0\nUrban Rate (%)         0\ndtype: int64\n"})}),"\n",(0,i.jsx)(n.h2,{id:"task-1-explore-high-treatment-costs",children:"Task 1: Explore High Treatment Costs"}),"\n",(0,i.jsx)(n.p,{children:"We want to identify disease categories where the average treatment cost exceeds $5,000. The following code calculates the average treatment cost for each disease category. Complete the rest to filter the results."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"print(\"\\n### High Treatment Costs ###\")\navg_treatment_cost = df.groupby('Category')['Avg Cost (USD)'].mean()\n\n# 5000$ \xfczerindeki tedavi maliyetlerini filtreleme\nhigh_cost_diseases = avg_treatment_cost[avg_treatment_cost > 5000]\nprint(high_cost_diseases)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-8",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"### High Treatment Costs ###\nCategory\nAutoimmune        25124.453381\nBacterial         24958.060657\nCardiovascular    25019.609335\nChronic           25019.360949\nGenetic           24991.234814\nInfectious        25021.655117\nMetabolic         24964.149170\nNeurological      25017.514703\nParasitic         24972.076740\nRespiratory       25066.355632\nViral             24959.072181\nName: Avg Cost (USD), dtype: float64\n"})}),"\n",(0,i.jsx)(n.h2,{id:"task-2-visualize-healthcare-access-vs-mortality-rate",children:"Task 2: Visualize Healthcare Access vs Mortality Rate"}),"\n",(0,i.jsx)(n.p,{children:"We will create a scatter plot to visualize the relationship between Healthcare Access (%) and Mortality Rate (%) across different regions."}),"\n",(0,i.jsx)(n.p,{children:"This task helps you understand whether higher healthcare access correlates with lower mortality rates."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"print(\"\\n### Healthcare Access vs Mortality Rate ###\")\n\n# Scatter Plot\nplt.figure(figsize=(12, 6))\nsns.scatterplot(\n    x='Health Access (%)',\n    y='Mort Rate (%)',\n    data=df,\n    hue='Category',\n    palette='YlOrRd'\n)\nplt.title(\"Healthcare Access vs Mortality Rate\")\nplt.xlabel(\"Healthcare Access (%)\")\nplt.ylabel(\"Mortality Rate (%)\")\nplt.show()\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-9",children:"Output"}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/health/EDA-4-global-health-data/01-healthcare-access-vs.png",alt:"01-healthcare-access-vs.png"}),"\n",(0,i.jsx)(n.h2,{id:"task-3-identify-top-5-most-prevalent-diseases",children:"Task 3: Identify Top 5 Most Prevalent Diseases"}),"\n",(0,i.jsx)(n.p,{children:"Group the data by Disease Name and calculate the total prevalence rate. Find the top 5 diseases with the highest prevalence rate."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"print(\"\\n### Top 5 Most Prevalent Diseases ###\")\nprevalence = df.groupby('Disease')['Prev Rate (%)'].sum().sort_values(ascending=False)\ntop_5_diseases = prevalence.head(5)\nprint(top_5_diseases)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-10",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n### Top 5 Most Prevalent Diseases ###\nDisease\nCholera     506925.25\nHIV/AIDS    506703.20\nCOVID-19    506447.35\nDengue      505964.81\nCancer      505779.18\nName: Prev Rate (%), dtype: float64\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-1-prepare-the-data",children:"Step 1: Prepare the Data"}),"\n",(0,i.jsx)(n.p,{children:"We will use the following columns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Healthcare Access (%)' as the feature (X)"}),"\n",(0,i.jsx)(n.li,{children:"Mortality Rate (%)' as the target (y)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Drop missing values for these columns."}),"\n",(0,i.jsx)(n.li,{children:"Split the data into training and testing sets (80-20 split)."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"from sklearn.model_selection import train_test_split\n\n# Eksik verileri d\xfc\u015f\xfcr\ndf.dropna(subset=['Health Access (%)', 'Mort Rate (%)'], inplace=True)\n\n# Feature ve target se\xe7imi\nX = df[['Health Access (%)']]\ny = df['Mort Rate (%)']\n\n# E\u011fitim ve test setlerine ay\u0131rma\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nprint(\"Data Prepared Successfully!\")\nprint(\"Training set size:\", X_train.shape)\nprint(\"Testing set size:\", X_test.shape)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-11",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Data Prepared Successfully!\nTraining set size: (800000, 1)\nTesting set size: (200000, 1)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-train-a-linear-regression-model",children:"Step 2: Train a Linear Regression Model"}),"\n",(0,i.jsx)(n.p,{children:"We will use Linear Regression to predict 'Mortality Rate (%)' using 'Healthcare Access (%)'."}),"\n",(0,i.jsx)(n.p,{children:"Tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Import LinearRegression from sklearn."}),"\n",(0,i.jsx)(n.li,{children:"Initialize the model and train it using the training data."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'from sklearn.linear_model import LinearRegression\n\n# Model olu\u015ftur ve e\u011fit\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nprint("Model Trained Successfully!")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-12",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Model Trained Successfully!\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3-evaluate-the-model",children:"Step 3: Evaluate the Model"}),"\n",(0,i.jsx)(n.p,{children:"We will evaluate the model's performance using:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mean Squared Error (MSE)"}),"\n",(0,i.jsx)(n.li,{children:"R-squared (R2) score"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Make predictions on the test set."}),"\n",(0,i.jsx)(n.li,{children:"Calculate the MSE and R2 score."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'from sklearn.metrics import mean_squared_error, r2_score\n\n# Tahmin yap\ny_pred = model.predict(X_test)\n\n# Performans metriklerini hesapla\nmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint("\\n### Model Performance ###")\nprint(f"Mean Squared Error (MSE): {mse:.2f}")\nprint(f"R-squared (R2 Score): {r2:.2f}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-13",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"### Model Performance ###\nMean Squared Error (MSE): 8.19\nR-squared (R2 Score): -0.00\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-4-visualize-predictions-vs-actual-values",children:"Step 4: Visualize Predictions vs Actual Values"}),"\n",(0,i.jsx)(n.p,{children:"Tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a scatter plot for actual vs predicted values."}),"\n",(0,i.jsx)(n.li,{children:"Add a line for perfect predictions (y = x)."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'plt.figure(figsize=(10, 6))\nplt.scatter(y_test, y_pred, color=\'red\', alpha=0.5)  # Noktalar\u0131 k\u0131rm\u0131z\u0131 yap\u0131yoruz\nplt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], \'b--\', lw=2)  # Kesikli \xe7izgiyi mavi yap\u0131yoruz\n\nplt.title("Actual vs Predicted Mortality Rate")\nplt.xlabel("Actual Mortality Rate (%)")\nplt.ylabel("Predicted Mortality Rate (%)")\nplt.show()\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-14",children:"Output"}),"\n",(0,i.jsx)("img",{src:"/img/ai/machine-learning/health/EDA-4-global-health-data/02-actual-vs-predicted.png",alt:"02-actual-vs-predicted.png"}),"\n",(0,i.jsx)(n.h3,{id:"step-5-challenge",children:"Step 5: Challenge"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"You are expected to add more features (e.g., 'Prevalence Rate (%)', 'Average Treatment Cost (USD)') to improve the model."}),"\n",(0,i.jsx)(n.li,{children:"You are expected to use a different algorithm (e.g., Decision Tree, Random Forest)."}),"\n",(0,i.jsx)(n.li,{children:"You are expected to evaluate performance using Cross-Validation."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Your Tasks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Expand the input features."}),"\n",(0,i.jsx)(n.li,{children:"Train a new model using your choice of algorithm."}),"\n",(0,i.jsx)(n.li,{children:"Compare the performance with Linear Regression."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'from sklearn.model_selection import cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Yeni \xf6zellikleri se\xe7iyoruz\nX_new = df[[\'Health Access (%)\', \'Prev Rate (%)\', \'Avg Cost (USD)\']]\ny_new = df[\'Mort Rate (%)\']\n\n# Eksik verileri d\xfc\u015f\xfcr\nX_new.dropna(inplace=True)\ny_new = y_new[X_new.index]  # X ve y\'nin hizalanmas\u0131n\u0131 sa\u011fl\u0131yoruz\n\n# E\u011fitim ve test setlerine ay\u0131rma\nX_train_new, X_test_new, y_train_new, y_test_new = train_test_split(X_new, y_new, test_size=0.2, random_state=42)\n\n\n\n# Decision Tree modeli olu\u015ftur ve e\u011fit\ndt_model = DecisionTreeRegressor(random_state=42)\ndt_model.fit(X_train_new, y_train_new)\n\n# Tahmin yap\ny_pred_dt = dt_model.predict(X_test_new)\n\n# Performans metriklerini hesapla\nmse_dt = mean_squared_error(y_test_new, y_pred_dt)\nr2_dt = r2_score(y_test_new, y_pred_dt)\n\nprint("\\n### Decision Tree Model Performance ###")\nprint(f"Mean Squared Error (MSE): {mse_dt:.2f}")\nprint(f"R-squared (R2 Score): {r2_dt:.2f}")\n\n\n# Cross-validation ile performans\u0131 de\u011ferlendirme\ncv_scores_dt = cross_val_score(dt_model, X_new, y_new, cv=5, scoring=\'r2\')\n\nprint("\\n### Cross-Validation R2 Scores (Decision Tree) ###")\nprint(cv_scores_dt)\nprint(f"Mean R2 Score: {np.mean(cv_scores_dt):.2f}")\n\n\n# Linear Regression Modeli i\xe7in cross-validation\ncv_scores_lr = cross_val_score(model, X, y, cv=5, scoring=\'r2\')\n\nprint("\\n### Cross-Validation R2 Scores (Linear Regression) ###")\nprint(cv_scores_lr)\nprint(f"Mean R2 Score: {np.mean(cv_scores_lr):.2f}")\n\n# Performans kar\u015f\u0131la\u015ft\u0131rmas\u0131\nprint("\\n### Performance Comparison ###")\nprint(f"Linear Regression - Mean R2: {np.mean(cv_scores_lr):.2f}")\nprint(f"Decision Tree - Mean R2: {np.mean(cv_scores_dt):.2f}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"output-15",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"### Decision Tree Model Performance ###\nMean Squared Error (MSE): 16.65\nR-squared (R2 Score): -1.03\n\n### Cross-Validation R2 Scores (Decision Tree) ###\n[-1.03504351 -1.0374017  -1.03589653 -1.03985854 -1.04207183]\nMean R2 Score: -1.04\n\n### Cross-Validation R2 Scores (Linear Regression) ###\n[-5.33452368e-06 -6.77185006e-06 -3.17034059e-06 -1.67578961e-05\n -1.13589043e-05]\nMean R2 Score: -0.00\n\n### Performance Comparison ###\nLinear Regression - Mean R2: -0.00\nDecision Tree - Mean R2: -1.04\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"On the base + sources"})}),":",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.a,{href:"https://www.kaggle.com/code/erenkarabacak1/eda-4-global-health-data/notebook",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"EDA 4 Global Health data"})})})," ",(0,i.jsx)("br",{})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var a=t(6540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);