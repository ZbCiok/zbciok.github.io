"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[9486],{871:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>b,frontMatter:()=>u,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherMultiSubscriber","title":"Publisher Multi Subscriber","description":"Description","source":"@site/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherMultiSubscriber.mdx","sourceDirName":"streams/reactive-streams/java-util-concurrent-Flow/examples","slug":"/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherMultiSubscriber","permalink":"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherMultiSubscriber","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Publisher One Subscriber","permalink":"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowPublisherOneSubscriber"},"next":{"title":"Subscriber","permalink":"/docs/streams/reactive-streams/java-util-concurrent-Flow/examples/FlowSubscriber"}}');var t=r(4848),s=r(8453);const u={sidebar_position:2},o="Publisher Multi Subscriber",l={},a=[{value:"Description",id:"description",level:4},{value:"Requirements",id:"requirements",level:4},{value:"Code",id:"code",level:4},{value:"Output",id:"output",level:4},{value:"Running Example Code",id:"running-example-code",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"publisher-multi-subscriber",children:"Publisher Multi Subscriber"})}),"\n",(0,t.jsx)("img",{src:"/img/streams/reactive-streams/flow-api/java-9-flow-api-publisher-02.png",alt:"flow-publisher"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"A producer of items (and related control messages) received by Subscribers.\nEach current Flow.Subscriber receives the same items (via method onNext) in the same order,\nunless drops or errors are encountered."}),"\n",(0,t.jsx)(n.h4,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsx)(n.p,{children:"JDK 21"}),"\n",(0,t.jsx)(n.h4,{id:"code",children:"Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.jreact;\n\nimport java.util.concurrent.Flow;\nimport java.util.concurrent.SubmissionPublisher;\nimport java.util.concurrent.TimeUnit;\n\npublic class MyPublisherMultiSubscriber implements java.util.concurrent.Flow.Subscriber<String> {\n\n    private Flow.Subscription subscription;\n\n    public void flowPublisherMultiSubscriber() {\n        System.out.printf("main (tid=%d)%n", Thread.currentThread().threadId());\n\n        try (final var submission = new SubmissionPublisher<String>()) {\n\n            System.out.println("-- subscribe --");\n\n            final Flow.Publisher<String> publisher = submission;\n            publisher.subscribe(new MyPublisherMultiSubscriber("A"));\n            publisher.subscribe(new MyPublisherMultiSubscriber("B"));\n            publisher.subscribe(new MyPublisherMultiSubscriber("C"));\n\n            TimeUnit.SECONDS.sleep(1);\n            System.out.println("-- submit --");\n\n            submission.submit("abc");\n            submission.submit("XYZ");\n\n            TimeUnit.SECONDS.sleep(1);\n            System.out.println("-- close --");\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private final String name;\n\n    MyPublisherMultiSubscriber(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void onSubscribe(Flow.Subscription subscription) {\n        System.out.println(name + " : onSubscribe");\n        subscription.request(2);\n    }\n\n    @Override\n    public void onNext(String item) {\n        System.out.println(name + " : onNext item = " + item);\n    }\n\n    @Override\n    public void onError(Throwable throwable) {\n        System.out.println(name + " : onError");\n    }\n\n    @Override\n    public void onComplete() {\n        System.out.println(name + " : onComplete");\n    }\n\n    @Override\n    public String toString() {\n        return "name = " + name;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"main (tid=1)\n-- subscribe --\nC : onSubscribe\nB : onSubscribe\nA : onSubscribe\n-- submit --\nC : onNext item = abc\nB : onNext item = abc\nB : onNext item = XYZ\nA : onNext item = abc\nA : onNext item = XYZ\nC : onNext item = XYZ\n-- close --\nA : onComplete\nB : onComplete\nC : onComplete\n"})}),"\n",(0,t.jsx)(n.h4,{id:"running-example-code",children:(0,t.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/streams/reactive-streams/java-flow-api/java-flow-api-publisher-multi-subscriber",children:"Running Example Code"})})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>u,x:()=>o});var i=r(6540);const t={},s=i.createContext(t);function u(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:u(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);