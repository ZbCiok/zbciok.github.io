"use strict";(self.webpackChunkjreact_com_docsaurus_01=self.webpackChunkjreact_com_docsaurus_01||[]).push([[5670],{4365:(t,n,e)=>{e.d(n,{W:()=>c});var a=e(6540),r=e(502);const o=["zero","one","two","few","many","other"];function i(t){return o.filter((n=>t.includes(n)))}const s={locale:"en",pluralForms:i(["one","other"]),select:t=>1===t?"one":"other"};function d(){const{i18n:{currentLocale:t}}=(0,r.A)();return(0,a.useMemo)((()=>{try{return function(t){const n=new Intl.PluralRules(t);return{locale:t,pluralForms:i(n.resolvedOptions().pluralCategories),select:t=>n.select(t)}}(t)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${t}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),s}}),[t])}function c(){const t=d();return{selectMessage:(n,e)=>function(t,n,e){const a=t.split("|");if(1===a.length)return a[0];a.length>e.pluralForms.length&&console.error(`For locale=${e.locale}, a maximum of ${e.pluralForms.length} plural forms are expected (${e.pluralForms.join(",")}), but the message contains ${a.length}: ${t}`);const r=e.select(n),o=e.pluralForms.indexOf(r);return a[Math.min(o,a.length-1)]}(e,n,t)}}},7170:(t,n,e)=>{e.d(n,{A:()=>y});e(6540);var a=e(4164),r=e(7936),o=e(7634),i=e(4365),s=e(5242),d=e(9979),c=e(4861);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var p=e(4848);function m(t){let{href:n,children:e}=t;return(0,p.jsx)(o.A,{href:n,className:(0,a.A)("card padding--lg",l.cardContainer),children:e})}function u(t){let{href:n,icon:e,title:r,description:o}=t;return(0,p.jsxs)(m,{href:n,children:[(0,p.jsxs)(c.A,{as:"h2",className:(0,a.A)("text--truncate",l.cardTitle),title:r,children:[e," ",r]}),o&&(0,p.jsx)("p",{className:(0,a.A)("text--truncate",l.cardDescription),title:o,children:o})]})}function g(t){let{item:n}=t;const e=(0,r.Nr)(n),a=function(){const{selectMessage:t}=(0,i.W)();return n=>t(n,(0,d.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return e?(0,p.jsx)(u,{href:e,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??a(n.items.length)}):null}function h(t){let{item:n}=t;const e=(0,s.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,r.cC)(n.docId??void 0);return(0,p.jsx)(u,{href:n.href,icon:e,title:n.label,description:n.description??a?.description})}function b(t){let{item:n}=t;switch(n.type){case"link":return(0,p.jsx)(h,{item:n});case"category":return(0,p.jsx)(g,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function f(t){let{className:n}=t;const e=(0,r.$S)();return(0,p.jsx)(y,{items:e.items,className:n})}function y(t){const{items:n,className:e}=t;if(!n)return(0,p.jsx)(f,{...t});const o=(0,r.d1)(n);return(0,p.jsx)("section",{className:(0,a.A)("row",e),children:o.map(((t,n)=>(0,p.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,p.jsx)(b,{item:t})},n)))})}},8453:(t,n,e)=>{e.d(n,{R:()=>i,x:()=>s});var a=e(6540);const r={},o=a.createContext(r);function i(t){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),a.createElement(o.Provider,{value:n},t.children)}},9029:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"aws/dynamodb/examples/ddb-spring-data-1","title":"ddb-spring-data-1","description":"We will describe two ways for accessing DynamoDB from Spring applications:","source":"@site/docs/aws/dynamodb/examples/ddb-spring-data-1.mdx","sourceDirName":"aws/dynamodb/examples","slug":"/aws/dynamodb/examples/ddb-spring-data-1","permalink":"/docs/aws/dynamodb/examples/ddb-spring-data-1","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"tutorialSidebar","previous":{"title":"ddb-enh-client-spring-boot-1","permalink":"/docs/aws/dynamodb/examples/ddb-enh-client-spring-boot-1"},"next":{"title":"Spring Boot SNS Lambda DynamoDB","permalink":"/docs/aws/dynamodb/examples/spring-boot-SNS-lambda-dynamodb"}}');var r=e(4848),o=e(8453),i=e(7170),s=e(3304);const d={sidebar_position:40},c="ddb-spring-data-1",l={},p=[{value:"<em><strong>DynamoDB Local Spring Data</strong></em>",id:"dynamodb-local-spring-data",level:2},{value:"Description",id:"description",level:2},{value:"Run Docker &amp; DynamoDBLocal",id:"run-docker--dynamodblocal",level:2},{value:"Create table &amp; items <em><strong>(e.g.)</strong></em>",id:"create-table--items-eg",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"application.properties",id:"applicationproperties",level:3},{value:"pom.xml",id:"pomxml",level:3},{value:"DynamoDbConfig.java",id:"dynamodbconfigjava",level:3},{value:"MusicEntity.java",id:"musicentityjava",level:3},{value:"Running and Testing",id:"running-and-testing",level:2},{value:"Output <em><strong>(Browser)</strong></em>:",id:"output-browser",level:3},{value:"Source Code",id:"source-code",level:2}];function m(t){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ddb-spring-data-1",children:"ddb-spring-data-1"})}),"\n",(0,r.jsx)(n.p,{children:"We will describe two ways for accessing DynamoDB from Spring applications:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Using DynamoDB module of Spring Data"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/aws/dynamodb/examples/ddb-enh-client-spring-boot-1",children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Using Enhanced Client for DynamoDB which is part of AWS SDK 2.0."})})})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dynamodb-local-spring-data",children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"DynamoDB Local Spring Data"})})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Using DynamoDB module of Spring Data"})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"\nThe Spring Data module for DynamoDB is a community module for accessing AWS DynamoDB with familiar Spring Data constructs of data objects and repository interfaces."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JDK 17+"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://maven.apache.org/install.html",children:"Maven 3.8.5+"})," & ",(0,r.jsx)(n.a,{href:"https://www.java.com/en/download/help/download_options.html",children:"Java 17"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," - for running LocalStack"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"run-docker--dynamodblocal",children:"Run Docker & DynamoDBLocal"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/auxiliary-software/dynamodb-admin",children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"DynamoDB Admin"})})})}),"\n",(0,r.jsxs)(n.h2,{id:"create-table--items-eg",children:["Create table & items ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"(e.g.)"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "AttributeDefinitions": [\n    {\n      "AttributeName": "id",\n      "AttributeType": "N"\n    }\n  ],\n  "TableName": "Music",\n  "KeySchema": [\n    {\n      "AttributeName": "id",\n      "KeyType": "HASH"\n    }\n  ],\n  "TableStatus": "ACTIVE",\n  "CreationDateTime": "2024-09-15T09:36:39.613Z",\n  "ProvisionedThroughput": {\n    "LastIncreaseDateTime": "1970-01-01T00:00:00.000Z",\n    "LastDecreaseDateTime": "1970-01-01T00:00:00.000Z",\n    "NumberOfDecreasesToday": 0,\n    "ReadCapacityUnits": 3,\n    "WriteCapacityUnits": 3\n  },\n  "TableSizeBytes": 95,\n  "ItemCount": 2,\n  "TableArn": "arn:aws:dynamodb:ddblocal:000000000000:table/Music",\n  "DeletionProtectionEnabled": false\n}\n'})}),"\n",(0,r.jsx)("img",{src:"/img/aws/dynamodb/ddb-spring-data-01.png",alt:"ddb-spring-data-01.png"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502\xa0\xa0 \u251c\u2500\u2500 java\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 com\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 jreact\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 dynamodb\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 Application.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 DynamoDbConfig.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 MusicController.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 MusicEntity.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 MusicRepository.java\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u2514\u2500\u2500 MusicService.java\n    \u2502\xa0\xa0 \u2514\u2500\u2500 resources\n    \u2502\xa0\xa0     \u2514\u2500\u2500 application.properties\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 jreact\n                    \u2514\u2500\u2500 dynamodb\n                        \u2514\u2500\u2500 MusicServiceTest.java\n"})}),"\n",(0,r.jsx)(n.h3,{id:"applicationproperties",children:"application.properties"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"dynamodb.endpoint=http://localhost:8000\nregion=us-east-1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\txsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.3.3</version>\n\t\t<relativePath/> \x3c!-- lookup parent from repository --\x3e\n\t</parent>\n\n\t<groupId>com.jreact</groupId>\n\t<artifactId>ddb-spring-data-1</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>ddb-spring-data-1</name>\n\t<description>ddb-spring-data-1</description>\n\n\t<properties>\n\t\t<java.version>17</java.version>\n\t\t<maven.compiler.source>17</maven.compiler.source>\n\t\t<maven.compiler.target>17</maven.compiler.target>\n\t\t<lombok.version>1.18.34</lombok.version>\n\t\t<aws.java.sdk.version>2.28.0</aws.java.sdk.version>\n\t</properties>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\t\t\t<dependency>\n\t\t\t\t<groupId>software.amazon.awssdk</groupId>\n\t\t\t\t<artifactId>bom</artifactId>\n\t\t\t\t<version>${aws.java.sdk.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</dependencyManagement>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>software.amazon.awssdk</groupId>\n\t\t\t<artifactId>dynamodb</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>software.amazon.awssdk</groupId>\n\t\t\t<artifactId>dynamodb-enhanced</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>com.google.code.gson</groupId>\n\t\t\t<artifactId>gson</artifactId>\n\t\t\t<version>2.10.1</version>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>com.amazonaws</groupId>\n\t\t\t<artifactId>DynamoDBLocal</artifactId>\n\t\t\t<version>2.5.1</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.hamcrest</groupId>\n\t\t\t<artifactId>hamcrest-core</artifactId>\n\t\t\t<version>2.2</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.11.0</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>${maven.compiler.source}</source>\n\t\t\t\t\t<target>${maven.compiler.target}</target>\n\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t\t<version>${lombok.version}</version>\n\t\t\t\t\t\t</path>\n\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-dependency-plugin</artifactId>\n\t\t\t\t<version>3.6.0</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>copy</id>\n\t\t\t\t\t\t<phase>test-compile</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>copy-dependencies</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<includeScope>test</includeScope>\n\t\t\t\t\t\t\t<includeTypes>so,dll,dylib</includeTypes>\n\t\t\t\t\t\t\t<outputDirectory>${project.build.directory}/native-libs</outputDirectory>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\x3c!-- attach IT tests to verify phase --\x3e\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-failsafe-plugin</artifactId>\n\t\t\t\t<version>3.1.2</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>integration-test</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>integration-test</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t\t<configuration>\n\t\t\t\t\t<systemPropertyVariables>\n\t\t\t\t\t\t<sqlite4java.library.path>${project.build.directory}/native-libs</sqlite4java.library.path>\n\t\t\t\t\t</systemPropertyVariables>\n\t\t\t\t\t<argLine>\n\t\t\t\t\t\t--add-opens java.base/java.time=ALL-UNNAMED\n\t\t\t\t\t</argLine>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>build-helper-maven-plugin</artifactId>\n\t\t\t\t<version>3.4.0</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>add-integration-test-source</id>\n\t\t\t\t\t\t<phase>generate-test-sources</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>add-test-source</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sources>\n\t\t\t\t\t\t\t\t<source>src/integration-test/java</source>\n\t\t\t\t\t\t\t</sources>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>add-integration-test-resource</id>\n\t\t\t\t\t\t<phase>generate-test-resources</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>add-test-resource</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<resources>\n\t\t\t\t\t\t\t\t<resource>\n\t\t\t\t\t\t\t\t\t<directory>src/integration-test/resources</directory>\n\t\t\t\t\t\t\t\t</resource>\n\t\t\t\t\t\t\t</resources>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dynamodbconfigjava",children:"DynamoDbConfig.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'package com.jreact.dynamodb;\n\nimport java.net.URI;\nimport lombok.NoArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;\nimport software.amazon.awssdk.enhanced.dynamodb.DynamoDbTable;\nimport software.amazon.awssdk.enhanced.dynamodb.TableSchema;\nimport software.amazon.awssdk.enhanced.dynamodb.extensions.VersionedRecordExtension;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n\n@Configuration\n@NoArgsConstructor\n@Slf4j\npublic class DynamoDbConfig {\n    @Value("${dynamodb.endpoint:}")\n    private String dynamodbEndpoint;\n\n    @Value("${region:}")\n    private String region;\n\n    @Bean\n    public DynamoDbClient getDynamoDbClient() {\n        var builder = DynamoDbClient\n                .builder()\n                .credentialsProvider(DefaultCredentialsProvider.create());\n\n        if (dynamodbEndpoint != null && !dynamodbEndpoint.isBlank()) {\n            builder.region(Region.of(region))\n                    .endpointOverride(URI.create(dynamodbEndpoint));\n            log.info("ddb region: " + region);\n            log.info("ddb endpoint:  " + dynamodbEndpoint);\n        }\n        return builder.build();\n    }\n\n    @Bean\n    public DynamoDbEnhancedClient getDynamoDbEnhancedClient(DynamoDbClient ddbc) {\n        return DynamoDbEnhancedClient\n                .builder()\n                .extensions(VersionedRecordExtension.builder().build())\n                .dynamoDbClient(ddbc)\n                .build();\n    }\n\n    @Bean\n    public DynamoDbTable<MusicEntity> getMusicLocaleTable(DynamoDbEnhancedClient dbClient) {\n        return dbClient.table(MusicEntity.TABLE_NAME, TableSchema.fromBean(MusicEntity.class));\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"musicentityjava",children:"MusicEntity.java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.jreact.dynamodb;\n\nimport lombok.Data;\nimport software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;\nimport software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;\n\n@DynamoDbBean\n@Data\npublic class MusicEntity {\n    public static final String TABLE_NAME = "Music";\n\n    private String musicCode;\n    private String musicDisplayName;\n\n    @DynamoDbPartitionKey\n    public String getMusicCode() {\n        return musicCode;\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"running-and-testing",children:"Running and Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mvn clean package\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mvn spring-boot:run\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"output-browser",children:["Output ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"(Browser)"})}),":"]}),"\n",(0,r.jsx)("img",{src:"/img/aws/dynamodb/localhost-browse-01.png",alt:"localhost-browse-01.png"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"source-code",children:"Source Code"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/ddb-spring-data-1",children:"https://github.com/ZbCiok/zjc-examples/tree/main/aws/aws/dynamodb/ddb-spring-data-1"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n","\n",(0,r.jsx)(i.A,{items:(0,s.$S)().items})]})}function u(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(m,{...t})}):m(t)}}}]);